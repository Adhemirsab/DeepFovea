node {
  name: "alpha/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "alpha"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "alpha/Assign"
  op: "Assign"
  input: "alpha"
  input: "alpha/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "alpha/read"
  op: "Identity"
  input: "alpha"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@alpha"
      }
    }
  }
}
node {
  name: "gModel_0/input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_1/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_1/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/input"
  input: "gModel_0/gLEnc_128to64/lambda_1/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_1/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_1/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_1/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_128to64/lambda_1/Placeholder"
  input: "gModel_0/gLEnc_128to64/lambda_1/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\202\000\000\000\202\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_2/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_128to64/lambda_1/MirrorPad"
  input: "gModel_0/gLEnc_128to64/lambda_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_2/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 130
        }
        dim {
          size: 130
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\202\000\000\000\202\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_2/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_128to64/lambda_2/Placeholder"
  input: "gModel_0/gLEnc_128to64/lambda_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\004\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2679574489593506
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2747207
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/mul"
  input: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 4
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_128to64/conv2d_1/kernel"
  input: "gModel_0/gLEnc_128to64/conv2d_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_128to64/conv2d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_128to64/conv2d_1/bias"
  input: "gModel_0/gLEnc_128to64/conv2d_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_128to64/conv2d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_1/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_128to64/lambda_2/Reshape"
  input: "gModel_0/gLEnc_128to64/conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_128to64/conv2d_1/convolution"
  input: "gModel_0/gLEnc_128to64/conv2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_3/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_3/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_128to64/conv2d_1/BiasAdd"
  input: "gModel_0/gLEnc_128to64/lambda_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_3/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_3/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_3/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_128to64/lambda_3/Placeholder"
  input: "gModel_0/gLEnc_128to64/lambda_3/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/elu_1/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_128to64/lambda_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_4/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_4/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_128to64/elu_1/Elu"
  input: "gModel_0/gLEnc_128to64/lambda_4/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_4/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_4/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_4/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_128to64/lambda_4/Placeholder"
  input: "gModel_0/gLEnc_128to64/lambda_4/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_5/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\202\000\000\000\202\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_5/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_128to64/lambda_4/MirrorPad"
  input: "gModel_0/gLEnc_128to64/lambda_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_5/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 130
        }
        dim {
          size: 130
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_5/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\202\000\000\000\202\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_5/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_128to64/lambda_5/Placeholder"
  input: "gModel_0/gLEnc_128to64/lambda_5/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09473726898431778
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 604721
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/mul"
  input: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_128to64/conv2d_2/kernel"
  input: "gModel_0/gLEnc_128to64/conv2d_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_128to64/conv2d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_128to64/conv2d_2/bias"
  input: "gModel_0/gLEnc_128to64/conv2d_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_128to64/conv2d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_2/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_128to64/lambda_5/Reshape"
  input: "gModel_0/gLEnc_128to64/conv2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_128to64/conv2d_2/convolution"
  input: "gModel_0/gLEnc_128to64/conv2d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_6/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_6/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_128to64/conv2d_2/BiasAdd"
  input: "gModel_0/gLEnc_128to64/lambda_6/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_6/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_6/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/lambda_6/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_128to64/lambda_6/Placeholder"
  input: "gModel_0/gLEnc_128to64/lambda_6/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_128to64/elu_2/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_128to64/lambda_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_7/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_7/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_128to64/elu_2/Elu"
  input: "gModel_0/gLEnc_64to32/lambda_7/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_7/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_7/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_7/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_64to32/lambda_7/Placeholder"
  input: "gModel_0/gLEnc_64to32/lambda_7/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_8/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377B\000\000\000B\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_8/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_64to32/lambda_7/MirrorPad"
  input: "gModel_0/gLEnc_64to32/lambda_8/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_8/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 66
        }
        dim {
          size: 66
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_8/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377B\000\000\000B\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_8/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_64to32/lambda_8/Placeholder"
  input: "gModel_0/gLEnc_64to32/lambda_8/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09473726898431778
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5284278
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/mul"
  input: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_64to32/conv2d_3/kernel"
  input: "gModel_0/gLEnc_64to32/conv2d_3/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_64to32/conv2d_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_64to32/conv2d_3/bias"
  input: "gModel_0/gLEnc_64to32/conv2d_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_64to32/conv2d_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_3/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_64to32/lambda_8/Reshape"
  input: "gModel_0/gLEnc_64to32/conv2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_64to32/conv2d_3/convolution"
  input: "gModel_0/gLEnc_64to32/conv2d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_9/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_9/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_64to32/conv2d_3/BiasAdd"
  input: "gModel_0/gLEnc_64to32/lambda_9/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_9/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_9/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_9/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_64to32/lambda_9/Placeholder"
  input: "gModel_0/gLEnc_64to32/lambda_9/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/elu_3/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_64to32/lambda_9/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_10/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_10/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_64to32/elu_3/Elu"
  input: "gModel_0/gLEnc_64to32/lambda_10/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_10/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_10/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_10/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_64to32/lambda_10/Placeholder"
  input: "gModel_0/gLEnc_64to32/lambda_10/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_11/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377B\000\000\000B\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_11/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_64to32/lambda_10/MirrorPad"
  input: "gModel_0/gLEnc_64to32/lambda_11/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_11/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 66
        }
        dim {
          size: 66
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_11/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377B\000\000\000B\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_11/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_64to32/lambda_11/Placeholder"
  input: "gModel_0/gLEnc_64to32/lambda_11/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06698936223983765
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7220004
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/mul"
  input: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_64to32/conv2d_4/kernel"
  input: "gModel_0/gLEnc_64to32/conv2d_4/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_64to32/conv2d_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_64to32/conv2d_4/bias"
  input: "gModel_0/gLEnc_64to32/conv2d_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_64to32/conv2d_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_4/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_64to32/lambda_11/Reshape"
  input: "gModel_0/gLEnc_64to32/conv2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_64to32/conv2d_4/convolution"
  input: "gModel_0/gLEnc_64to32/conv2d_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_12/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_12/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_64to32/conv2d_4/BiasAdd"
  input: "gModel_0/gLEnc_64to32/lambda_12/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_12/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_12/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/lambda_12/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_64to32/lambda_12/Placeholder"
  input: "gModel_0/gLEnc_64to32/lambda_12/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_64to32/elu_4/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_64to32/lambda_12/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_13/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_13/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_64to32/elu_4/Elu"
  input: "gModel_0/gLEnc_32to16/lambda_13/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_13/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_13/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_13/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_32to16/lambda_13/Placeholder"
  input: "gModel_0/gLEnc_32to16/lambda_13/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_14/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\"\000\000\000\"\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_14/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_32to16/lambda_13/MirrorPad"
  input: "gModel_0/gLEnc_32to16/lambda_14/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_14/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 34
        }
        dim {
          size: 34
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_14/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\"\000\000\000\"\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_14/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_32to16/lambda_14/Placeholder"
  input: "gModel_0/gLEnc_32to16/lambda_14/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06698936223983765
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 491873
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/mul"
  input: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_32to16/conv2d_5/kernel"
  input: "gModel_0/gLEnc_32to16/conv2d_5/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_32to16/conv2d_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_32to16/conv2d_5/bias"
  input: "gModel_0/gLEnc_32to16/conv2d_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_32to16/conv2d_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_5/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_32to16/lambda_14/Reshape"
  input: "gModel_0/gLEnc_32to16/conv2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_5/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_32to16/conv2d_5/convolution"
  input: "gModel_0/gLEnc_32to16/conv2d_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_15/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_15/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_32to16/conv2d_5/BiasAdd"
  input: "gModel_0/gLEnc_32to16/lambda_15/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_15/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_15/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_15/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_32to16/lambda_15/Placeholder"
  input: "gModel_0/gLEnc_32to16/lambda_15/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/elu_5/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_32to16/lambda_15/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_16/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_16/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_32to16/elu_5/Elu"
  input: "gModel_0/gLEnc_32to16/lambda_16/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_16/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_16/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_16/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_32to16/lambda_16/Placeholder"
  input: "gModel_0/gLEnc_32to16/lambda_16/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_17/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\"\000\000\000\"\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_17/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_32to16/lambda_16/MirrorPad"
  input: "gModel_0/gLEnc_32to16/lambda_17/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_17/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 34
        }
        dim {
          size: 34
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_17/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\"\000\000\000\"\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_17/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_32to16/lambda_17/Placeholder"
  input: "gModel_0/gLEnc_32to16/lambda_17/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2831164
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/mul"
  input: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_32to16/conv2d_6/kernel"
  input: "gModel_0/gLEnc_32to16/conv2d_6/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_32to16/conv2d_6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_32to16/conv2d_6/bias"
  input: "gModel_0/gLEnc_32to16/conv2d_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_32to16/conv2d_6/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_6/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_32to16/lambda_17/Reshape"
  input: "gModel_0/gLEnc_32to16/conv2d_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/conv2d_6/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_32to16/conv2d_6/convolution"
  input: "gModel_0/gLEnc_32to16/conv2d_6/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_18/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_18/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_32to16/conv2d_6/BiasAdd"
  input: "gModel_0/gLEnc_32to16/lambda_18/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_18/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_18/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/lambda_18/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_32to16/lambda_18/Placeholder"
  input: "gModel_0/gLEnc_32to16/lambda_18/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_32to16/elu_6/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_32to16/lambda_18/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_19/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_19/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_32to16/elu_6/Elu"
  input: "gModel_0/gLEnc_16to8/lambda_19/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_19/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_19/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_19/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_16to8/lambda_19/Placeholder"
  input: "gModel_0/gLEnc_16to8/lambda_19/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_20/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\022\000\000\000\022\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_20/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_16to8/lambda_19/MirrorPad"
  input: "gModel_0/gLEnc_16to8/lambda_20/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_20/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 18
        }
        dim {
          size: 18
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_20/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\022\000\000\000\022\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_20/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_16to8/lambda_20/Placeholder"
  input: "gModel_0/gLEnc_16to8/lambda_20/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9227467
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/mul"
  input: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_16to8/conv2d_7/kernel"
  input: "gModel_0/gLEnc_16to8/conv2d_7/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_16to8/conv2d_7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_16to8/conv2d_7/bias"
  input: "gModel_0/gLEnc_16to8/conv2d_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_16to8/conv2d_7/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_7/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_16to8/lambda_20/Reshape"
  input: "gModel_0/gLEnc_16to8/conv2d_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_7/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_16to8/conv2d_7/convolution"
  input: "gModel_0/gLEnc_16to8/conv2d_7/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_21/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_21/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_16to8/conv2d_7/BiasAdd"
  input: "gModel_0/gLEnc_16to8/lambda_21/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_21/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_21/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_21/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_16to8/lambda_21/Placeholder"
  input: "gModel_0/gLEnc_16to8/lambda_21/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/elu_7/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_16to8/lambda_21/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_22/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_22/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_16to8/elu_7/Elu"
  input: "gModel_0/gLEnc_16to8/lambda_22/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_22/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_22/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_22/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_16to8/lambda_22/Placeholder"
  input: "gModel_0/gLEnc_16to8/lambda_22/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_23/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\022\000\000\000\022\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_23/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_16to8/lambda_22/MirrorPad"
  input: "gModel_0/gLEnc_16to8/lambda_23/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_23/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 18
        }
        dim {
          size: 18
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_23/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\022\000\000\000\022\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_23/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_16to8/lambda_23/Placeholder"
  input: "gModel_0/gLEnc_16to8/lambda_23/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6905909
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/mul"
  input: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_16to8/conv2d_8/kernel"
  input: "gModel_0/gLEnc_16to8/conv2d_8/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_16to8/conv2d_8/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_16to8/conv2d_8/bias"
  input: "gModel_0/gLEnc_16to8/conv2d_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_16to8/conv2d_8/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_8/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_16to8/lambda_23/Reshape"
  input: "gModel_0/gLEnc_16to8/conv2d_8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/conv2d_8/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_16to8/conv2d_8/convolution"
  input: "gModel_0/gLEnc_16to8/conv2d_8/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_24/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_24/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_16to8/conv2d_8/BiasAdd"
  input: "gModel_0/gLEnc_16to8/lambda_24/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_24/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_24/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/lambda_24/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_16to8/lambda_24/Placeholder"
  input: "gModel_0/gLEnc_16to8/lambda_24/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_16to8/elu_8/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_16to8/lambda_24/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_25/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_25/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_16to8/elu_8/Elu"
  input: "gModel_0/gLEnc_8to4/lambda_25/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_25/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_25/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_25/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_8to4/lambda_25/Placeholder"
  input: "gModel_0/gLEnc_8to4/lambda_25/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_26/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000\n\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_26/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_8to4/lambda_25/MirrorPad"
  input: "gModel_0/gLEnc_8to4/lambda_26/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_26/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 10
        }
        dim {
          size: 10
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_26/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000\n\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_26/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_8to4/lambda_26/Placeholder"
  input: "gModel_0/gLEnc_8to4/lambda_26/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6181144
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/mul"
  input: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_8to4/conv2d_9/kernel"
  input: "gModel_0/gLEnc_8to4/conv2d_9/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_8to4/conv2d_9/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_8to4/conv2d_9/bias"
  input: "gModel_0/gLEnc_8to4/conv2d_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_8to4/conv2d_9/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_9/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_8to4/lambda_26/Reshape"
  input: "gModel_0/gLEnc_8to4/conv2d_9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_9/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_8to4/conv2d_9/convolution"
  input: "gModel_0/gLEnc_8to4/conv2d_9/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_27/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_27/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_8to4/conv2d_9/BiasAdd"
  input: "gModel_0/gLEnc_8to4/lambda_27/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_27/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_27/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_27/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_8to4/lambda_27/Placeholder"
  input: "gModel_0/gLEnc_8to4/lambda_27/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/elu_9/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_8to4/lambda_27/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_28/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_28/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_8to4/elu_9/Elu"
  input: "gModel_0/gLEnc_8to4/lambda_28/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_28/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_28/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_28/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_8to4/lambda_28/Placeholder"
  input: "gModel_0/gLEnc_8to4/lambda_28/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_29/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000\n\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_29/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_8to4/lambda_28/MirrorPad"
  input: "gModel_0/gLEnc_8to4/lambda_29/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_29/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 10
        }
        dim {
          size: 10
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_29/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000\n\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_29/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_8to4/lambda_29/Placeholder"
  input: "gModel_0/gLEnc_8to4/lambda_29/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9814123
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal"
  op: "Add"
  input: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/mul"
  input: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_8to4/conv2d_10/kernel"
  input: "gModel_0/gLEnc_8to4/conv2d_10/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/kernel/read"
  op: "Identity"
  input: "gModel_0/gLEnc_8to4/conv2d_10/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLEnc_8to4/conv2d_10/bias"
  input: "gModel_0/gLEnc_8to4/conv2d_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/bias/read"
  op: "Identity"
  input: "gModel_0/gLEnc_8to4/conv2d_10/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_10/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/convolution"
  op: "Conv2D"
  input: "gModel_0/gLEnc_8to4/lambda_29/Reshape"
  input: "gModel_0/gLEnc_8to4/conv2d_10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/conv2d_10/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLEnc_8to4/conv2d_10/convolution"
  input: "gModel_0/gLEnc_8to4/conv2d_10/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_30/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\004\000\000\000\004\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_30/Reshape"
  op: "Reshape"
  input: "gModel_0/gLEnc_8to4/conv2d_10/BiasAdd"
  input: "gModel_0/gLEnc_8to4/lambda_30/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_30/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_30/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\004\000\000\000\004\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/lambda_30/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLEnc_8to4/lambda_30/Placeholder"
  input: "gModel_0/gLEnc_8to4/lambda_30/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLEnc_8to4/elu_10/Elu"
  op: "Elu"
  input: "gModel_0/gLEnc_8to4/lambda_30/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_31/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_31/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLEnc_8to4/elu_10/Elu"
  input: "gModel_0/gLBott_4/lambda_31/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_31/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_31/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_31/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLBott_4/lambda_31/Placeholder"
  input: "gModel_0/gLBott_4/lambda_31/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_32/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_32/Reshape"
  op: "Reshape"
  input: "gModel_0/gLBott_4/lambda_31/MirrorPad"
  input: "gModel_0/gLBott_4/lambda_32/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_32/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_32/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_32/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLBott_4/lambda_32/Placeholder"
  input: "gModel_0/gLBott_4/lambda_32/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLBott_4/conv2d_11/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5251840
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLBott_4/conv2d_11/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLBott_4/conv2d_11/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/truncated_normal"
  op: "Add"
  input: "gModel_0/gLBott_4/conv2d_11/truncated_normal/mul"
  input: "gModel_0/gLBott_4/conv2d_11/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLBott_4/conv2d_11/kernel"
  input: "gModel_0/gLBott_4/conv2d_11/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/kernel/read"
  op: "Identity"
  input: "gModel_0/gLBott_4/conv2d_11/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_11/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLBott_4/conv2d_11/bias"
  input: "gModel_0/gLBott_4/conv2d_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/bias/read"
  op: "Identity"
  input: "gModel_0/gLBott_4/conv2d_11/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_11/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/convolution"
  op: "Conv2D"
  input: "gModel_0/gLBott_4/lambda_32/Reshape"
  input: "gModel_0/gLBott_4/conv2d_11/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_11/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLBott_4/conv2d_11/convolution"
  input: "gModel_0/gLBott_4/conv2d_11/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_33/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\004\000\000\000\004\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_33/Reshape"
  op: "Reshape"
  input: "gModel_0/gLBott_4/conv2d_11/BiasAdd"
  input: "gModel_0/gLBott_4/lambda_33/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_33/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_33/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\004\000\000\000\004\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_33/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLBott_4/lambda_33/Placeholder"
  input: "gModel_0/gLBott_4/lambda_33/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLBott_4/elu_11/Elu"
  op: "Elu"
  input: "gModel_0/gLBott_4/lambda_33/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_34/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_34/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLBott_4/elu_11/Elu"
  input: "gModel_0/gLBott_4/lambda_34/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_34/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_34/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_34/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLBott_4/lambda_34/Placeholder"
  input: "gModel_0/gLBott_4/lambda_34/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_35/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_35/Reshape"
  op: "Reshape"
  input: "gModel_0/gLBott_4/lambda_34/MirrorPad"
  input: "gModel_0/gLBott_4/lambda_35/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_35/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_35/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\006\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_35/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLBott_4/lambda_35/Placeholder"
  input: "gModel_0/gLBott_4/lambda_35/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLBott_4/conv2d_12/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9521722
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLBott_4/conv2d_12/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLBott_4/conv2d_12/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/truncated_normal"
  op: "Add"
  input: "gModel_0/gLBott_4/conv2d_12/truncated_normal/mul"
  input: "gModel_0/gLBott_4/conv2d_12/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLBott_4/conv2d_12/kernel"
  input: "gModel_0/gLBott_4/conv2d_12/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/kernel/read"
  op: "Identity"
  input: "gModel_0/gLBott_4/conv2d_12/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_12/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLBott_4/conv2d_12/bias"
  input: "gModel_0/gLBott_4/conv2d_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/bias/read"
  op: "Identity"
  input: "gModel_0/gLBott_4/conv2d_12/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_12/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/convolution"
  op: "Conv2D"
  input: "gModel_0/gLBott_4/lambda_35/Reshape"
  input: "gModel_0/gLBott_4/conv2d_12/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLBott_4/conv2d_12/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLBott_4/conv2d_12/convolution"
  input: "gModel_0/gLBott_4/conv2d_12/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_36/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\004\000\000\000\004\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_36/Reshape"
  op: "Reshape"
  input: "gModel_0/gLBott_4/conv2d_12/BiasAdd"
  input: "gModel_0/gLBott_4/lambda_36/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_36/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_36/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\004\000\000\000\004\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLBott_4/lambda_36/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLBott_4/lambda_36/Placeholder"
  input: "gModel_0/gLBott_4/lambda_36/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLBott_4/elu_12/Elu"
  op: "Elu"
  input: "gModel_0/gLBott_4/lambda_36/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/split"
  op: "Split"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split/split_dim"
  input: "gModel_0/gLBott_4/elu_12/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:1"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:3"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:4"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:5"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:6"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:7"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:8"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:9"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:10"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:11"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:12"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:13"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:14"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:15"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:16"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:17"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:18"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:19"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:20"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:21"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:22"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:23"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:24"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:25"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:26"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:27"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:28"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:29"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:30"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split:31"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1"
  op: "Split"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1/split_dim"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/concat_1"
  op: "ConcatV2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1:1"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1:1"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1:2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1:2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1:3"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_1:3"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2"
  op: "Split"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2/split_dim"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/up_sampling3d_1/concat_2"
  op: "ConcatV2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2:1"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2:1"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2:2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2:2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2:3"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/split_2:3"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/concatenate_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/concatenate_1/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_4to8/up_sampling3d_1/concat_2"
  input: "gModel_0/gLEnc_8to4/elu_9/Elu"
  input: "gModel_0/gLDec_4to8/concatenate_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_37/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_37/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_4to8/concatenate_1/concat"
  input: "gModel_0/gLDec_4to8/lambda_37/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_37/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_37/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_37/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLDec_4to8/lambda_37/Placeholder"
  input: "gModel_0/gLDec_4to8/lambda_37/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_38/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000\n\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_38/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/lambda_37/MirrorPad"
  input: "gModel_0/gLDec_4to8/lambda_38/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_38/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 10
        }
        dim {
          size: 10
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_38/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000\n\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_38/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/lambda_38/Placeholder"
  input: "gModel_0/gLDec_4to8/lambda_38/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1506574
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/mul"
  input: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/conv2d_13/kernel"
  input: "gModel_0/gLDec_4to8/conv2d_13/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/conv2d_13/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/conv2d_13/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/conv2d_13/bias"
  input: "gModel_0/gLDec_4to8/conv2d_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/conv2d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/conv2d_13/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/conv2d_13/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_4to8/lambda_38/Reshape"
  input: "gModel_0/gLDec_4to8/conv2d_13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/conv2d_13/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_4to8/conv2d_13/convolution"
  input: "gModel_0/gLDec_4to8/conv2d_13/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_39/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_39/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/conv2d_13/BiasAdd"
  input: "gModel_0/gLDec_4to8/lambda_39/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_39/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_39/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/lambda_39/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/lambda_39/Placeholder"
  input: "gModel_0/gLDec_4to8/lambda_39/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/elu_13/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_4to8/lambda_39/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6101993
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/mul"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/zeros"
  op: "Fill"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/zeros/shape_as_tensor"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable/read"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose"
  op: "Transpose"
  input: "gModel_0/gLDec_4to8/elu_13/Elu"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Shape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice_1/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable/read"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/concat"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/MirrorPad"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/convolution"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma/read"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta/read"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Shape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Shape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_1/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Shape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_2/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Shape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_3/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/stack"
  op: "Pack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/stack/1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/strided_slice_2"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/BiasAdd"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/SquaredDifference"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/sub"
  op: "Sub"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/add"
  op: "Add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/moments/variance"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/clip_by_value/Minimum"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/sub"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/truediv"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma/read"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/mul"
  op: "Mul"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta/read"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/add_1"
  op: "Add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/mul"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/add_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/Shape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/strided_slice/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/range"
  op: "Range"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/range/start"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/strided_slice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/range"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/maximum_iterations"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Enter_2"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Enter_3"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge"
  op: "Merge"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_1"
  op: "Merge"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Enter_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_2"
  op: "Merge"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Enter_2"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_3"
  op: "Merge"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Enter_3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Less"
  op: "Less"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Less/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/maximum_iterations"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Less_1"
  op: "Less"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Less_1/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/LogicalAnd"
  op: "LogicalAnd"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Less"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Less_1"
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/LoopCond"
  op: "LoopCond"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/LogicalAnd"
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch"
  op: "Switch"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_1"
  op: "Switch"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_2"
  op: "Switch"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_2"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_3"
  op: "Switch"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Merge_3"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity_1"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity_2"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity_3"
  op: "Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/add"
  op: "Add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayReadV3/Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/concat/axis"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayReadV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity_3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/MirrorPad/paddings"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/concat"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/convolution/dilation_rate"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/MirrorPad"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/convolution/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/convolution/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/convolution"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/BiasAdd/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Shape"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Shape_1"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\010\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice/stack"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Shape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_1/stack"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_1/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_1/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Shape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_1/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_2/stack"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_2/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_2/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Shape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_2/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_3/stack"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_3/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_3/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Shape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_3/stack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/stack/1"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/stack/4"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/stack"
  op: "Pack"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/stack/1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/strided_slice_2"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/BiasAdd"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/mean/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/variance/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/SquaredDifference"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/sub"
  op: "Sub"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/add"
  op: "Add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/moments/variance"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Const"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Const_1"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/clip_by_value/Minimum"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/sub"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/truediv"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_2/shape"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_2/Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_2/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/mul"
  op: "Mul"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_3/shape"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_3/Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/add_1"
  op: "Add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/mul"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/add_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/group_normalization_1/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Elu"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Elu"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Elu"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/add_1/y"
  op: "Const"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/add_1"
  op: "Add"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Identity_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/NextIteration"
  op: "NextIteration"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/NextIteration_1"
  op: "NextIteration"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/NextIteration_2"
  op: "NextIteration"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/NextIteration_3"
  op: "NextIteration"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Exit"
  op: "Exit"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Exit_1"
  op: "Exit"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Exit_2"
  op: "Exit"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Exit_3"
  op: "Exit"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/range"
  op: "Range"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/range/start"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/TensorArraySizeV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/range"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/sub"
  op: "Sub"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Exit_1"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArray"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/sub"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/while/Exit_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose_1"
  op: "Transpose"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/TensorArrayStack/TensorArrayGatherV3"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/Shape"
  op: "Shape"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/ExpandDims"
  op: "ExpandDims"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/transpose_1"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/Tile"
  op: "Tile"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/ExpandDims"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/mul"
  op: "Mul"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/Shape"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/Tile"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/split"
  op: "Split"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split/split_dim"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:1"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:1"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:2"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:2"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:3"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:3"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:4"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:4"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:5"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:5"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:6"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:6"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:7"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split:7"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1"
  op: "Split"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1/split_dim"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/up_sampling3d_2/concat_1"
  op: "ConcatV2"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:1"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:1"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:2"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:2"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:3"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:3"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:4"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:4"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:5"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:5"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:6"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:6"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:7"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/split_1:7"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/concatenate_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/concatenate_2/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_8to16/up_sampling3d_2/concat_1"
  input: "gModel_0/gLEnc_16to8/elu_7/Elu"
  input: "gModel_0/gLDec_8to16/concatenate_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_40/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_40/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_8to16/concatenate_2/concat"
  input: "gModel_0/gLDec_8to16/lambda_40/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_40/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_40/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_40/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLDec_8to16/lambda_40/Placeholder"
  input: "gModel_0/gLDec_8to16/lambda_40/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_41/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\022\000\000\000\022\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_41/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/lambda_40/MirrorPad"
  input: "gModel_0/gLDec_8to16/lambda_41/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_41/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 18
        }
        dim {
          size: 18
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_41/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\022\000\000\000\022\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_41/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/lambda_41/Placeholder"
  input: "gModel_0/gLDec_8to16/lambda_41/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 267072
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/mul"
  input: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/conv2d_14/kernel"
  input: "gModel_0/gLDec_8to16/conv2d_14/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/conv2d_14/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/conv2d_14/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/conv2d_14/bias"
  input: "gModel_0/gLDec_8to16/conv2d_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/conv2d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/conv2d_14/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/conv2d_14/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_8to16/lambda_41/Reshape"
  input: "gModel_0/gLDec_8to16/conv2d_14/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/conv2d_14/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_8to16/conv2d_14/convolution"
  input: "gModel_0/gLDec_8to16/conv2d_14/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_42/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_42/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/conv2d_14/BiasAdd"
  input: "gModel_0/gLDec_8to16/lambda_42/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_42/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_42/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/lambda_42/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/lambda_42/Placeholder"
  input: "gModel_0/gLDec_8to16/lambda_42/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/elu_14/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_8to16/lambda_42/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6366070
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/mul"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/zeros"
  op: "Fill"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/zeros/shape_as_tensor"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable/read"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose"
  op: "Transpose"
  input: "gModel_0/gLDec_8to16/elu_14/Elu"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Shape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice_1/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable/read"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/concat"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/MirrorPad"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/convolution"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma/read"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta/read"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Shape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Shape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_1/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Shape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_2/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Shape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_3/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/stack"
  op: "Pack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/stack/1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/strided_slice_2"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/BiasAdd"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/SquaredDifference"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/sub"
  op: "Sub"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/add"
  op: "Add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/moments/variance"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/clip_by_value/Minimum"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/sub"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/truediv"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma/read"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/mul"
  op: "Mul"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta/read"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/add_1"
  op: "Add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/mul"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/add_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray_1"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/Shape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/strided_slice/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/strided_slice/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/range"
  op: "Range"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/range/start"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/strided_slice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/range"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/maximum_iterations"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Enter_2"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Enter_3"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge"
  op: "Merge"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_1"
  op: "Merge"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Enter_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_2"
  op: "Merge"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Enter_2"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_3"
  op: "Merge"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Enter_3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Less"
  op: "Less"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Less/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/maximum_iterations"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Less_1"
  op: "Less"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Less_1/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/LogicalAnd"
  op: "LogicalAnd"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Less"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Less_1"
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/LoopCond"
  op: "LoopCond"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/LogicalAnd"
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch"
  op: "Switch"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_1"
  op: "Switch"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_1"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_2"
  op: "Switch"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_2"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_2"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_3"
  op: "Switch"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Merge_3"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity_1"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity_2"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity_3"
  op: "Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/add"
  op: "Add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayReadV3/Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/concat/axis"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayReadV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity_3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/MirrorPad/paddings"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/concat"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/convolution/dilation_rate"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/MirrorPad"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/convolution/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/convolution/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/convolution"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/BiasAdd/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Shape"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Shape_1"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\020\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice/stack"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Shape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_1/stack"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_1/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_1/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Shape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_1/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_2/stack"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_2/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_2/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Shape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_2/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_3/stack"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_3/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_3/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Shape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_3/stack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/stack/1"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/stack/4"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/stack"
  op: "Pack"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/stack/1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/strided_slice_2"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/BiasAdd"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/mean/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/variance/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/SquaredDifference"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/sub"
  op: "Sub"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/add"
  op: "Add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/moments/variance"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Const"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Const_1"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/clip_by_value/Minimum"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/sub"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/truediv"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_2/shape"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_2/Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_2/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/mul"
  op: "Mul"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_3/shape"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_3/Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/add_1"
  op: "Add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/mul"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/add_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/group_normalization_2/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Elu"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Elu"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Elu"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/add_1/y"
  op: "Const"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/add_1"
  op: "Add"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Identity_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/NextIteration"
  op: "NextIteration"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/NextIteration_1"
  op: "NextIteration"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/NextIteration_2"
  op: "NextIteration"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/NextIteration_3"
  op: "NextIteration"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Exit"
  op: "Exit"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Exit_1"
  op: "Exit"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Exit_2"
  op: "Exit"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Exit_3"
  op: "Exit"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/range"
  op: "Range"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/range/start"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/TensorArraySizeV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/range"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/sub"
  op: "Sub"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Exit_1"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArray"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/sub"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/while/Exit_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose_1"
  op: "Transpose"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/TensorArrayStack/TensorArrayGatherV3"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/Shape"
  op: "Shape"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/ExpandDims"
  op: "ExpandDims"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/transpose_1"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/Tile"
  op: "Tile"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/ExpandDims"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/mul"
  op: "Mul"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/Shape"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/Tile"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/split"
  op: "Split"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split/split_dim"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 16
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:1"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:1"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:2"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:2"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:3"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:3"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:4"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:4"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:5"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:5"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:6"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:6"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:7"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:7"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:8"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:8"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:9"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:9"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:10"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:10"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:11"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:11"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:12"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:12"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:13"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:13"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:14"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:14"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:15"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split:15"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1"
  op: "Split"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1/split_dim"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 16
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/up_sampling3d_3/concat_1"
  op: "ConcatV2"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:1"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:1"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:2"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:2"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:3"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:3"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:4"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:4"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:5"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:5"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:6"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:6"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:7"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:7"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:8"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:8"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:9"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:9"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:10"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:10"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:11"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:11"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:12"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:12"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:13"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:13"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:14"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:14"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:15"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/split_1:15"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/concatenate_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/concatenate_3/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_16to32/up_sampling3d_3/concat_1"
  input: "gModel_0/gLEnc_32to16/elu_5/Elu"
  input: "gModel_0/gLDec_16to32/concatenate_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_43/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_43/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_16to32/concatenate_3/concat"
  input: "gModel_0/gLDec_16to32/lambda_43/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_43/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_43/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_43/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLDec_16to32/lambda_43/Placeholder"
  input: "gModel_0/gLDec_16to32/lambda_43/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_44/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\"\000\000\000\"\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_44/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/lambda_43/MirrorPad"
  input: "gModel_0/gLDec_16to32/lambda_44/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_44/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 34
        }
        dim {
          size: 34
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_44/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\"\000\000\000\"\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_44/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/lambda_44/Placeholder"
  input: "gModel_0/gLDec_16to32/lambda_44/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1940102
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/mul"
  input: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/conv2d_15/kernel"
  input: "gModel_0/gLDec_16to32/conv2d_15/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/conv2d_15/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/conv2d_15/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/conv2d_15/bias"
  input: "gModel_0/gLDec_16to32/conv2d_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/conv2d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/conv2d_15/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/conv2d_15/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_16to32/lambda_44/Reshape"
  input: "gModel_0/gLDec_16to32/conv2d_15/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/conv2d_15/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_16to32/conv2d_15/convolution"
  input: "gModel_0/gLDec_16to32/conv2d_15/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_45/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_45/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/conv2d_15/BiasAdd"
  input: "gModel_0/gLDec_16to32/lambda_45/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_45/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_45/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/lambda_45/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/lambda_45/Placeholder"
  input: "gModel_0/gLDec_16to32/lambda_45/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/elu_15/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_16to32/lambda_45/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4620221
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/mul"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/zeros"
  op: "Fill"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/zeros/shape_as_tensor"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable/read"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose"
  op: "Transpose"
  input: "gModel_0/gLDec_16to32/elu_15/Elu"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Shape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice_1/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable/read"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/concat"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/MirrorPad"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/convolution"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma/read"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta/read"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Shape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Shape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_1/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Shape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_2/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Shape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_3/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/stack"
  op: "Pack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/stack/1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/strided_slice_2"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/BiasAdd"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/SquaredDifference"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/sub"
  op: "Sub"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/add"
  op: "Add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/moments/variance"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/clip_by_value/Minimum"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/sub"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/truediv"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma/read"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/mul"
  op: "Mul"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta/read"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/add_1"
  op: "Add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/mul"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/add_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray_1"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/Shape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/strided_slice/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/strided_slice/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/range"
  op: "Range"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/range/start"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/strided_slice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/range"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/maximum_iterations"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Enter_2"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Enter_3"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge"
  op: "Merge"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_1"
  op: "Merge"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Enter_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_2"
  op: "Merge"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Enter_2"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_3"
  op: "Merge"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Enter_3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Less"
  op: "Less"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Less/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/maximum_iterations"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Less_1"
  op: "Less"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Less_1/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/LogicalAnd"
  op: "LogicalAnd"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Less"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Less_1"
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/LoopCond"
  op: "LoopCond"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/LogicalAnd"
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch"
  op: "Switch"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_1"
  op: "Switch"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_1"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_2"
  op: "Switch"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_2"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_2"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_3"
  op: "Switch"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Merge_3"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity_1"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity_2"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity_3"
  op: "Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/add"
  op: "Add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayReadV3/Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/concat/axis"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayReadV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity_3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/MirrorPad/paddings"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/concat"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/convolution/dilation_rate"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/MirrorPad"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/convolution/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/convolution/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/convolution"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/BiasAdd/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Shape"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Shape_1"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice/stack"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Shape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_1/stack"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_1/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_1/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Shape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_1/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_2/stack"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_2/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_2/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Shape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_2/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_3/stack"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_3/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_3/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Shape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_3/stack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/stack/1"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/stack/4"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/stack"
  op: "Pack"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/stack/1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/strided_slice_2"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/BiasAdd"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/mean/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/variance/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/SquaredDifference"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/sub"
  op: "Sub"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/add"
  op: "Add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/moments/variance"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Const"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Const_1"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/clip_by_value/Minimum"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/sub"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/truediv"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_2/shape"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_2/Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_2/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/mul"
  op: "Mul"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_3/shape"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_3/Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/add_1"
  op: "Add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/mul"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/add_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/group_normalization_3/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Elu"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Elu"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Elu"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/add_1/y"
  op: "Const"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/add_1"
  op: "Add"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Identity_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/NextIteration"
  op: "NextIteration"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/NextIteration_1"
  op: "NextIteration"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/NextIteration_2"
  op: "NextIteration"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/NextIteration_3"
  op: "NextIteration"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Exit"
  op: "Exit"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Exit_1"
  op: "Exit"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Exit_2"
  op: "Exit"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Exit_3"
  op: "Exit"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/range"
  op: "Range"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/range/start"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/TensorArraySizeV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/range"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/sub"
  op: "Sub"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Exit_1"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArray"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/sub"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/while/Exit_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose_1"
  op: "Transpose"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/TensorArrayStack/TensorArrayGatherV3"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/Shape"
  op: "Shape"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/ExpandDims"
  op: "ExpandDims"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/transpose_1"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/Tile"
  op: "Tile"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/ExpandDims"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/mul"
  op: "Mul"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/Shape"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/Tile"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/split"
  op: "Split"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split/split_dim"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:1"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:1"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:2"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:2"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:3"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:3"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:4"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:4"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:5"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:5"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:6"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:6"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:7"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:7"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:8"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:8"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:9"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:9"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:10"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:10"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:11"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:11"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:12"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:12"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:13"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:13"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:14"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:14"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:15"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:15"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:16"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:16"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:17"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:17"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:18"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:18"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:19"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:19"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:20"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:20"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:21"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:21"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:22"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:22"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:23"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:23"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:24"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:24"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:25"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:25"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:26"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:26"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:27"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:27"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:28"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:28"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:29"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:29"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:30"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:30"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:31"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split:31"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1"
  op: "Split"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1/split_dim"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/up_sampling3d_4/concat_1"
  op: "ConcatV2"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:1"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:1"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:2"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:2"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:3"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:3"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:4"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:4"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:5"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:5"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:6"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:6"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:7"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:7"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:8"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:8"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:9"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:9"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:10"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:10"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:11"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:11"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:12"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:12"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:13"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:13"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:14"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:14"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:15"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:15"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:16"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:16"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:17"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:17"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:18"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:18"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:19"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:19"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:20"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:20"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:21"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:21"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:22"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:22"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:23"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:23"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:24"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:24"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:25"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:25"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:26"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:26"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:27"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:27"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:28"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:28"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:29"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:29"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:30"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:30"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:31"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/split_1:31"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 64
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/concatenate_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/concatenate_4/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_32to64/up_sampling3d_4/concat_1"
  input: "gModel_0/gLEnc_64to32/elu_3/Elu"
  input: "gModel_0/gLDec_32to64/concatenate_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_46/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_46/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_32to64/concatenate_4/concat"
  input: "gModel_0/gLDec_32to64/lambda_46/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_46/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_46/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_46/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLDec_32to64/lambda_46/Placeholder"
  input: "gModel_0/gLDec_32to64/lambda_46/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_47/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377B\000\000\000B\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_47/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/lambda_46/MirrorPad"
  input: "gModel_0/gLDec_32to64/lambda_47/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_47/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 66
        }
        dim {
          size: 66
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_47/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377B\000\000\000B\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_47/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/lambda_47/Placeholder"
  input: "gModel_0/gLDec_32to64/lambda_47/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03867632895708084
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8548488
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/mul"
  input: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/conv2d_16/kernel"
  input: "gModel_0/gLDec_32to64/conv2d_16/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/conv2d_16/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/conv2d_16/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/conv2d_16/bias"
  input: "gModel_0/gLDec_32to64/conv2d_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/conv2d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/conv2d_16/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/conv2d_16/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_32to64/lambda_47/Reshape"
  input: "gModel_0/gLDec_32to64/conv2d_16/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/conv2d_16/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_32to64/conv2d_16/convolution"
  input: "gModel_0/gLDec_32to64/conv2d_16/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_48/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_48/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/conv2d_16/BiasAdd"
  input: "gModel_0/gLDec_32to64/lambda_48/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_48/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_48/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/lambda_48/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/lambda_48/Placeholder"
  input: "gModel_0/gLDec_32to64/lambda_48/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/elu_16/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_32to64/lambda_48/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8744741
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/mul"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/zeros"
  op: "Fill"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/zeros/shape_as_tensor"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable/read"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose"
  op: "Transpose"
  input: "gModel_0/gLDec_32to64/elu_16/Elu"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Shape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice_1/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable/read"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/concat"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/MirrorPad"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/convolution"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma/read"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta/read"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Shape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Shape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_1/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Shape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_2/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Shape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_3/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/stack"
  op: "Pack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/stack/1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/strided_slice_2"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/BiasAdd"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/SquaredDifference"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/sub"
  op: "Sub"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/add"
  op: "Add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/moments/variance"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/clip_by_value/Minimum"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/sub"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/truediv"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma/read"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/mul"
  op: "Mul"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta/read"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/add_1"
  op: "Add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/mul"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/add_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray_1"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/Shape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/strided_slice/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/strided_slice/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/range"
  op: "Range"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/range/start"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/strided_slice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/range"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/maximum_iterations"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Enter_2"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Enter_3"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge"
  op: "Merge"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_1"
  op: "Merge"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Enter_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_2"
  op: "Merge"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Enter_2"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_3"
  op: "Merge"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Enter_3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Less"
  op: "Less"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Less/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/maximum_iterations"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Less_1"
  op: "Less"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Less_1/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/LogicalAnd"
  op: "LogicalAnd"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Less"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Less_1"
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/LoopCond"
  op: "LoopCond"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/LogicalAnd"
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch"
  op: "Switch"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_1"
  op: "Switch"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_1"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_2"
  op: "Switch"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_2"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_2"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_3"
  op: "Switch"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Merge_3"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity_1"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity_2"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity_3"
  op: "Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/add"
  op: "Add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayReadV3/Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/concat/axis"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayReadV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity_3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/MirrorPad/paddings"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/concat"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/convolution/dilation_rate"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/MirrorPad"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/convolution/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/convolution/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/convolution"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/BiasAdd/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Shape"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Shape_1"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice/stack"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Shape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_1/stack"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_1/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_1/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Shape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_1/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_2/stack"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_2/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_2/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Shape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_2/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_3/stack"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_3/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_3/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Shape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_3/stack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/stack/1"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/stack/4"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/stack"
  op: "Pack"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/stack/1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/strided_slice_2"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/BiasAdd"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/mean/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/variance/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/SquaredDifference"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/sub"
  op: "Sub"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/add"
  op: "Add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/moments/variance"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Const"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Const_1"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/clip_by_value/Minimum"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/sub"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/truediv"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_2/shape"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_2/Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_2/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/mul"
  op: "Mul"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_3/shape"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_3/Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/add_1"
  op: "Add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/mul"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/add_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/group_normalization_4/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Elu"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Elu"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Elu"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/add_1/y"
  op: "Const"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/add_1"
  op: "Add"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Identity_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/NextIteration"
  op: "NextIteration"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/NextIteration_1"
  op: "NextIteration"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/NextIteration_2"
  op: "NextIteration"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/NextIteration_3"
  op: "NextIteration"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Exit"
  op: "Exit"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Exit_1"
  op: "Exit"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Exit_2"
  op: "Exit"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Exit_3"
  op: "Exit"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/range"
  op: "Range"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/range/start"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/TensorArraySizeV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/range"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/sub"
  op: "Sub"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Exit_1"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArray"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/sub"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/while/Exit_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose_1"
  op: "Transpose"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/TensorArrayStack/TensorArrayGatherV3"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_49/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_49/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose_1"
  input: "gModel_0/toRGB_L_64/lambda_49/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_49/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_49/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_49/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/toRGB_L_64/lambda_49/Placeholder"
  input: "gModel_0/toRGB_L_64/lambda_49/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_50/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_50/Reshape"
  op: "Reshape"
  input: "gModel_0/toRGB_L_64/lambda_49/MirrorPad"
  input: "gModel_0/toRGB_L_64/lambda_50/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_50/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_50/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_50/Reshape_1"
  op: "Reshape"
  input: "gModel_0/toRGB_L_64/lambda_50/Placeholder"
  input: "gModel_0/toRGB_L_64/lambda_50/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20096810162067413
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4095141
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/TruncatedNormal"
  input: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal"
  op: "Add"
  input: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/mul"
  input: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/kernel/Assign"
  op: "Assign"
  input: "gModel_0/toRGB_L_64/conv2d_17/kernel"
  input: "gModel_0/toRGB_L_64/conv2d_17/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_64/conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/kernel/read"
  op: "Identity"
  input: "gModel_0/toRGB_L_64/conv2d_17/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_64/conv2d_17/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/bias/Assign"
  op: "Assign"
  input: "gModel_0/toRGB_L_64/conv2d_17/bias"
  input: "gModel_0/toRGB_L_64/conv2d_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_64/conv2d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/bias/read"
  op: "Identity"
  input: "gModel_0/toRGB_L_64/conv2d_17/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_64/conv2d_17/bias"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/convolution"
  op: "Conv2D"
  input: "gModel_0/toRGB_L_64/lambda_50/Reshape"
  input: "gModel_0/toRGB_L_64/conv2d_17/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/conv2d_17/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/toRGB_L_64/conv2d_17/convolution"
  input: "gModel_0/toRGB_L_64/conv2d_17/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_51/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_51/Reshape"
  op: "Reshape"
  input: "gModel_0/toRGB_L_64/conv2d_17/BiasAdd"
  input: "gModel_0/toRGB_L_64/lambda_51/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_51/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_51/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_64/lambda_51/Reshape_1"
  op: "Reshape"
  input: "gModel_0/toRGB_L_64/lambda_51/Placeholder"
  input: "gModel_0/toRGB_L_64/lambda_51/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/split"
  op: "Split"
  input: "gModel_0/NNUp64to128/split/split_dim"
  input: "gModel_0/toRGB_L_64/lambda_51/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/concat"
  op: "ConcatV2"
  input: "gModel_0/NNUp64to128/split"
  input: "gModel_0/NNUp64to128/split:1"
  input: "gModel_0/NNUp64to128/split:2"
  input: "gModel_0/NNUp64to128/split:3"
  input: "gModel_0/NNUp64to128/split:4"
  input: "gModel_0/NNUp64to128/split:5"
  input: "gModel_0/NNUp64to128/split:6"
  input: "gModel_0/NNUp64to128/split:7"
  input: "gModel_0/NNUp64to128/split:8"
  input: "gModel_0/NNUp64to128/split:9"
  input: "gModel_0/NNUp64to128/split:10"
  input: "gModel_0/NNUp64to128/split:11"
  input: "gModel_0/NNUp64to128/split:12"
  input: "gModel_0/NNUp64to128/split:13"
  input: "gModel_0/NNUp64to128/split:14"
  input: "gModel_0/NNUp64to128/split:15"
  input: "gModel_0/NNUp64to128/split:16"
  input: "gModel_0/NNUp64to128/split:17"
  input: "gModel_0/NNUp64to128/split:18"
  input: "gModel_0/NNUp64to128/split:19"
  input: "gModel_0/NNUp64to128/split:20"
  input: "gModel_0/NNUp64to128/split:21"
  input: "gModel_0/NNUp64to128/split:22"
  input: "gModel_0/NNUp64to128/split:23"
  input: "gModel_0/NNUp64to128/split:24"
  input: "gModel_0/NNUp64to128/split:25"
  input: "gModel_0/NNUp64to128/split:26"
  input: "gModel_0/NNUp64to128/split:27"
  input: "gModel_0/NNUp64to128/split:28"
  input: "gModel_0/NNUp64to128/split:29"
  input: "gModel_0/NNUp64to128/split:30"
  input: "gModel_0/NNUp64to128/split:31"
  input: "gModel_0/NNUp64to128/concat/axis"
  attr {
    key: "N"
    value {
      i: 32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/split_1"
  op: "Split"
  input: "gModel_0/NNUp64to128/split_1/split_dim"
  input: "gModel_0/NNUp64to128/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 64
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/concat_1"
  op: "ConcatV2"
  input: "gModel_0/NNUp64to128/split_1"
  input: "gModel_0/NNUp64to128/split_1"
  input: "gModel_0/NNUp64to128/split_1:1"
  input: "gModel_0/NNUp64to128/split_1:1"
  input: "gModel_0/NNUp64to128/split_1:2"
  input: "gModel_0/NNUp64to128/split_1:2"
  input: "gModel_0/NNUp64to128/split_1:3"
  input: "gModel_0/NNUp64to128/split_1:3"
  input: "gModel_0/NNUp64to128/split_1:4"
  input: "gModel_0/NNUp64to128/split_1:4"
  input: "gModel_0/NNUp64to128/split_1:5"
  input: "gModel_0/NNUp64to128/split_1:5"
  input: "gModel_0/NNUp64to128/split_1:6"
  input: "gModel_0/NNUp64to128/split_1:6"
  input: "gModel_0/NNUp64to128/split_1:7"
  input: "gModel_0/NNUp64to128/split_1:7"
  input: "gModel_0/NNUp64to128/split_1:8"
  input: "gModel_0/NNUp64to128/split_1:8"
  input: "gModel_0/NNUp64to128/split_1:9"
  input: "gModel_0/NNUp64to128/split_1:9"
  input: "gModel_0/NNUp64to128/split_1:10"
  input: "gModel_0/NNUp64to128/split_1:10"
  input: "gModel_0/NNUp64to128/split_1:11"
  input: "gModel_0/NNUp64to128/split_1:11"
  input: "gModel_0/NNUp64to128/split_1:12"
  input: "gModel_0/NNUp64to128/split_1:12"
  input: "gModel_0/NNUp64to128/split_1:13"
  input: "gModel_0/NNUp64to128/split_1:13"
  input: "gModel_0/NNUp64to128/split_1:14"
  input: "gModel_0/NNUp64to128/split_1:14"
  input: "gModel_0/NNUp64to128/split_1:15"
  input: "gModel_0/NNUp64to128/split_1:15"
  input: "gModel_0/NNUp64to128/split_1:16"
  input: "gModel_0/NNUp64to128/split_1:16"
  input: "gModel_0/NNUp64to128/split_1:17"
  input: "gModel_0/NNUp64to128/split_1:17"
  input: "gModel_0/NNUp64to128/split_1:18"
  input: "gModel_0/NNUp64to128/split_1:18"
  input: "gModel_0/NNUp64to128/split_1:19"
  input: "gModel_0/NNUp64to128/split_1:19"
  input: "gModel_0/NNUp64to128/split_1:20"
  input: "gModel_0/NNUp64to128/split_1:20"
  input: "gModel_0/NNUp64to128/split_1:21"
  input: "gModel_0/NNUp64to128/split_1:21"
  input: "gModel_0/NNUp64to128/split_1:22"
  input: "gModel_0/NNUp64to128/split_1:22"
  input: "gModel_0/NNUp64to128/split_1:23"
  input: "gModel_0/NNUp64to128/split_1:23"
  input: "gModel_0/NNUp64to128/split_1:24"
  input: "gModel_0/NNUp64to128/split_1:24"
  input: "gModel_0/NNUp64to128/split_1:25"
  input: "gModel_0/NNUp64to128/split_1:25"
  input: "gModel_0/NNUp64to128/split_1:26"
  input: "gModel_0/NNUp64to128/split_1:26"
  input: "gModel_0/NNUp64to128/split_1:27"
  input: "gModel_0/NNUp64to128/split_1:27"
  input: "gModel_0/NNUp64to128/split_1:28"
  input: "gModel_0/NNUp64to128/split_1:28"
  input: "gModel_0/NNUp64to128/split_1:29"
  input: "gModel_0/NNUp64to128/split_1:29"
  input: "gModel_0/NNUp64to128/split_1:30"
  input: "gModel_0/NNUp64to128/split_1:30"
  input: "gModel_0/NNUp64to128/split_1:31"
  input: "gModel_0/NNUp64to128/split_1:31"
  input: "gModel_0/NNUp64to128/split_1:32"
  input: "gModel_0/NNUp64to128/split_1:32"
  input: "gModel_0/NNUp64to128/split_1:33"
  input: "gModel_0/NNUp64to128/split_1:33"
  input: "gModel_0/NNUp64to128/split_1:34"
  input: "gModel_0/NNUp64to128/split_1:34"
  input: "gModel_0/NNUp64to128/split_1:35"
  input: "gModel_0/NNUp64to128/split_1:35"
  input: "gModel_0/NNUp64to128/split_1:36"
  input: "gModel_0/NNUp64to128/split_1:36"
  input: "gModel_0/NNUp64to128/split_1:37"
  input: "gModel_0/NNUp64to128/split_1:37"
  input: "gModel_0/NNUp64to128/split_1:38"
  input: "gModel_0/NNUp64to128/split_1:38"
  input: "gModel_0/NNUp64to128/split_1:39"
  input: "gModel_0/NNUp64to128/split_1:39"
  input: "gModel_0/NNUp64to128/split_1:40"
  input: "gModel_0/NNUp64to128/split_1:40"
  input: "gModel_0/NNUp64to128/split_1:41"
  input: "gModel_0/NNUp64to128/split_1:41"
  input: "gModel_0/NNUp64to128/split_1:42"
  input: "gModel_0/NNUp64to128/split_1:42"
  input: "gModel_0/NNUp64to128/split_1:43"
  input: "gModel_0/NNUp64to128/split_1:43"
  input: "gModel_0/NNUp64to128/split_1:44"
  input: "gModel_0/NNUp64to128/split_1:44"
  input: "gModel_0/NNUp64to128/split_1:45"
  input: "gModel_0/NNUp64to128/split_1:45"
  input: "gModel_0/NNUp64to128/split_1:46"
  input: "gModel_0/NNUp64to128/split_1:46"
  input: "gModel_0/NNUp64to128/split_1:47"
  input: "gModel_0/NNUp64to128/split_1:47"
  input: "gModel_0/NNUp64to128/split_1:48"
  input: "gModel_0/NNUp64to128/split_1:48"
  input: "gModel_0/NNUp64to128/split_1:49"
  input: "gModel_0/NNUp64to128/split_1:49"
  input: "gModel_0/NNUp64to128/split_1:50"
  input: "gModel_0/NNUp64to128/split_1:50"
  input: "gModel_0/NNUp64to128/split_1:51"
  input: "gModel_0/NNUp64to128/split_1:51"
  input: "gModel_0/NNUp64to128/split_1:52"
  input: "gModel_0/NNUp64to128/split_1:52"
  input: "gModel_0/NNUp64to128/split_1:53"
  input: "gModel_0/NNUp64to128/split_1:53"
  input: "gModel_0/NNUp64to128/split_1:54"
  input: "gModel_0/NNUp64to128/split_1:54"
  input: "gModel_0/NNUp64to128/split_1:55"
  input: "gModel_0/NNUp64to128/split_1:55"
  input: "gModel_0/NNUp64to128/split_1:56"
  input: "gModel_0/NNUp64to128/split_1:56"
  input: "gModel_0/NNUp64to128/split_1:57"
  input: "gModel_0/NNUp64to128/split_1:57"
  input: "gModel_0/NNUp64to128/split_1:58"
  input: "gModel_0/NNUp64to128/split_1:58"
  input: "gModel_0/NNUp64to128/split_1:59"
  input: "gModel_0/NNUp64to128/split_1:59"
  input: "gModel_0/NNUp64to128/split_1:60"
  input: "gModel_0/NNUp64to128/split_1:60"
  input: "gModel_0/NNUp64to128/split_1:61"
  input: "gModel_0/NNUp64to128/split_1:61"
  input: "gModel_0/NNUp64to128/split_1:62"
  input: "gModel_0/NNUp64to128/split_1:62"
  input: "gModel_0/NNUp64to128/split_1:63"
  input: "gModel_0/NNUp64to128/split_1:63"
  input: "gModel_0/NNUp64to128/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 128
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/split_2/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/split_2"
  op: "Split"
  input: "gModel_0/NNUp64to128/split_2/split_dim"
  input: "gModel_0/NNUp64to128/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 64
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/NNUp64to128/concat_2"
  op: "ConcatV2"
  input: "gModel_0/NNUp64to128/split_2"
  input: "gModel_0/NNUp64to128/split_2"
  input: "gModel_0/NNUp64to128/split_2:1"
  input: "gModel_0/NNUp64to128/split_2:1"
  input: "gModel_0/NNUp64to128/split_2:2"
  input: "gModel_0/NNUp64to128/split_2:2"
  input: "gModel_0/NNUp64to128/split_2:3"
  input: "gModel_0/NNUp64to128/split_2:3"
  input: "gModel_0/NNUp64to128/split_2:4"
  input: "gModel_0/NNUp64to128/split_2:4"
  input: "gModel_0/NNUp64to128/split_2:5"
  input: "gModel_0/NNUp64to128/split_2:5"
  input: "gModel_0/NNUp64to128/split_2:6"
  input: "gModel_0/NNUp64to128/split_2:6"
  input: "gModel_0/NNUp64to128/split_2:7"
  input: "gModel_0/NNUp64to128/split_2:7"
  input: "gModel_0/NNUp64to128/split_2:8"
  input: "gModel_0/NNUp64to128/split_2:8"
  input: "gModel_0/NNUp64to128/split_2:9"
  input: "gModel_0/NNUp64to128/split_2:9"
  input: "gModel_0/NNUp64to128/split_2:10"
  input: "gModel_0/NNUp64to128/split_2:10"
  input: "gModel_0/NNUp64to128/split_2:11"
  input: "gModel_0/NNUp64to128/split_2:11"
  input: "gModel_0/NNUp64to128/split_2:12"
  input: "gModel_0/NNUp64to128/split_2:12"
  input: "gModel_0/NNUp64to128/split_2:13"
  input: "gModel_0/NNUp64to128/split_2:13"
  input: "gModel_0/NNUp64to128/split_2:14"
  input: "gModel_0/NNUp64to128/split_2:14"
  input: "gModel_0/NNUp64to128/split_2:15"
  input: "gModel_0/NNUp64to128/split_2:15"
  input: "gModel_0/NNUp64to128/split_2:16"
  input: "gModel_0/NNUp64to128/split_2:16"
  input: "gModel_0/NNUp64to128/split_2:17"
  input: "gModel_0/NNUp64to128/split_2:17"
  input: "gModel_0/NNUp64to128/split_2:18"
  input: "gModel_0/NNUp64to128/split_2:18"
  input: "gModel_0/NNUp64to128/split_2:19"
  input: "gModel_0/NNUp64to128/split_2:19"
  input: "gModel_0/NNUp64to128/split_2:20"
  input: "gModel_0/NNUp64to128/split_2:20"
  input: "gModel_0/NNUp64to128/split_2:21"
  input: "gModel_0/NNUp64to128/split_2:21"
  input: "gModel_0/NNUp64to128/split_2:22"
  input: "gModel_0/NNUp64to128/split_2:22"
  input: "gModel_0/NNUp64to128/split_2:23"
  input: "gModel_0/NNUp64to128/split_2:23"
  input: "gModel_0/NNUp64to128/split_2:24"
  input: "gModel_0/NNUp64to128/split_2:24"
  input: "gModel_0/NNUp64to128/split_2:25"
  input: "gModel_0/NNUp64to128/split_2:25"
  input: "gModel_0/NNUp64to128/split_2:26"
  input: "gModel_0/NNUp64to128/split_2:26"
  input: "gModel_0/NNUp64to128/split_2:27"
  input: "gModel_0/NNUp64to128/split_2:27"
  input: "gModel_0/NNUp64to128/split_2:28"
  input: "gModel_0/NNUp64to128/split_2:28"
  input: "gModel_0/NNUp64to128/split_2:29"
  input: "gModel_0/NNUp64to128/split_2:29"
  input: "gModel_0/NNUp64to128/split_2:30"
  input: "gModel_0/NNUp64to128/split_2:30"
  input: "gModel_0/NNUp64to128/split_2:31"
  input: "gModel_0/NNUp64to128/split_2:31"
  input: "gModel_0/NNUp64to128/split_2:32"
  input: "gModel_0/NNUp64to128/split_2:32"
  input: "gModel_0/NNUp64to128/split_2:33"
  input: "gModel_0/NNUp64to128/split_2:33"
  input: "gModel_0/NNUp64to128/split_2:34"
  input: "gModel_0/NNUp64to128/split_2:34"
  input: "gModel_0/NNUp64to128/split_2:35"
  input: "gModel_0/NNUp64to128/split_2:35"
  input: "gModel_0/NNUp64to128/split_2:36"
  input: "gModel_0/NNUp64to128/split_2:36"
  input: "gModel_0/NNUp64to128/split_2:37"
  input: "gModel_0/NNUp64to128/split_2:37"
  input: "gModel_0/NNUp64to128/split_2:38"
  input: "gModel_0/NNUp64to128/split_2:38"
  input: "gModel_0/NNUp64to128/split_2:39"
  input: "gModel_0/NNUp64to128/split_2:39"
  input: "gModel_0/NNUp64to128/split_2:40"
  input: "gModel_0/NNUp64to128/split_2:40"
  input: "gModel_0/NNUp64to128/split_2:41"
  input: "gModel_0/NNUp64to128/split_2:41"
  input: "gModel_0/NNUp64to128/split_2:42"
  input: "gModel_0/NNUp64to128/split_2:42"
  input: "gModel_0/NNUp64to128/split_2:43"
  input: "gModel_0/NNUp64to128/split_2:43"
  input: "gModel_0/NNUp64to128/split_2:44"
  input: "gModel_0/NNUp64to128/split_2:44"
  input: "gModel_0/NNUp64to128/split_2:45"
  input: "gModel_0/NNUp64to128/split_2:45"
  input: "gModel_0/NNUp64to128/split_2:46"
  input: "gModel_0/NNUp64to128/split_2:46"
  input: "gModel_0/NNUp64to128/split_2:47"
  input: "gModel_0/NNUp64to128/split_2:47"
  input: "gModel_0/NNUp64to128/split_2:48"
  input: "gModel_0/NNUp64to128/split_2:48"
  input: "gModel_0/NNUp64to128/split_2:49"
  input: "gModel_0/NNUp64to128/split_2:49"
  input: "gModel_0/NNUp64to128/split_2:50"
  input: "gModel_0/NNUp64to128/split_2:50"
  input: "gModel_0/NNUp64to128/split_2:51"
  input: "gModel_0/NNUp64to128/split_2:51"
  input: "gModel_0/NNUp64to128/split_2:52"
  input: "gModel_0/NNUp64to128/split_2:52"
  input: "gModel_0/NNUp64to128/split_2:53"
  input: "gModel_0/NNUp64to128/split_2:53"
  input: "gModel_0/NNUp64to128/split_2:54"
  input: "gModel_0/NNUp64to128/split_2:54"
  input: "gModel_0/NNUp64to128/split_2:55"
  input: "gModel_0/NNUp64to128/split_2:55"
  input: "gModel_0/NNUp64to128/split_2:56"
  input: "gModel_0/NNUp64to128/split_2:56"
  input: "gModel_0/NNUp64to128/split_2:57"
  input: "gModel_0/NNUp64to128/split_2:57"
  input: "gModel_0/NNUp64to128/split_2:58"
  input: "gModel_0/NNUp64to128/split_2:58"
  input: "gModel_0/NNUp64to128/split_2:59"
  input: "gModel_0/NNUp64to128/split_2:59"
  input: "gModel_0/NNUp64to128/split_2:60"
  input: "gModel_0/NNUp64to128/split_2:60"
  input: "gModel_0/NNUp64to128/split_2:61"
  input: "gModel_0/NNUp64to128/split_2:61"
  input: "gModel_0/NNUp64to128/split_2:62"
  input: "gModel_0/NNUp64to128/split_2:62"
  input: "gModel_0/NNUp64to128/split_2:63"
  input: "gModel_0/NNUp64to128/split_2:63"
  input: "gModel_0/NNUp64to128/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 128
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/Shape"
  op: "Shape"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/ExpandDims"
  op: "ExpandDims"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/transpose_1"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/Tile"
  op: "Tile"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/ExpandDims"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/mul"
  op: "Mul"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/Shape"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/Tile"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/split"
  op: "Split"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split/split_dim"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 64
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:1"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:1"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:2"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:2"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:3"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:3"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:4"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:4"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:5"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:5"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:6"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:6"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:7"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:7"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:8"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:8"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:9"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:9"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:10"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:10"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:11"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:11"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:12"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:12"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:13"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:13"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:14"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:14"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:15"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:15"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:16"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:16"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:17"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:17"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:18"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:18"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:19"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:19"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:20"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:20"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:21"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:21"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:22"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:22"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:23"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:23"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:24"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:24"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:25"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:25"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:26"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:26"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:27"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:27"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:28"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:28"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:29"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:29"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:30"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:30"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:31"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:31"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:32"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:32"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:33"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:33"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:34"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:34"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:35"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:35"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:36"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:36"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:37"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:37"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:38"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:38"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:39"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:39"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:40"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:40"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:41"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:41"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:42"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:42"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:43"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:43"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:44"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:44"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:45"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:45"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:46"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:46"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:47"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:47"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:48"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:48"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:49"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:49"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:50"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:50"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:51"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:51"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:52"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:52"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:53"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:53"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:54"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:54"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:55"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:55"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:56"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:56"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:57"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:57"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:58"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:58"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:59"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:59"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:60"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:60"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:61"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:61"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:62"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:62"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:63"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split:63"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 128
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1"
  op: "Split"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1/split_dim"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 64
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/up_sampling3d_5/concat_1"
  op: "ConcatV2"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:1"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:1"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:2"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:2"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:3"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:3"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:4"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:4"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:5"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:5"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:6"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:6"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:7"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:7"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:8"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:8"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:9"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:9"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:10"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:10"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:11"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:11"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:12"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:12"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:13"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:13"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:14"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:14"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:15"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:15"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:16"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:16"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:17"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:17"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:18"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:18"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:19"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:19"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:20"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:20"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:21"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:21"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:22"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:22"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:23"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:23"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:24"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:24"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:25"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:25"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:26"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:26"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:27"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:27"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:28"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:28"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:29"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:29"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:30"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:30"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:31"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:31"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:32"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:32"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:33"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:33"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:34"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:34"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:35"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:35"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:36"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:36"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:37"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:37"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:38"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:38"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:39"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:39"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:40"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:40"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:41"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:41"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:42"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:42"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:43"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:43"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:44"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:44"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:45"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:45"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:46"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:46"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:47"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:47"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:48"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:48"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:49"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:49"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:50"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:50"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:51"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:51"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:52"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:52"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:53"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:53"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:54"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:54"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:55"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:55"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:56"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:56"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:57"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:57"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:58"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:58"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:59"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:59"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:60"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:60"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:61"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:61"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:62"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:62"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:63"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/split_1:63"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 128
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/concatenate_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/concatenate_5/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_64to128/up_sampling3d_5/concat_1"
  input: "gModel_0/gLEnc_128to64/elu_1/Elu"
  input: "gModel_0/gLDec_64to128/concatenate_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_52/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_52/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_64to128/concatenate_5/concat"
  input: "gModel_0/gLDec_64to128/lambda_52/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_52/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_52/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_52/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/gLDec_64to128/lambda_52/Placeholder"
  input: "gModel_0/gLDec_64to128/lambda_52/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_53/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\202\000\000\000\202\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_53/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/lambda_52/MirrorPad"
  input: "gModel_0/gLDec_64to128/lambda_53/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_53/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 130
        }
        dim {
          size: 130
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_53/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\202\000\000\000\202\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_53/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/lambda_53/Placeholder"
  input: "gModel_0/gLDec_64to128/lambda_53/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05469658970832825
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6047981
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/mul"
  input: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/conv2d_18/kernel"
  input: "gModel_0/gLDec_64to128/conv2d_18/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/conv2d_18/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/conv2d_18/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/conv2d_18/bias"
  input: "gModel_0/gLDec_64to128/conv2d_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/conv2d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/conv2d_18/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/conv2d_18/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_64to128/lambda_53/Reshape"
  input: "gModel_0/gLDec_64to128/conv2d_18/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/conv2d_18/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_64to128/conv2d_18/convolution"
  input: "gModel_0/gLDec_64to128/conv2d_18/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_54/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_54/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/conv2d_18/BiasAdd"
  input: "gModel_0/gLDec_64to128/lambda_54/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_54/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_54/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/lambda_54/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/lambda_54/Placeholder"
  input: "gModel_0/gLDec_64to128/lambda_54/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/elu_17/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_64to128/lambda_54/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06698936223983765
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4763859
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/TruncatedNormal"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal"
  op: "Add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/mul"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel/read"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias/read"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/zeros"
  op: "Fill"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/zeros/shape_as_tensor"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable/read"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose"
  op: "Transpose"
  input: "gModel_0/gLDec_64to128/elu_17/Elu"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Shape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice_1/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable/read"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/concat"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/MirrorPad"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/convolution"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma/read"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta/Assign"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta/read"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Shape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Shape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_1/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Shape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_2/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Shape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_3/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/stack"
  op: "Pack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/stack/1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/strided_slice_2"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/BiasAdd"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/SquaredDifference"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/sub"
  op: "Sub"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/add"
  op: "Add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/moments/variance"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/clip_by_value/Minimum"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/sub"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/truediv"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma/read"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/mul"
  op: "Mul"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta/read"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/add_1"
  op: "Add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/mul"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/add_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray_1"
  op: "TensorArrayV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: " \000\000\000\001\000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/Shape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/strided_slice/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/strided_slice/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/range"
  op: "Range"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/range/start"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/strided_slice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/range"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/maximum_iterations"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Enter_2"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Enter_3"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge"
  op: "Merge"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_1"
  op: "Merge"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Enter_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_2"
  op: "Merge"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Enter_2"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_3"
  op: "Merge"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Enter_3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Less"
  op: "Less"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Less/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/maximum_iterations"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Less_1"
  op: "Less"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Less_1/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/LogicalAnd"
  op: "LogicalAnd"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Less"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Less_1"
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/LoopCond"
  op: "LoopCond"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/LogicalAnd"
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch"
  op: "Switch"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_1"
  op: "Switch"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_1"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_2"
  op: "Switch"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_2"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_2"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_3"
  op: "Switch"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Merge_3"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity_1"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity_2"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity_3"
  op: "Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/add"
  op: "Add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayReadV3/Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/concat/axis"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/concat"
  op: "ConcatV2"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayReadV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity_3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/MirrorPad/paddings"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/concat"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/convolution/dilation_rate"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/convolution"
  op: "Conv2D"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/MirrorPad"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/convolution/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/convolution/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/convolution"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/BiasAdd/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Shape"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Shape_1"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice/stack"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Shape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_1/stack"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_1/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_1/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Shape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_1/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_1/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_2/stack"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_2/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_2/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_2"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Shape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_2/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_2/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_3/stack"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_3/stack_1"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_3/stack_2"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_3"
  op: "StridedSlice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Shape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_3/stack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_3/stack_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/stack/1"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/stack/4"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/stack"
  op: "Pack"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/stack/1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/strided_slice_2"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/BiasAdd"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/mean/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/mean"
  op: "Mean"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/StopGradient"
  op: "StopGradient"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/variance/reduction_indices"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/variance"
  op: "Mean"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/SquaredDifference"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/sub"
  op: "Sub"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/add/y"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/add"
  op: "Add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/moments/variance"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Const"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Const_1"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/clip_by_value/Minimum"
  op: "Minimum"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/clip_by_value"
  op: "Maximum"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/clip_by_value/Minimum"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Sqrt"
  op: "Sqrt"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/truediv"
  op: "RealDiv"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/sub"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_1"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/truediv"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_2/shape"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_2"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_2/Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_2/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/mul"
  op: "Mul"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_3/shape"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_3"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_3/Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/add_1"
  op: "Add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/mul"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_4"
  op: "Reshape"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/add_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Elu"
  op: "Elu"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/group_normalization_5/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Elu"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Elu"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Elu"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/add_1/y"
  op: "Const"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/add_1"
  op: "Add"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Identity_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/NextIteration"
  op: "NextIteration"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/NextIteration_1"
  op: "NextIteration"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/NextIteration_2"
  op: "NextIteration"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/NextIteration_3"
  op: "NextIteration"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Exit"
  op: "Exit"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Exit_1"
  op: "Exit"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Exit_2"
  op: "Exit"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Exit_3"
  op: "Exit"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/range"
  op: "Range"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/range/start"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/TensorArraySizeV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/range"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/sub"
  op: "Sub"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Exit_1"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArray"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/sub"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/while/Exit_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose_1"
  op: "Transpose"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/TensorArrayStack/TensorArrayGatherV3"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_55/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_55/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/transpose_1"
  input: "gModel_0/toRGB_L_128/lambda_55/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_55/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_55/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_55/MirrorPad_1"
  op: "MirrorPad"
  input: "gModel_0/toRGB_L_128/lambda_55/Placeholder"
  input: "gModel_0/toRGB_L_128/lambda_55/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_56/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_56/Reshape"
  op: "Reshape"
  input: "gModel_0/toRGB_L_128/lambda_55/MirrorPad"
  input: "gModel_0/toRGB_L_128/lambda_56/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_56/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_56/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_56/Reshape_1"
  op: "Reshape"
  input: "gModel_0/toRGB_L_128/lambda_56/Placeholder"
  input: "gModel_0/toRGB_L_128/lambda_56/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.28421181440353394
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 252026
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/mul"
  op: "Mul"
  input: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/TruncatedNormal"
  input: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal"
  op: "Add"
  input: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/mul"
  input: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/kernel/Assign"
  op: "Assign"
  input: "gModel_0/toRGB_L_128/conv2d_19/kernel"
  input: "gModel_0/toRGB_L_128/conv2d_19/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_128/conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/kernel/read"
  op: "Identity"
  input: "gModel_0/toRGB_L_128/conv2d_19/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_128/conv2d_19/kernel"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/bias/Assign"
  op: "Assign"
  input: "gModel_0/toRGB_L_128/conv2d_19/bias"
  input: "gModel_0/toRGB_L_128/conv2d_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_128/conv2d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/bias/read"
  op: "Identity"
  input: "gModel_0/toRGB_L_128/conv2d_19/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_128/conv2d_19/bias"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/convolution"
  op: "Conv2D"
  input: "gModel_0/toRGB_L_128/lambda_56/Reshape"
  input: "gModel_0/toRGB_L_128/conv2d_19/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/conv2d_19/BiasAdd"
  op: "BiasAdd"
  input: "gModel_0/toRGB_L_128/conv2d_19/convolution"
  input: "gModel_0/toRGB_L_128/conv2d_19/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_57/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_57/Reshape"
  op: "Reshape"
  input: "gModel_0/toRGB_L_128/conv2d_19/BiasAdd"
  input: "gModel_0/toRGB_L_128/lambda_57/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_57/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_57/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/toRGB_L_128/lambda_57/Reshape_1"
  op: "Reshape"
  input: "gModel_0/toRGB_L_128/lambda_57/Placeholder"
  input: "gModel_0/toRGB_L_128/lambda_57/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/input"
  input: "gModel_0/maskedBypass0/lambda_58/strided_slice/stack"
  input: "gModel_0/maskedBypass0/lambda_58/strided_slice/stack_1"
  input: "gModel_0/maskedBypass0/lambda_58/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/mul"
  op: "Mul"
  input: "gModel_0/maskedBypass0/lambda_58/strided_slice"
  input: "gModel_0/maskedBypass0/lambda_58/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/add"
  op: "Add"
  input: "gModel_0/maskedBypass0/lambda_58/mul"
  input: "gModel_0/maskedBypass0/lambda_58/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/Tile"
  op: "Tile"
  input: "gModel_0/maskedBypass0/lambda_58/add"
  input: "gModel_0/maskedBypass0/lambda_58/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/maskedBypass0/lambda_58/Placeholder"
  input: "gModel_0/maskedBypass0/lambda_58/strided_slice_1/stack"
  input: "gModel_0/maskedBypass0/lambda_58/strided_slice_1/stack_1"
  input: "gModel_0/maskedBypass0/lambda_58/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/mul_1"
  op: "Mul"
  input: "gModel_0/maskedBypass0/lambda_58/strided_slice_1"
  input: "gModel_0/maskedBypass0/lambda_58/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/add_1"
  op: "Add"
  input: "gModel_0/maskedBypass0/lambda_58/mul_1"
  input: "gModel_0/maskedBypass0/lambda_58/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/Tile_1/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_58/Tile_1"
  op: "Tile"
  input: "gModel_0/maskedBypass0/lambda_58/add_1"
  input: "gModel_0/maskedBypass0/lambda_58/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/mul"
  op: "Mul"
  input: "gModel_0/toRGB_L_128/lambda_57/Reshape"
  input: "gModel_0/maskedBypass0/lambda_58/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/sub"
  op: "Sub"
  input: "gModel_0/toRGB_L_128/lambda_57/Reshape"
  input: "gModel_0/maskedBypass0/lambda_59/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/strided_slice"
  op: "StridedSlice"
  input: "gModel_0/input"
  input: "gModel_0/maskedBypass0/lambda_59/strided_slice/stack"
  input: "gModel_0/maskedBypass0/lambda_59/strided_slice/stack_1"
  input: "gModel_0/maskedBypass0/lambda_59/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/mul_1"
  op: "Mul"
  input: "gModel_0/maskedBypass0/lambda_59/strided_slice"
  input: "gModel_0/maskedBypass0/lambda_58/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/add"
  op: "Add"
  input: "gModel_0/maskedBypass0/lambda_59/sub"
  input: "gModel_0/maskedBypass0/lambda_59/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/mul_2"
  op: "Mul"
  input: "gModel_0/maskedBypass0/lambda_59/Placeholder_1"
  input: "gModel_0/maskedBypass0/lambda_59/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/sub_1"
  op: "Sub"
  input: "gModel_0/maskedBypass0/lambda_59/Placeholder_1"
  input: "gModel_0/maskedBypass0/lambda_59/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/strided_slice_1"
  op: "StridedSlice"
  input: "gModel_0/maskedBypass0/lambda_59/Placeholder"
  input: "gModel_0/maskedBypass0/lambda_59/strided_slice_1/stack"
  input: "gModel_0/maskedBypass0/lambda_59/strided_slice_1/stack_1"
  input: "gModel_0/maskedBypass0/lambda_59/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/mul_3"
  op: "Mul"
  input: "gModel_0/maskedBypass0/lambda_59/strided_slice_1"
  input: "gModel_0/maskedBypass0/lambda_59/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gModel_0/maskedBypass0/lambda_59/add_1"
  op: "Add"
  input: "gModel_0/maskedBypass0/lambda_59/sub_1"
  input: "gModel_0/maskedBypass0/lambda_59/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Conv3DSN/lambda_60/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/lambda_60/MirrorPad"
  op: "MirrorPad"
  input: "input_1"
  input: "Conv3DSN/lambda_60/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN/lambda_60/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Conv3DSN/lambda_60/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/lambda_60/MirrorPad_1"
  op: "MirrorPad"
  input: "Conv3DSN/lambda_60/Placeholder"
  input: "Conv3DSN/lambda_60/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1786383092403412
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN/conv3dsn_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3729358
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal/mul"
  op: "Mul"
  input: "Conv3DSN/conv3dsn_1/truncated_normal/TruncatedNormal"
  input: "Conv3DSN/conv3dsn_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal"
  op: "Add"
  input: "Conv3DSN/conv3dsn_1/truncated_normal/mul"
  input: "Conv3DSN/conv3dsn_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/kernel/Assign"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/kernel"
  input: "Conv3DSN/conv3dsn_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/kernel/read"
  op: "Identity"
  input: "Conv3DSN/conv3dsn_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/kernel"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/bias/Assign"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/bias"
  input: "Conv3DSN/conv3dsn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/bias/read"
  op: "Identity"
  input: "Conv3DSN/conv3dsn_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/bias"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN/conv3dsn_1/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4542442
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal_1/mul"
  op: "Mul"
  input: "Conv3DSN/conv3dsn_1/truncated_normal_1/TruncatedNormal"
  input: "Conv3DSN/conv3dsn_1/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truncated_normal_1"
  op: "Add"
  input: "Conv3DSN/conv3dsn_1/truncated_normal_1/mul"
  input: "Conv3DSN/conv3dsn_1/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/u_sn"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/u_sn/Assign"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/u_sn"
  input: "Conv3DSN/conv3dsn_1/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/u_sn/read"
  op: "Identity"
  input: "Conv3DSN/conv3dsn_1/u_sn"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/u_sn"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Reshape"
  op: "Reshape"
  input: "Conv3DSN/conv3dsn_1/kernel/read"
  input: "Conv3DSN/conv3dsn_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 81
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 81
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Variable/Assign"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/Variable"
  input: "Conv3DSN/conv3dsn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Variable/read"
  op: "Identity"
  input: "Conv3DSN/conv3dsn_1/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/Variable"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose/Rank"
  op: "Rank"
  input: "Conv3DSN/conv3dsn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose/sub"
  op: "Sub"
  input: "Conv3DSN/conv3dsn_1/transpose/Rank"
  input: "Conv3DSN/conv3dsn_1/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose/Range"
  op: "Range"
  input: "Conv3DSN/conv3dsn_1/transpose/Range/start"
  input: "Conv3DSN/conv3dsn_1/transpose/Rank"
  input: "Conv3DSN/conv3dsn_1/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose/sub_1"
  op: "Sub"
  input: "Conv3DSN/conv3dsn_1/transpose/sub"
  input: "Conv3DSN/conv3dsn_1/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose"
  op: "Transpose"
  input: "Conv3DSN/conv3dsn_1/Reshape"
  input: "Conv3DSN/conv3dsn_1/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/MatMul"
  op: "MatMul"
  input: "Conv3DSN/conv3dsn_1/u_sn/read"
  input: "Conv3DSN/conv3dsn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/pow"
  op: "Pow"
  input: "Conv3DSN/conv3dsn_1/MatMul"
  input: "Conv3DSN/conv3dsn_1/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Sum"
  op: "Sum"
  input: "Conv3DSN/conv3dsn_1/pow"
  input: "Conv3DSN/conv3dsn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/pow_1"
  op: "Pow"
  input: "Conv3DSN/conv3dsn_1/Sum"
  input: "Conv3DSN/conv3dsn_1/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "Conv3DSN/conv3dsn_1/pow_1"
  input: "Conv3DSN/conv3dsn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/clip_by_value"
  op: "Maximum"
  input: "Conv3DSN/conv3dsn_1/clip_by_value/Minimum"
  input: "Conv3DSN/conv3dsn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truediv"
  op: "RealDiv"
  input: "Conv3DSN/conv3dsn_1/MatMul"
  input: "Conv3DSN/conv3dsn_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/MatMul_1"
  op: "MatMul"
  input: "Conv3DSN/conv3dsn_1/truediv"
  input: "Conv3DSN/conv3dsn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/pow_2"
  op: "Pow"
  input: "Conv3DSN/conv3dsn_1/MatMul_1"
  input: "Conv3DSN/conv3dsn_1/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Sum_1"
  op: "Sum"
  input: "Conv3DSN/conv3dsn_1/pow_2"
  input: "Conv3DSN/conv3dsn_1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/pow_3"
  op: "Pow"
  input: "Conv3DSN/conv3dsn_1/Sum_1"
  input: "Conv3DSN/conv3dsn_1/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "Conv3DSN/conv3dsn_1/pow_3"
  input: "Conv3DSN/conv3dsn_1/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/clip_by_value_1"
  op: "Maximum"
  input: "Conv3DSN/conv3dsn_1/clip_by_value_1/Minimum"
  input: "Conv3DSN/conv3dsn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truediv_1"
  op: "RealDiv"
  input: "Conv3DSN/conv3dsn_1/MatMul_1"
  input: "Conv3DSN/conv3dsn_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/MatMul_2"
  op: "MatMul"
  input: "Conv3DSN/conv3dsn_1/truediv"
  input: "Conv3DSN/conv3dsn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose_1/Rank"
  op: "Rank"
  input: "Conv3DSN/conv3dsn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose_1/sub"
  op: "Sub"
  input: "Conv3DSN/conv3dsn_1/transpose_1/Rank"
  input: "Conv3DSN/conv3dsn_1/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose_1/Range"
  op: "Range"
  input: "Conv3DSN/conv3dsn_1/transpose_1/Range/start"
  input: "Conv3DSN/conv3dsn_1/transpose_1/Rank"
  input: "Conv3DSN/conv3dsn_1/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose_1/sub_1"
  op: "Sub"
  input: "Conv3DSN/conv3dsn_1/transpose_1/sub"
  input: "Conv3DSN/conv3dsn_1/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/transpose_1"
  op: "Transpose"
  input: "Conv3DSN/conv3dsn_1/truediv_1"
  input: "Conv3DSN/conv3dsn_1/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/MatMul_3"
  op: "MatMul"
  input: "Conv3DSN/conv3dsn_1/MatMul_2"
  input: "Conv3DSN/conv3dsn_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/strided_slice"
  op: "StridedSlice"
  input: "Conv3DSN/conv3dsn_1/MatMul_3"
  input: "Conv3DSN/conv3dsn_1/strided_slice/stack"
  input: "Conv3DSN/conv3dsn_1/strided_slice/stack_1"
  input: "Conv3DSN/conv3dsn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/truediv_2"
  op: "RealDiv"
  input: "Conv3DSN/conv3dsn_1/Reshape"
  input: "Conv3DSN/conv3dsn_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Reshape_1"
  op: "Reshape"
  input: "Conv3DSN/conv3dsn_1/truediv_2"
  input: "Conv3DSN/conv3dsn_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Assign"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/u_sn"
  input: "Conv3DSN/conv3dsn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Assign_1"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/u_sn"
  input: "Conv3DSN/conv3dsn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Reshape_2/shape"
  op: "Const"
  input: "^Conv3DSN/conv3dsn_1/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Reshape_2"
  op: "Reshape"
  input: "Conv3DSN/conv3dsn_1/Reshape_1"
  input: "Conv3DSN/conv3dsn_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/convolution"
  op: "Conv3D"
  input: "Conv3DSN/lambda_60/MirrorPad"
  input: "Conv3DSN/conv3dsn_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN/conv3dsn_1/bias/read"
  input: "Conv3DSN/conv3dsn_1/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN/conv3dsn_1/add"
  op: "Add"
  input: "Conv3DSN/conv3dsn_1/convolution"
  input: "Conv3DSN/conv3dsn_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN/elu_18/Elu"
  op: "Elu"
  input: "Conv3DSN/conv3dsn_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/lambda_61/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/lambda_61/MirrorPad"
  op: "MirrorPad"
  input: "Conv3DSN/elu_18/Elu"
  input: "Conv3DSN_1/lambda_61/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_1/lambda_61/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "Conv3DSN_1/lambda_61/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/lambda_61/MirrorPad_1"
  op: "MirrorPad"
  input: "Conv3DSN_1/lambda_61/Placeholder"
  input: "Conv3DSN_1/lambda_61/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03157908841967583
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9382994
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal/mul"
  op: "Mul"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal/TruncatedNormal"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal"
  op: "Add"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal/mul"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/kernel/Assign"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/kernel"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/kernel/read"
  op: "Identity"
  input: "Conv3DSN_1/conv3dsn_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/kernel"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/bias/Assign"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/bias"
  input: "Conv3DSN_1/conv3dsn_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/bias/read"
  op: "Identity"
  input: "Conv3DSN_1/conv3dsn_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/bias"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 343473
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/mul"
  op: "Mul"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/TruncatedNormal"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truncated_normal_1"
  op: "Add"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/mul"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/u_sn"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/u_sn/Assign"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/u_sn"
  input: "Conv3DSN_1/conv3dsn_2/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/u_sn/read"
  op: "Identity"
  input: "Conv3DSN_1/conv3dsn_2/u_sn"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/u_sn"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Reshape"
  op: "Reshape"
  input: "Conv3DSN_1/conv3dsn_2/kernel/read"
  input: "Conv3DSN_1/conv3dsn_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \n\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/zeros"
  op: "Fill"
  input: "Conv3DSN_1/conv3dsn_2/zeros/shape_as_tensor"
  input: "Conv3DSN_1/conv3dsn_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2592
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Variable/Assign"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/Variable"
  input: "Conv3DSN_1/conv3dsn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Variable/read"
  op: "Identity"
  input: "Conv3DSN_1/conv3dsn_2/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/Variable"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose/Rank"
  op: "Rank"
  input: "Conv3DSN_1/conv3dsn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose/sub"
  op: "Sub"
  input: "Conv3DSN_1/conv3dsn_2/transpose/Rank"
  input: "Conv3DSN_1/conv3dsn_2/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose/Range"
  op: "Range"
  input: "Conv3DSN_1/conv3dsn_2/transpose/Range/start"
  input: "Conv3DSN_1/conv3dsn_2/transpose/Rank"
  input: "Conv3DSN_1/conv3dsn_2/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose/sub_1"
  op: "Sub"
  input: "Conv3DSN_1/conv3dsn_2/transpose/sub"
  input: "Conv3DSN_1/conv3dsn_2/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose"
  op: "Transpose"
  input: "Conv3DSN_1/conv3dsn_2/Reshape"
  input: "Conv3DSN_1/conv3dsn_2/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/MatMul"
  op: "MatMul"
  input: "Conv3DSN_1/conv3dsn_2/u_sn/read"
  input: "Conv3DSN_1/conv3dsn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/pow"
  op: "Pow"
  input: "Conv3DSN_1/conv3dsn_2/MatMul"
  input: "Conv3DSN_1/conv3dsn_2/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Sum"
  op: "Sum"
  input: "Conv3DSN_1/conv3dsn_2/pow"
  input: "Conv3DSN_1/conv3dsn_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/pow_1"
  op: "Pow"
  input: "Conv3DSN_1/conv3dsn_2/Sum"
  input: "Conv3DSN_1/conv3dsn_2/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "Conv3DSN_1/conv3dsn_2/pow_1"
  input: "Conv3DSN_1/conv3dsn_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/clip_by_value"
  op: "Maximum"
  input: "Conv3DSN_1/conv3dsn_2/clip_by_value/Minimum"
  input: "Conv3DSN_1/conv3dsn_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truediv"
  op: "RealDiv"
  input: "Conv3DSN_1/conv3dsn_2/MatMul"
  input: "Conv3DSN_1/conv3dsn_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/MatMul_1"
  op: "MatMul"
  input: "Conv3DSN_1/conv3dsn_2/truediv"
  input: "Conv3DSN_1/conv3dsn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/pow_2"
  op: "Pow"
  input: "Conv3DSN_1/conv3dsn_2/MatMul_1"
  input: "Conv3DSN_1/conv3dsn_2/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Sum_1"
  op: "Sum"
  input: "Conv3DSN_1/conv3dsn_2/pow_2"
  input: "Conv3DSN_1/conv3dsn_2/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/pow_3"
  op: "Pow"
  input: "Conv3DSN_1/conv3dsn_2/Sum_1"
  input: "Conv3DSN_1/conv3dsn_2/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "Conv3DSN_1/conv3dsn_2/pow_3"
  input: "Conv3DSN_1/conv3dsn_2/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/clip_by_value_1"
  op: "Maximum"
  input: "Conv3DSN_1/conv3dsn_2/clip_by_value_1/Minimum"
  input: "Conv3DSN_1/conv3dsn_2/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truediv_1"
  op: "RealDiv"
  input: "Conv3DSN_1/conv3dsn_2/MatMul_1"
  input: "Conv3DSN_1/conv3dsn_2/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/MatMul_2"
  op: "MatMul"
  input: "Conv3DSN_1/conv3dsn_2/truediv"
  input: "Conv3DSN_1/conv3dsn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose_1/Rank"
  op: "Rank"
  input: "Conv3DSN_1/conv3dsn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose_1/sub"
  op: "Sub"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1/Rank"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose_1/Range"
  op: "Range"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1/Range/start"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1/Rank"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose_1/sub_1"
  op: "Sub"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1/sub"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/transpose_1"
  op: "Transpose"
  input: "Conv3DSN_1/conv3dsn_2/truediv_1"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/MatMul_3"
  op: "MatMul"
  input: "Conv3DSN_1/conv3dsn_2/MatMul_2"
  input: "Conv3DSN_1/conv3dsn_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/strided_slice"
  op: "StridedSlice"
  input: "Conv3DSN_1/conv3dsn_2/MatMul_3"
  input: "Conv3DSN_1/conv3dsn_2/strided_slice/stack"
  input: "Conv3DSN_1/conv3dsn_2/strided_slice/stack_1"
  input: "Conv3DSN_1/conv3dsn_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/truediv_2"
  op: "RealDiv"
  input: "Conv3DSN_1/conv3dsn_2/Reshape"
  input: "Conv3DSN_1/conv3dsn_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Reshape_1"
  op: "Reshape"
  input: "Conv3DSN_1/conv3dsn_2/truediv_2"
  input: "Conv3DSN_1/conv3dsn_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Assign"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/u_sn"
  input: "Conv3DSN_1/conv3dsn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Assign_1"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/u_sn"
  input: "Conv3DSN_1/conv3dsn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Reshape_2/shape"
  op: "Const"
  input: "^Conv3DSN_1/conv3dsn_2/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Reshape_2"
  op: "Reshape"
  input: "Conv3DSN_1/conv3dsn_2/Reshape_1"
  input: "Conv3DSN_1/conv3dsn_2/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/convolution"
  op: "Conv3D"
  input: "Conv3DSN_1/lambda_61/MirrorPad"
  input: "Conv3DSN_1/conv3dsn_2/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_1/conv3dsn_2/bias/read"
  input: "Conv3DSN_1/conv3dsn_2/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_1/conv3dsn_2/add"
  op: "Add"
  input: "Conv3DSN_1/conv3dsn_2/convolution"
  input: "Conv3DSN_1/conv3dsn_2/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_1/elu_19/Elu"
  op: "Elu"
  input: "Conv3DSN_1/conv3dsn_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lambda_62/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice/stack_2"
  op: "Pack"
  input: "lambda_62/strided_slice/stack_2/values_0"
  input: "lambda_62/strided_slice/stack_2/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_62/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice"
  op: "StridedSlice"
  input: "Conv3DSN_1/elu_19/Elu"
  input: "lambda_62/strided_slice/stack"
  input: "lambda_62/strided_slice/stack_2"
  input: "lambda_62/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_62/add"
  op: "Add"
  input: "lambda_62/strided_slice"
  input: "input_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lambda_62/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_1/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_1/stack_1/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_1/stack_1"
  op: "Pack"
  input: "lambda_62/strided_slice_1/stack_1/values_0"
  input: "lambda_62/strided_slice_1/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_62/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_1/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_1"
  op: "StridedSlice"
  input: "Conv3DSN_1/elu_19/Elu"
  input: "lambda_62/strided_slice_1/stack_1"
  input: "lambda_62/strided_slice_1/stack_2"
  input: "lambda_62/strided_slice_1/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_62/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "lambda_62/concat"
  op: "ConcatV2"
  input: "lambda_62/add"
  input: "lambda_62/strided_slice_1"
  input: "lambda_62/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lambda_62/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "lambda_62/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_2/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_2/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_2/stack_2"
  op: "Pack"
  input: "lambda_62/strided_slice_2/stack_2/values_0"
  input: "lambda_62/strided_slice_2/stack_2/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_62/strided_slice_2/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_2"
  op: "StridedSlice"
  input: "lambda_62/Placeholder"
  input: "lambda_62/strided_slice_2/stack"
  input: "lambda_62/strided_slice_2/stack_2"
  input: "lambda_62/strided_slice_2/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_62/add_1"
  op: "Add"
  input: "lambda_62/strided_slice_2"
  input: "lambda_62/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lambda_62/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_3/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_3/stack_1/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_3/stack_1"
  op: "Pack"
  input: "lambda_62/strided_slice_3/stack_1/values_0"
  input: "lambda_62/strided_slice_3/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_62/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_3/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_62/strided_slice_3"
  op: "StridedSlice"
  input: "lambda_62/Placeholder"
  input: "lambda_62/strided_slice_3/stack_1"
  input: "lambda_62/strided_slice_3/stack_2"
  input: "lambda_62/strided_slice_3/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_62/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "lambda_62/concat_1"
  op: "ConcatV2"
  input: "lambda_62/add_1"
  input: "lambda_62/strided_slice_3"
  input: "lambda_62/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "average_pooling3d_1/AvgPool3D"
  op: "AvgPool3D"
  input: "lambda_62/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_2/lambda_63/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/lambda_63/MirrorPad"
  op: "MirrorPad"
  input: "average_pooling3d_1/AvgPool3D"
  input: "Conv3DSN_2/lambda_63/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_2/lambda_63/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "Conv3DSN_2/lambda_63/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/lambda_63/MirrorPad_1"
  op: "MirrorPad"
  input: "Conv3DSN_2/lambda_63/Placeholder"
  input: "Conv3DSN_2/lambda_63/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03157908841967583
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7005627
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal/mul"
  op: "Mul"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal/TruncatedNormal"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal"
  op: "Add"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal/mul"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/kernel/Assign"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/kernel"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/kernel/read"
  op: "Identity"
  input: "Conv3DSN_2/conv3dsn_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/kernel"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/bias/Assign"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/bias"
  input: "Conv3DSN_2/conv3dsn_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/bias/read"
  op: "Identity"
  input: "Conv3DSN_2/conv3dsn_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/bias"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 782551
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/mul"
  op: "Mul"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/TruncatedNormal"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truncated_normal_1"
  op: "Add"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/mul"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/u_sn"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/u_sn/Assign"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/u_sn"
  input: "Conv3DSN_2/conv3dsn_3/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/u_sn/read"
  op: "Identity"
  input: "Conv3DSN_2/conv3dsn_3/u_sn"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/u_sn"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Reshape"
  op: "Reshape"
  input: "Conv3DSN_2/conv3dsn_3/kernel/read"
  input: "Conv3DSN_2/conv3dsn_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \n\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/zeros"
  op: "Fill"
  input: "Conv3DSN_2/conv3dsn_3/zeros/shape_as_tensor"
  input: "Conv3DSN_2/conv3dsn_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2592
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Variable/Assign"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/Variable"
  input: "Conv3DSN_2/conv3dsn_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Variable/read"
  op: "Identity"
  input: "Conv3DSN_2/conv3dsn_3/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/Variable"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose/Rank"
  op: "Rank"
  input: "Conv3DSN_2/conv3dsn_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose/sub"
  op: "Sub"
  input: "Conv3DSN_2/conv3dsn_3/transpose/Rank"
  input: "Conv3DSN_2/conv3dsn_3/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose/Range"
  op: "Range"
  input: "Conv3DSN_2/conv3dsn_3/transpose/Range/start"
  input: "Conv3DSN_2/conv3dsn_3/transpose/Rank"
  input: "Conv3DSN_2/conv3dsn_3/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose/sub_1"
  op: "Sub"
  input: "Conv3DSN_2/conv3dsn_3/transpose/sub"
  input: "Conv3DSN_2/conv3dsn_3/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose"
  op: "Transpose"
  input: "Conv3DSN_2/conv3dsn_3/Reshape"
  input: "Conv3DSN_2/conv3dsn_3/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/MatMul"
  op: "MatMul"
  input: "Conv3DSN_2/conv3dsn_3/u_sn/read"
  input: "Conv3DSN_2/conv3dsn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/pow"
  op: "Pow"
  input: "Conv3DSN_2/conv3dsn_3/MatMul"
  input: "Conv3DSN_2/conv3dsn_3/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Sum"
  op: "Sum"
  input: "Conv3DSN_2/conv3dsn_3/pow"
  input: "Conv3DSN_2/conv3dsn_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/pow_1"
  op: "Pow"
  input: "Conv3DSN_2/conv3dsn_3/Sum"
  input: "Conv3DSN_2/conv3dsn_3/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "Conv3DSN_2/conv3dsn_3/pow_1"
  input: "Conv3DSN_2/conv3dsn_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/clip_by_value"
  op: "Maximum"
  input: "Conv3DSN_2/conv3dsn_3/clip_by_value/Minimum"
  input: "Conv3DSN_2/conv3dsn_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truediv"
  op: "RealDiv"
  input: "Conv3DSN_2/conv3dsn_3/MatMul"
  input: "Conv3DSN_2/conv3dsn_3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/MatMul_1"
  op: "MatMul"
  input: "Conv3DSN_2/conv3dsn_3/truediv"
  input: "Conv3DSN_2/conv3dsn_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/pow_2"
  op: "Pow"
  input: "Conv3DSN_2/conv3dsn_3/MatMul_1"
  input: "Conv3DSN_2/conv3dsn_3/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Sum_1"
  op: "Sum"
  input: "Conv3DSN_2/conv3dsn_3/pow_2"
  input: "Conv3DSN_2/conv3dsn_3/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/pow_3"
  op: "Pow"
  input: "Conv3DSN_2/conv3dsn_3/Sum_1"
  input: "Conv3DSN_2/conv3dsn_3/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "Conv3DSN_2/conv3dsn_3/pow_3"
  input: "Conv3DSN_2/conv3dsn_3/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/clip_by_value_1"
  op: "Maximum"
  input: "Conv3DSN_2/conv3dsn_3/clip_by_value_1/Minimum"
  input: "Conv3DSN_2/conv3dsn_3/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truediv_1"
  op: "RealDiv"
  input: "Conv3DSN_2/conv3dsn_3/MatMul_1"
  input: "Conv3DSN_2/conv3dsn_3/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/MatMul_2"
  op: "MatMul"
  input: "Conv3DSN_2/conv3dsn_3/truediv"
  input: "Conv3DSN_2/conv3dsn_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose_1/Rank"
  op: "Rank"
  input: "Conv3DSN_2/conv3dsn_3/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose_1/sub"
  op: "Sub"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1/Rank"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose_1/Range"
  op: "Range"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1/Range/start"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1/Rank"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose_1/sub_1"
  op: "Sub"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1/sub"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/transpose_1"
  op: "Transpose"
  input: "Conv3DSN_2/conv3dsn_3/truediv_1"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/MatMul_3"
  op: "MatMul"
  input: "Conv3DSN_2/conv3dsn_3/MatMul_2"
  input: "Conv3DSN_2/conv3dsn_3/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/strided_slice"
  op: "StridedSlice"
  input: "Conv3DSN_2/conv3dsn_3/MatMul_3"
  input: "Conv3DSN_2/conv3dsn_3/strided_slice/stack"
  input: "Conv3DSN_2/conv3dsn_3/strided_slice/stack_1"
  input: "Conv3DSN_2/conv3dsn_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/truediv_2"
  op: "RealDiv"
  input: "Conv3DSN_2/conv3dsn_3/Reshape"
  input: "Conv3DSN_2/conv3dsn_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Reshape_1"
  op: "Reshape"
  input: "Conv3DSN_2/conv3dsn_3/truediv_2"
  input: "Conv3DSN_2/conv3dsn_3/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Assign"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/u_sn"
  input: "Conv3DSN_2/conv3dsn_3/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Assign_1"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/u_sn"
  input: "Conv3DSN_2/conv3dsn_3/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Reshape_2/shape"
  op: "Const"
  input: "^Conv3DSN_2/conv3dsn_3/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Reshape_2"
  op: "Reshape"
  input: "Conv3DSN_2/conv3dsn_3/Reshape_1"
  input: "Conv3DSN_2/conv3dsn_3/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/convolution"
  op: "Conv3D"
  input: "Conv3DSN_2/lambda_63/MirrorPad"
  input: "Conv3DSN_2/conv3dsn_3/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_2/conv3dsn_3/bias/read"
  input: "Conv3DSN_2/conv3dsn_3/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_2/conv3dsn_3/add"
  op: "Add"
  input: "Conv3DSN_2/conv3dsn_3/convolution"
  input: "Conv3DSN_2/conv3dsn_3/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_2/elu_20/Elu"
  op: "Elu"
  input: "Conv3DSN_2/conv3dsn_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/lambda_64/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/lambda_64/MirrorPad"
  op: "MirrorPad"
  input: "Conv3DSN_2/elu_20/Elu"
  input: "Conv3DSN_3/lambda_64/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_3/lambda_64/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "Conv3DSN_3/lambda_64/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/lambda_64/MirrorPad_1"
  op: "MirrorPad"
  input: "Conv3DSN_3/lambda_64/Placeholder"
  input: "Conv3DSN_3/lambda_64/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02232978865504265
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4711427
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal/mul"
  op: "Mul"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal/TruncatedNormal"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal"
  op: "Add"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal/mul"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/kernel/Assign"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/kernel"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/kernel/read"
  op: "Identity"
  input: "Conv3DSN_3/conv3dsn_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/kernel"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/bias/Assign"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/bias"
  input: "Conv3DSN_3/conv3dsn_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/bias/read"
  op: "Identity"
  input: "Conv3DSN_3/conv3dsn_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/bias"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8069700
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/mul"
  op: "Mul"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/TruncatedNormal"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truncated_normal_1"
  op: "Add"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/mul"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/u_sn"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/u_sn/Assign"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/u_sn"
  input: "Conv3DSN_3/conv3dsn_4/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/u_sn/read"
  op: "Identity"
  input: "Conv3DSN_3/conv3dsn_4/u_sn"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/u_sn"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Reshape"
  op: "Reshape"
  input: "Conv3DSN_3/conv3dsn_4/kernel/read"
  input: "Conv3DSN_3/conv3dsn_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\024\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/zeros"
  op: "Fill"
  input: "Conv3DSN_3/conv3dsn_4/zeros/shape_as_tensor"
  input: "Conv3DSN_3/conv3dsn_4/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5184
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Variable/Assign"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/Variable"
  input: "Conv3DSN_3/conv3dsn_4/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Variable/read"
  op: "Identity"
  input: "Conv3DSN_3/conv3dsn_4/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/Variable"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose/Rank"
  op: "Rank"
  input: "Conv3DSN_3/conv3dsn_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose/sub"
  op: "Sub"
  input: "Conv3DSN_3/conv3dsn_4/transpose/Rank"
  input: "Conv3DSN_3/conv3dsn_4/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose/Range"
  op: "Range"
  input: "Conv3DSN_3/conv3dsn_4/transpose/Range/start"
  input: "Conv3DSN_3/conv3dsn_4/transpose/Rank"
  input: "Conv3DSN_3/conv3dsn_4/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose/sub_1"
  op: "Sub"
  input: "Conv3DSN_3/conv3dsn_4/transpose/sub"
  input: "Conv3DSN_3/conv3dsn_4/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose"
  op: "Transpose"
  input: "Conv3DSN_3/conv3dsn_4/Reshape"
  input: "Conv3DSN_3/conv3dsn_4/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/MatMul"
  op: "MatMul"
  input: "Conv3DSN_3/conv3dsn_4/u_sn/read"
  input: "Conv3DSN_3/conv3dsn_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/pow"
  op: "Pow"
  input: "Conv3DSN_3/conv3dsn_4/MatMul"
  input: "Conv3DSN_3/conv3dsn_4/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Sum"
  op: "Sum"
  input: "Conv3DSN_3/conv3dsn_4/pow"
  input: "Conv3DSN_3/conv3dsn_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/pow_1"
  op: "Pow"
  input: "Conv3DSN_3/conv3dsn_4/Sum"
  input: "Conv3DSN_3/conv3dsn_4/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/clip_by_value/Minimum"
  op: "Minimum"
  input: "Conv3DSN_3/conv3dsn_4/pow_1"
  input: "Conv3DSN_3/conv3dsn_4/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/clip_by_value"
  op: "Maximum"
  input: "Conv3DSN_3/conv3dsn_4/clip_by_value/Minimum"
  input: "Conv3DSN_3/conv3dsn_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truediv"
  op: "RealDiv"
  input: "Conv3DSN_3/conv3dsn_4/MatMul"
  input: "Conv3DSN_3/conv3dsn_4/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/MatMul_1"
  op: "MatMul"
  input: "Conv3DSN_3/conv3dsn_4/truediv"
  input: "Conv3DSN_3/conv3dsn_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/pow_2"
  op: "Pow"
  input: "Conv3DSN_3/conv3dsn_4/MatMul_1"
  input: "Conv3DSN_3/conv3dsn_4/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Sum_1"
  op: "Sum"
  input: "Conv3DSN_3/conv3dsn_4/pow_2"
  input: "Conv3DSN_3/conv3dsn_4/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/pow_3"
  op: "Pow"
  input: "Conv3DSN_3/conv3dsn_4/Sum_1"
  input: "Conv3DSN_3/conv3dsn_4/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "Conv3DSN_3/conv3dsn_4/pow_3"
  input: "Conv3DSN_3/conv3dsn_4/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/clip_by_value_1"
  op: "Maximum"
  input: "Conv3DSN_3/conv3dsn_4/clip_by_value_1/Minimum"
  input: "Conv3DSN_3/conv3dsn_4/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truediv_1"
  op: "RealDiv"
  input: "Conv3DSN_3/conv3dsn_4/MatMul_1"
  input: "Conv3DSN_3/conv3dsn_4/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/MatMul_2"
  op: "MatMul"
  input: "Conv3DSN_3/conv3dsn_4/truediv"
  input: "Conv3DSN_3/conv3dsn_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose_1/Rank"
  op: "Rank"
  input: "Conv3DSN_3/conv3dsn_4/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose_1/sub"
  op: "Sub"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1/Rank"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose_1/Range"
  op: "Range"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1/Range/start"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1/Rank"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose_1/sub_1"
  op: "Sub"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1/sub"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/transpose_1"
  op: "Transpose"
  input: "Conv3DSN_3/conv3dsn_4/truediv_1"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/MatMul_3"
  op: "MatMul"
  input: "Conv3DSN_3/conv3dsn_4/MatMul_2"
  input: "Conv3DSN_3/conv3dsn_4/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/strided_slice"
  op: "StridedSlice"
  input: "Conv3DSN_3/conv3dsn_4/MatMul_3"
  input: "Conv3DSN_3/conv3dsn_4/strided_slice/stack"
  input: "Conv3DSN_3/conv3dsn_4/strided_slice/stack_1"
  input: "Conv3DSN_3/conv3dsn_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/truediv_2"
  op: "RealDiv"
  input: "Conv3DSN_3/conv3dsn_4/Reshape"
  input: "Conv3DSN_3/conv3dsn_4/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Reshape_1"
  op: "Reshape"
  input: "Conv3DSN_3/conv3dsn_4/truediv_2"
  input: "Conv3DSN_3/conv3dsn_4/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Assign"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/u_sn"
  input: "Conv3DSN_3/conv3dsn_4/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Assign_1"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/u_sn"
  input: "Conv3DSN_3/conv3dsn_4/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Reshape_2/shape"
  op: "Const"
  input: "^Conv3DSN_3/conv3dsn_4/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Reshape_2"
  op: "Reshape"
  input: "Conv3DSN_3/conv3dsn_4/Reshape_1"
  input: "Conv3DSN_3/conv3dsn_4/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/convolution"
  op: "Conv3D"
  input: "Conv3DSN_3/lambda_64/MirrorPad"
  input: "Conv3DSN_3/conv3dsn_4/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_3/conv3dsn_4/bias/read"
  input: "Conv3DSN_3/conv3dsn_4/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_3/conv3dsn_4/add"
  op: "Add"
  input: "Conv3DSN_3/conv3dsn_4/convolution"
  input: "Conv3DSN_3/conv3dsn_4/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_3/elu_21/Elu"
  op: "Elu"
  input: "Conv3DSN_3/conv3dsn_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lambda_65/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice/stack_2"
  op: "Pack"
  input: "lambda_65/strided_slice/stack_2/values_0"
  input: "lambda_65/strided_slice/stack_2/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_65/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice"
  op: "StridedSlice"
  input: "Conv3DSN_3/elu_21/Elu"
  input: "lambda_65/strided_slice/stack"
  input: "lambda_65/strided_slice/stack_2"
  input: "lambda_65/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_65/add"
  op: "Add"
  input: "lambda_65/strided_slice"
  input: "average_pooling3d_1/AvgPool3D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lambda_65/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_1/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_1/stack_1/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_1/stack_1"
  op: "Pack"
  input: "lambda_65/strided_slice_1/stack_1/values_0"
  input: "lambda_65/strided_slice_1/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_65/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_1/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_1"
  op: "StridedSlice"
  input: "Conv3DSN_3/elu_21/Elu"
  input: "lambda_65/strided_slice_1/stack_1"
  input: "lambda_65/strided_slice_1/stack_2"
  input: "lambda_65/strided_slice_1/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_65/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "lambda_65/concat"
  op: "ConcatV2"
  input: "lambda_65/add"
  input: "lambda_65/strided_slice_1"
  input: "lambda_65/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lambda_65/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "lambda_65/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_2/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_2/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_2/stack_2"
  op: "Pack"
  input: "lambda_65/strided_slice_2/stack_2/values_0"
  input: "lambda_65/strided_slice_2/stack_2/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_65/strided_slice_2/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_2"
  op: "StridedSlice"
  input: "lambda_65/Placeholder"
  input: "lambda_65/strided_slice_2/stack"
  input: "lambda_65/strided_slice_2/stack_2"
  input: "lambda_65/strided_slice_2/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_65/add_1"
  op: "Add"
  input: "lambda_65/strided_slice_2"
  input: "lambda_65/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lambda_65/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_3/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_3/stack_1/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_3/stack_1"
  op: "Pack"
  input: "lambda_65/strided_slice_3/stack_1/values_0"
  input: "lambda_65/strided_slice_3/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_65/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_3/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lambda_65/strided_slice_3"
  op: "StridedSlice"
  input: "lambda_65/Placeholder"
  input: "lambda_65/strided_slice_3/stack_1"
  input: "lambda_65/strided_slice_3/stack_2"
  input: "lambda_65/strided_slice_3/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lambda_65/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "lambda_65/concat_1"
  op: "ConcatV2"
  input: "lambda_65/add_1"
  input: "lambda_65/strided_slice_3"
  input: "lambda_65/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "average_pooling3d_2/AvgPool3D"
  op: "AvgPool3D"
  input: "lambda_65/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "flatten_1/Shape"
  op: "Shape"
  input: "average_pooling3d_2/AvgPool3D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice"
  op: "StridedSlice"
  input: "flatten_1/Shape"
  input: "flatten_1/strided_slice/stack"
  input: "flatten_1/strided_slice/stack_1"
  input: "flatten_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_1/Prod"
  op: "Prod"
  input: "flatten_1/strided_slice"
  input: "flatten_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "flatten_1/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten_1/stack"
  op: "Pack"
  input: "flatten_1/stack/0"
  input: "flatten_1/Prod"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_1/Reshape"
  op: "Reshape"
  input: "average_pooling3d_2/AvgPool3D"
  input: "flatten_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FFT3DNode/lambda_66/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_66/transpose"
  op: "Transpose"
  input: "input_1"
  input: "FFT3DNode/lambda_66/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FFT3DNode/lambda_66/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_66/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_66/transpose_1"
  op: "Transpose"
  input: "FFT3DNode/lambda_66/Placeholder"
  input: "FFT3DNode/lambda_66/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FFT3DNode/lambda_67/zeros_like"
  op: "ZerosLike"
  input: "FFT3DNode/lambda_66/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_67/Complex"
  op: "Complex"
  input: "FFT3DNode/lambda_66/transpose"
  input: "FFT3DNode/lambda_67/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_COMPLEX64
    }
  }
}
node {
  name: "FFT3DNode/lambda_67/FFT3D"
  op: "FFT3D"
  input: "FFT3DNode/lambda_67/Complex"
  attr {
    key: "Tcomplex"
    value {
      type: DT_COMPLEX64
    }
  }
}
node {
  name: "FFT3DNode/lambda_67/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_67/zeros_like_1"
  op: "ZerosLike"
  input: "FFT3DNode/lambda_67/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_67/Complex_1"
  op: "Complex"
  input: "FFT3DNode/lambda_67/Placeholder"
  input: "FFT3DNode/lambda_67/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_COMPLEX64
    }
  }
}
node {
  name: "FFT3DNode/lambda_67/FFT3D_1"
  op: "FFT3D"
  input: "FFT3DNode/lambda_67/Complex_1"
  attr {
    key: "Tcomplex"
    value {
      type: DT_COMPLEX64
    }
  }
}
node {
  name: "FFT3DNode/lambda_68/Real"
  op: "Real"
  input: "FFT3DNode/lambda_67/FFT3D"
  attr {
    key: "T"
    value {
      type: DT_COMPLEX64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_68/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9073486328125e-06
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_68/mul"
  op: "Mul"
  input: "FFT3DNode/lambda_68/Real"
  input: "FFT3DNode/lambda_68/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_68/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_68/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9073486328125e-06
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_68/mul_1"
  op: "Mul"
  input: "FFT3DNode/lambda_68/Placeholder"
  input: "FFT3DNode/lambda_68/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_69/Imag"
  op: "Imag"
  input: "FFT3DNode/lambda_67/FFT3D"
  attr {
    key: "T"
    value {
      type: DT_COMPLEX64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_69/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9073486328125e-06
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_69/mul"
  op: "Mul"
  input: "FFT3DNode/lambda_69/Imag"
  input: "FFT3DNode/lambda_69/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_69/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_69/Imag_1/zeros_like"
  op: "ZerosLike"
  input: "FFT3DNode/lambda_69/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_69/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9073486328125e-06
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_69/mul_1"
  op: "Mul"
  input: "FFT3DNode/lambda_69/Imag_1/zeros_like"
  input: "FFT3DNode/lambda_69/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/concatenate_6/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "FFT3DNode/concatenate_6/concat"
  op: "ConcatV2"
  input: "FFT3DNode/lambda_68/mul"
  input: "FFT3DNode/lambda_69/mul"
  input: "FFT3DNode/concatenate_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/mul"
  op: "Mul"
  input: "FFT3DNode/concatenate_6/concat"
  input: "FFT3DNode/lambda_70/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/transpose"
  op: "Transpose"
  input: "FFT3DNode/lambda_70/mul"
  input: "FFT3DNode/lambda_70/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 6
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/mul_1"
  op: "Mul"
  input: "FFT3DNode/lambda_70/Placeholder"
  input: "FFT3DNode/lambda_70/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "FFT3DNode/lambda_70/transpose_1"
  op: "Transpose"
  input: "FFT3DNode/lambda_70/mul_1"
  input: "FFT3DNode/lambda_70/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/lambda_71/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/lambda_71/MirrorPad"
  op: "MirrorPad"
  input: "FFT3DNode/lambda_70/transpose"
  input: "Conv3DSN_4/lambda_71/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_4/lambda_71/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Conv3DSN_4/lambda_71/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/lambda_71/MirrorPad_1"
  op: "MirrorPad"
  input: "Conv3DSN_4/lambda_71/Placeholder"
  input: "Conv3DSN_4/lambda_71/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\006\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1263163536787033
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7767315
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal/mul"
  op: "Mul"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal/TruncatedNormal"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal"
  op: "Add"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal/mul"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 6
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/kernel/Assign"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/kernel"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/kernel/read"
  op: "Identity"
  input: "Conv3DSN_4/conv3dsn_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/kernel"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/bias/Assign"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/bias"
  input: "Conv3DSN_4/conv3dsn_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/bias/read"
  op: "Identity"
  input: "Conv3DSN_4/conv3dsn_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/bias"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5215480
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/mul"
  op: "Mul"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/TruncatedNormal"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truncated_normal_1"
  op: "Add"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/mul"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/u_sn"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/u_sn/Assign"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/u_sn"
  input: "Conv3DSN_4/conv3dsn_5/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/u_sn/read"
  op: "Identity"
  input: "Conv3DSN_4/conv3dsn_5/u_sn"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/u_sn"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Reshape"
  op: "Reshape"
  input: "Conv3DSN_4/conv3dsn_5/kernel/read"
  input: "Conv3DSN_4/conv3dsn_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 162
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 162
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Variable/Assign"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/Variable"
  input: "Conv3DSN_4/conv3dsn_5/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Variable/read"
  op: "Identity"
  input: "Conv3DSN_4/conv3dsn_5/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/Variable"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose/Rank"
  op: "Rank"
  input: "Conv3DSN_4/conv3dsn_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose/sub"
  op: "Sub"
  input: "Conv3DSN_4/conv3dsn_5/transpose/Rank"
  input: "Conv3DSN_4/conv3dsn_5/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose/Range"
  op: "Range"
  input: "Conv3DSN_4/conv3dsn_5/transpose/Range/start"
  input: "Conv3DSN_4/conv3dsn_5/transpose/Rank"
  input: "Conv3DSN_4/conv3dsn_5/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose/sub_1"
  op: "Sub"
  input: "Conv3DSN_4/conv3dsn_5/transpose/sub"
  input: "Conv3DSN_4/conv3dsn_5/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose"
  op: "Transpose"
  input: "Conv3DSN_4/conv3dsn_5/Reshape"
  input: "Conv3DSN_4/conv3dsn_5/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/MatMul"
  op: "MatMul"
  input: "Conv3DSN_4/conv3dsn_5/u_sn/read"
  input: "Conv3DSN_4/conv3dsn_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/pow"
  op: "Pow"
  input: "Conv3DSN_4/conv3dsn_5/MatMul"
  input: "Conv3DSN_4/conv3dsn_5/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Sum"
  op: "Sum"
  input: "Conv3DSN_4/conv3dsn_5/pow"
  input: "Conv3DSN_4/conv3dsn_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/pow_1"
  op: "Pow"
  input: "Conv3DSN_4/conv3dsn_5/Sum"
  input: "Conv3DSN_4/conv3dsn_5/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/clip_by_value/Minimum"
  op: "Minimum"
  input: "Conv3DSN_4/conv3dsn_5/pow_1"
  input: "Conv3DSN_4/conv3dsn_5/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/clip_by_value"
  op: "Maximum"
  input: "Conv3DSN_4/conv3dsn_5/clip_by_value/Minimum"
  input: "Conv3DSN_4/conv3dsn_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truediv"
  op: "RealDiv"
  input: "Conv3DSN_4/conv3dsn_5/MatMul"
  input: "Conv3DSN_4/conv3dsn_5/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/MatMul_1"
  op: "MatMul"
  input: "Conv3DSN_4/conv3dsn_5/truediv"
  input: "Conv3DSN_4/conv3dsn_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/pow_2"
  op: "Pow"
  input: "Conv3DSN_4/conv3dsn_5/MatMul_1"
  input: "Conv3DSN_4/conv3dsn_5/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Sum_1"
  op: "Sum"
  input: "Conv3DSN_4/conv3dsn_5/pow_2"
  input: "Conv3DSN_4/conv3dsn_5/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/pow_3"
  op: "Pow"
  input: "Conv3DSN_4/conv3dsn_5/Sum_1"
  input: "Conv3DSN_4/conv3dsn_5/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "Conv3DSN_4/conv3dsn_5/pow_3"
  input: "Conv3DSN_4/conv3dsn_5/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/clip_by_value_1"
  op: "Maximum"
  input: "Conv3DSN_4/conv3dsn_5/clip_by_value_1/Minimum"
  input: "Conv3DSN_4/conv3dsn_5/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truediv_1"
  op: "RealDiv"
  input: "Conv3DSN_4/conv3dsn_5/MatMul_1"
  input: "Conv3DSN_4/conv3dsn_5/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/MatMul_2"
  op: "MatMul"
  input: "Conv3DSN_4/conv3dsn_5/truediv"
  input: "Conv3DSN_4/conv3dsn_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose_1/Rank"
  op: "Rank"
  input: "Conv3DSN_4/conv3dsn_5/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose_1/sub"
  op: "Sub"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1/Rank"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose_1/Range"
  op: "Range"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1/Range/start"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1/Rank"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose_1/sub_1"
  op: "Sub"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1/sub"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/transpose_1"
  op: "Transpose"
  input: "Conv3DSN_4/conv3dsn_5/truediv_1"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/MatMul_3"
  op: "MatMul"
  input: "Conv3DSN_4/conv3dsn_5/MatMul_2"
  input: "Conv3DSN_4/conv3dsn_5/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/strided_slice"
  op: "StridedSlice"
  input: "Conv3DSN_4/conv3dsn_5/MatMul_3"
  input: "Conv3DSN_4/conv3dsn_5/strided_slice/stack"
  input: "Conv3DSN_4/conv3dsn_5/strided_slice/stack_1"
  input: "Conv3DSN_4/conv3dsn_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/truediv_2"
  op: "RealDiv"
  input: "Conv3DSN_4/conv3dsn_5/Reshape"
  input: "Conv3DSN_4/conv3dsn_5/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\006\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Reshape_1"
  op: "Reshape"
  input: "Conv3DSN_4/conv3dsn_5/truediv_2"
  input: "Conv3DSN_4/conv3dsn_5/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Assign"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/u_sn"
  input: "Conv3DSN_4/conv3dsn_5/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Assign_1"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/u_sn"
  input: "Conv3DSN_4/conv3dsn_5/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Reshape_2/shape"
  op: "Const"
  input: "^Conv3DSN_4/conv3dsn_5/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\006\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Reshape_2"
  op: "Reshape"
  input: "Conv3DSN_4/conv3dsn_5/Reshape_1"
  input: "Conv3DSN_4/conv3dsn_5/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/convolution"
  op: "Conv3D"
  input: "Conv3DSN_4/lambda_71/MirrorPad"
  input: "Conv3DSN_4/conv3dsn_5/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_4/conv3dsn_5/bias/read"
  input: "Conv3DSN_4/conv3dsn_5/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_4/conv3dsn_5/add"
  op: "Add"
  input: "Conv3DSN_4/conv3dsn_5/convolution"
  input: "Conv3DSN_4/conv3dsn_5/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_4/elu_22/Elu"
  op: "Elu"
  input: "Conv3DSN_4/conv3dsn_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/lambda_72/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/lambda_72/MirrorPad"
  op: "MirrorPad"
  input: "Conv3DSN_4/elu_22/Elu"
  input: "Conv3DSN_5/lambda_72/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_5/lambda_72/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "Conv3DSN_5/lambda_72/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/lambda_72/MirrorPad_1"
  op: "MirrorPad"
  input: "Conv3DSN_5/lambda_72/Placeholder"
  input: "Conv3DSN_5/lambda_72/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06315817683935165
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7213631
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal/mul"
  op: "Mul"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal/TruncatedNormal"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal"
  op: "Add"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal/mul"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 24
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/kernel/Assign"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/kernel"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/kernel/read"
  op: "Identity"
  input: "Conv3DSN_5/conv3dsn_6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/kernel"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/bias/Assign"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/bias"
  input: "Conv3DSN_5/conv3dsn_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/bias/read"
  op: "Identity"
  input: "Conv3DSN_5/conv3dsn_6/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/bias"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 170304
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/mul"
  op: "Mul"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/TruncatedNormal"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truncated_normal_1"
  op: "Add"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/mul"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/u_sn"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/u_sn/Assign"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/u_sn"
  input: "Conv3DSN_5/conv3dsn_6/truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/u_sn/read"
  op: "Identity"
  input: "Conv3DSN_5/conv3dsn_6/u_sn"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/u_sn"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Reshape"
  op: "Reshape"
  input: "Conv3DSN_5/conv3dsn_6/kernel/read"
  input: "Conv3DSN_5/conv3dsn_6/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 648
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 648
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Variable/Assign"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/Variable"
  input: "Conv3DSN_5/conv3dsn_6/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Variable/read"
  op: "Identity"
  input: "Conv3DSN_5/conv3dsn_6/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/Variable"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose/Rank"
  op: "Rank"
  input: "Conv3DSN_5/conv3dsn_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose/sub"
  op: "Sub"
  input: "Conv3DSN_5/conv3dsn_6/transpose/Rank"
  input: "Conv3DSN_5/conv3dsn_6/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose/Range"
  op: "Range"
  input: "Conv3DSN_5/conv3dsn_6/transpose/Range/start"
  input: "Conv3DSN_5/conv3dsn_6/transpose/Rank"
  input: "Conv3DSN_5/conv3dsn_6/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose/sub_1"
  op: "Sub"
  input: "Conv3DSN_5/conv3dsn_6/transpose/sub"
  input: "Conv3DSN_5/conv3dsn_6/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose"
  op: "Transpose"
  input: "Conv3DSN_5/conv3dsn_6/Reshape"
  input: "Conv3DSN_5/conv3dsn_6/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/MatMul"
  op: "MatMul"
  input: "Conv3DSN_5/conv3dsn_6/u_sn/read"
  input: "Conv3DSN_5/conv3dsn_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/pow"
  op: "Pow"
  input: "Conv3DSN_5/conv3dsn_6/MatMul"
  input: "Conv3DSN_5/conv3dsn_6/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Sum"
  op: "Sum"
  input: "Conv3DSN_5/conv3dsn_6/pow"
  input: "Conv3DSN_5/conv3dsn_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/pow_1"
  op: "Pow"
  input: "Conv3DSN_5/conv3dsn_6/Sum"
  input: "Conv3DSN_5/conv3dsn_6/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/clip_by_value/Minimum"
  op: "Minimum"
  input: "Conv3DSN_5/conv3dsn_6/pow_1"
  input: "Conv3DSN_5/conv3dsn_6/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/clip_by_value"
  op: "Maximum"
  input: "Conv3DSN_5/conv3dsn_6/clip_by_value/Minimum"
  input: "Conv3DSN_5/conv3dsn_6/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truediv"
  op: "RealDiv"
  input: "Conv3DSN_5/conv3dsn_6/MatMul"
  input: "Conv3DSN_5/conv3dsn_6/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/MatMul_1"
  op: "MatMul"
  input: "Conv3DSN_5/conv3dsn_6/truediv"
  input: "Conv3DSN_5/conv3dsn_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/pow_2"
  op: "Pow"
  input: "Conv3DSN_5/conv3dsn_6/MatMul_1"
  input: "Conv3DSN_5/conv3dsn_6/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Sum_1"
  op: "Sum"
  input: "Conv3DSN_5/conv3dsn_6/pow_2"
  input: "Conv3DSN_5/conv3dsn_6/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/pow_3"
  op: "Pow"
  input: "Conv3DSN_5/conv3dsn_6/Sum_1"
  input: "Conv3DSN_5/conv3dsn_6/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "Conv3DSN_5/conv3dsn_6/pow_3"
  input: "Conv3DSN_5/conv3dsn_6/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/clip_by_value_1"
  op: "Maximum"
  input: "Conv3DSN_5/conv3dsn_6/clip_by_value_1/Minimum"
  input: "Conv3DSN_5/conv3dsn_6/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truediv_1"
  op: "RealDiv"
  input: "Conv3DSN_5/conv3dsn_6/MatMul_1"
  input: "Conv3DSN_5/conv3dsn_6/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/MatMul_2"
  op: "MatMul"
  input: "Conv3DSN_5/conv3dsn_6/truediv"
  input: "Conv3DSN_5/conv3dsn_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose_1/Rank"
  op: "Rank"
  input: "Conv3DSN_5/conv3dsn_6/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose_1/sub"
  op: "Sub"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1/Rank"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose_1/Range"
  op: "Range"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1/Range/start"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1/Rank"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose_1/sub_1"
  op: "Sub"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1/sub"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/transpose_1"
  op: "Transpose"
  input: "Conv3DSN_5/conv3dsn_6/truediv_1"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/MatMul_3"
  op: "MatMul"
  input: "Conv3DSN_5/conv3dsn_6/MatMul_2"
  input: "Conv3DSN_5/conv3dsn_6/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/strided_slice"
  op: "StridedSlice"
  input: "Conv3DSN_5/conv3dsn_6/MatMul_3"
  input: "Conv3DSN_5/conv3dsn_6/strided_slice/stack"
  input: "Conv3DSN_5/conv3dsn_6/strided_slice/stack_1"
  input: "Conv3DSN_5/conv3dsn_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/truediv_2"
  op: "RealDiv"
  input: "Conv3DSN_5/conv3dsn_6/Reshape"
  input: "Conv3DSN_5/conv3dsn_6/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Reshape_1"
  op: "Reshape"
  input: "Conv3DSN_5/conv3dsn_6/truediv_2"
  input: "Conv3DSN_5/conv3dsn_6/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Assign"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/u_sn"
  input: "Conv3DSN_5/conv3dsn_6/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Assign_1"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/u_sn"
  input: "Conv3DSN_5/conv3dsn_6/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Reshape_2/shape"
  op: "Const"
  input: "^Conv3DSN_5/conv3dsn_6/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Reshape_2"
  op: "Reshape"
  input: "Conv3DSN_5/conv3dsn_6/Reshape_1"
  input: "Conv3DSN_5/conv3dsn_6/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/convolution"
  op: "Conv3D"
  input: "Conv3DSN_5/lambda_72/MirrorPad"
  input: "Conv3DSN_5/conv3dsn_6/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_5/conv3dsn_6/bias/read"
  input: "Conv3DSN_5/conv3dsn_6/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3DSN_5/conv3dsn_6/add"
  op: "Add"
  input: "Conv3DSN_5/conv3dsn_6/convolution"
  input: "Conv3DSN_5/conv3dsn_6/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3DSN_5/elu_23/Elu"
  op: "Elu"
  input: "Conv3DSN_5/conv3dsn_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1/add"
  op: "Add"
  input: "Conv3DSN_5/elu_23/Elu"
  input: "Conv3DSN_4/elu_22/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "average_pooling3d_3/AvgPool3D"
  op: "AvgPool3D"
  input: "add_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "flatten_2/Shape"
  op: "Shape"
  input: "average_pooling3d_3/AvgPool3D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_2/strided_slice"
  op: "StridedSlice"
  input: "flatten_2/Shape"
  input: "flatten_2/strided_slice/stack"
  input: "flatten_2/strided_slice/stack_1"
  input: "flatten_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_2/Prod"
  op: "Prod"
  input: "flatten_2/strided_slice"
  input: "flatten_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "flatten_2/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten_2/stack"
  op: "Pack"
  input: "flatten_2/stack/0"
  input: "flatten_2/Prod"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_2/Reshape"
  op: "Reshape"
  input: "average_pooling3d_3/AvgPool3D"
  input: "flatten_2/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\030\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.001953085302375257
      }
    }
  }
}
node {
  name: "dense_sn_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.001953085302375257
      }
    }
  }
}
node {
  name: "dense_sn_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_sn_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 616403
    }
  }
}
node {
  name: "dense_sn_1/random_uniform/sub"
  op: "Sub"
  input: "dense_sn_1/random_uniform/max"
  input: "dense_sn_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/random_uniform/mul"
  op: "Mul"
  input: "dense_sn_1/random_uniform/RandomUniform"
  input: "dense_sn_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/random_uniform"
  op: "Add"
  input: "dense_sn_1/random_uniform/mul"
  input: "dense_sn_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1572864
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_sn_1/kernel/Assign"
  op: "Assign"
  input: "dense_sn_1/kernel"
  input: "dense_sn_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_1/kernel/read"
  op: "Identity"
  input: "dense_sn_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/kernel"
      }
    }
  }
}
node {
  name: "dense_sn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_sn_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_sn_1/bias/Assign"
  op: "Assign"
  input: "dense_sn_1/bias"
  input: "dense_sn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_1/bias/read"
  op: "Identity"
  input: "dense_sn_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/bias"
      }
    }
  }
}
node {
  name: "dense_sn_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_sn_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_sn_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense_sn_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9672098
    }
  }
}
node {
  name: "dense_sn_1/truncated_normal/mul"
  op: "Mul"
  input: "dense_sn_1/truncated_normal/TruncatedNormal"
  input: "dense_sn_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/truncated_normal"
  op: "Add"
  input: "dense_sn_1/truncated_normal/mul"
  input: "dense_sn_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/u_sn"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_sn_1/u_sn/Assign"
  op: "Assign"
  input: "dense_sn_1/u_sn"
  input: "dense_sn_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_1/u_sn/read"
  op: "Identity"
  input: "dense_sn_1/u_sn"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/u_sn"
      }
    }
  }
}
node {
  name: "dense_sn_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/Reshape"
  op: "Reshape"
  input: "dense_sn_1/kernel/read"
  input: "dense_sn_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\030\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_sn_1/zeros"
  op: "Fill"
  input: "dense_sn_1/zeros/shape_as_tensor"
  input: "dense_sn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1572864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_sn_1/Variable/Assign"
  op: "Assign"
  input: "dense_sn_1/Variable"
  input: "dense_sn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_1/Variable/read"
  op: "Identity"
  input: "dense_sn_1/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/Variable"
      }
    }
  }
}
node {
  name: "dense_sn_1/transpose/Rank"
  op: "Rank"
  input: "dense_sn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense_sn_1/transpose/sub"
  op: "Sub"
  input: "dense_sn_1/transpose/Rank"
  input: "dense_sn_1/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_sn_1/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense_sn_1/transpose/Range"
  op: "Range"
  input: "dense_sn_1/transpose/Range/start"
  input: "dense_sn_1/transpose/Rank"
  input: "dense_sn_1/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/transpose/sub_1"
  op: "Sub"
  input: "dense_sn_1/transpose/sub"
  input: "dense_sn_1/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/transpose"
  op: "Transpose"
  input: "dense_sn_1/Reshape"
  input: "dense_sn_1/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/MatMul"
  op: "MatMul"
  input: "dense_sn_1/u_sn/read"
  input: "dense_sn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_1/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dense_sn_1/pow"
  op: "Pow"
  input: "dense_sn_1/MatMul"
  input: "dense_sn_1/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/Sum"
  op: "Sum"
  input: "dense_sn_1/pow"
  input: "dense_sn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_1/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dense_sn_1/pow_1"
  op: "Pow"
  input: "dense_sn_1/Sum"
  input: "dense_sn_1/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "dense_sn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "dense_sn_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "dense_sn_1/pow_1"
  input: "dense_sn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/clip_by_value"
  op: "Maximum"
  input: "dense_sn_1/clip_by_value/Minimum"
  input: "dense_sn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/truediv"
  op: "RealDiv"
  input: "dense_sn_1/MatMul"
  input: "dense_sn_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/MatMul_1"
  op: "MatMul"
  input: "dense_sn_1/truediv"
  input: "dense_sn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_1/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dense_sn_1/pow_2"
  op: "Pow"
  input: "dense_sn_1/MatMul_1"
  input: "dense_sn_1/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/Sum_1"
  op: "Sum"
  input: "dense_sn_1/pow_2"
  input: "dense_sn_1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_1/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dense_sn_1/pow_3"
  op: "Pow"
  input: "dense_sn_1/Sum_1"
  input: "dense_sn_1/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "dense_sn_1/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "dense_sn_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "dense_sn_1/pow_3"
  input: "dense_sn_1/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/clip_by_value_1"
  op: "Maximum"
  input: "dense_sn_1/clip_by_value_1/Minimum"
  input: "dense_sn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/truediv_1"
  op: "RealDiv"
  input: "dense_sn_1/MatMul_1"
  input: "dense_sn_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/MatMul_2"
  op: "MatMul"
  input: "dense_sn_1/truediv"
  input: "dense_sn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_1/transpose_1/Rank"
  op: "Rank"
  input: "dense_sn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense_sn_1/transpose_1/sub"
  op: "Sub"
  input: "dense_sn_1/transpose_1/Rank"
  input: "dense_sn_1/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_sn_1/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense_sn_1/transpose_1/Range"
  op: "Range"
  input: "dense_sn_1/transpose_1/Range/start"
  input: "dense_sn_1/transpose_1/Rank"
  input: "dense_sn_1/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/transpose_1/sub_1"
  op: "Sub"
  input: "dense_sn_1/transpose_1/sub"
  input: "dense_sn_1/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/transpose_1"
  op: "Transpose"
  input: "dense_sn_1/truediv_1"
  input: "dense_sn_1/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/MatMul_3"
  op: "MatMul"
  input: "dense_sn_1/MatMul_2"
  input: "dense_sn_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/strided_slice"
  op: "StridedSlice"
  input: "dense_sn_1/MatMul_3"
  input: "dense_sn_1/strided_slice/stack"
  input: "dense_sn_1/strided_slice/stack_1"
  input: "dense_sn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "dense_sn_1/truediv_2"
  op: "RealDiv"
  input: "dense_sn_1/Reshape"
  input: "dense_sn_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\030\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/Reshape_1"
  op: "Reshape"
  input: "dense_sn_1/truediv_2"
  input: "dense_sn_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/Assign"
  op: "Assign"
  input: "dense_sn_1/u_sn"
  input: "dense_sn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_1/Assign_1"
  op: "Assign"
  input: "dense_sn_1/u_sn"
  input: "dense_sn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_1/Reshape_2/shape"
  op: "Const"
  input: "^dense_sn_1/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\030\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_1/Reshape_2"
  op: "Reshape"
  input: "dense_sn_1/Reshape_1"
  input: "dense_sn_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_1/MatMul_4"
  op: "MatMul"
  input: "flatten_2/Reshape"
  input: "dense_sn_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_sn_1/MatMul_4"
  input: "dense_sn_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "elu_24/Elu"
  op: "Elu"
  input: "dense_sn_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3038218021392822
      }
    }
  }
}
node {
  name: "dense_sn_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3038218021392822
      }
    }
  }
}
node {
  name: "dense_sn_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_sn_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9455047
    }
  }
}
node {
  name: "dense_sn_2/random_uniform/sub"
  op: "Sub"
  input: "dense_sn_2/random_uniform/max"
  input: "dense_sn_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/random_uniform/mul"
  op: "Mul"
  input: "dense_sn_2/random_uniform/RandomUniform"
  input: "dense_sn_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/random_uniform"
  op: "Add"
  input: "dense_sn_2/random_uniform/mul"
  input: "dense_sn_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_sn_2/kernel/Assign"
  op: "Assign"
  input: "dense_sn_2/kernel"
  input: "dense_sn_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_2/kernel/read"
  op: "Identity"
  input: "dense_sn_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/kernel"
      }
    }
  }
}
node {
  name: "dense_sn_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_sn_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_sn_2/bias/Assign"
  op: "Assign"
  input: "dense_sn_2/bias"
  input: "dense_sn_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_2/bias/read"
  op: "Identity"
  input: "dense_sn_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/bias"
      }
    }
  }
}
node {
  name: "dense_sn_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_sn_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dense_sn_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "dense_sn_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2212124
    }
  }
}
node {
  name: "dense_sn_2/truncated_normal/mul"
  op: "Mul"
  input: "dense_sn_2/truncated_normal/TruncatedNormal"
  input: "dense_sn_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/truncated_normal"
  op: "Add"
  input: "dense_sn_2/truncated_normal/mul"
  input: "dense_sn_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/u_sn"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_sn_2/u_sn/Assign"
  op: "Assign"
  input: "dense_sn_2/u_sn"
  input: "dense_sn_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_2/u_sn/read"
  op: "Identity"
  input: "dense_sn_2/u_sn"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/u_sn"
      }
    }
  }
}
node {
  name: "dense_sn_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/Reshape"
  op: "Reshape"
  input: "dense_sn_2/kernel/read"
  input: "dense_sn_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_sn_2/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_sn_2/Variable/Assign"
  op: "Assign"
  input: "dense_sn_2/Variable"
  input: "dense_sn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_2/Variable/read"
  op: "Identity"
  input: "dense_sn_2/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/Variable"
      }
    }
  }
}
node {
  name: "dense_sn_2/transpose/Rank"
  op: "Rank"
  input: "dense_sn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense_sn_2/transpose/sub"
  op: "Sub"
  input: "dense_sn_2/transpose/Rank"
  input: "dense_sn_2/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_sn_2/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense_sn_2/transpose/Range"
  op: "Range"
  input: "dense_sn_2/transpose/Range/start"
  input: "dense_sn_2/transpose/Rank"
  input: "dense_sn_2/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/transpose/sub_1"
  op: "Sub"
  input: "dense_sn_2/transpose/sub"
  input: "dense_sn_2/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/transpose"
  op: "Transpose"
  input: "dense_sn_2/Reshape"
  input: "dense_sn_2/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/MatMul"
  op: "MatMul"
  input: "dense_sn_2/u_sn/read"
  input: "dense_sn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_2/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dense_sn_2/pow"
  op: "Pow"
  input: "dense_sn_2/MatMul"
  input: "dense_sn_2/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/Sum"
  op: "Sum"
  input: "dense_sn_2/pow"
  input: "dense_sn_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_2/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dense_sn_2/pow_1"
  op: "Pow"
  input: "dense_sn_2/Sum"
  input: "dense_sn_2/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "dense_sn_2/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "dense_sn_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "dense_sn_2/pow_1"
  input: "dense_sn_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/clip_by_value"
  op: "Maximum"
  input: "dense_sn_2/clip_by_value/Minimum"
  input: "dense_sn_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/truediv"
  op: "RealDiv"
  input: "dense_sn_2/MatMul"
  input: "dense_sn_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/MatMul_1"
  op: "MatMul"
  input: "dense_sn_2/truediv"
  input: "dense_sn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_2/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dense_sn_2/pow_2"
  op: "Pow"
  input: "dense_sn_2/MatMul_1"
  input: "dense_sn_2/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/Sum_1"
  op: "Sum"
  input: "dense_sn_2/pow_2"
  input: "dense_sn_2/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_2/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dense_sn_2/pow_3"
  op: "Pow"
  input: "dense_sn_2/Sum_1"
  input: "dense_sn_2/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "dense_sn_2/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "dense_sn_2/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "dense_sn_2/pow_3"
  input: "dense_sn_2/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/clip_by_value_1"
  op: "Maximum"
  input: "dense_sn_2/clip_by_value_1/Minimum"
  input: "dense_sn_2/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/truediv_1"
  op: "RealDiv"
  input: "dense_sn_2/MatMul_1"
  input: "dense_sn_2/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/MatMul_2"
  op: "MatMul"
  input: "dense_sn_2/truediv"
  input: "dense_sn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_2/transpose_1/Rank"
  op: "Rank"
  input: "dense_sn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense_sn_2/transpose_1/sub"
  op: "Sub"
  input: "dense_sn_2/transpose_1/Rank"
  input: "dense_sn_2/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense_sn_2/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense_sn_2/transpose_1/Range"
  op: "Range"
  input: "dense_sn_2/transpose_1/Range/start"
  input: "dense_sn_2/transpose_1/Rank"
  input: "dense_sn_2/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/transpose_1/sub_1"
  op: "Sub"
  input: "dense_sn_2/transpose_1/sub"
  input: "dense_sn_2/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/transpose_1"
  op: "Transpose"
  input: "dense_sn_2/truediv_1"
  input: "dense_sn_2/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/MatMul_3"
  op: "MatMul"
  input: "dense_sn_2/MatMul_2"
  input: "dense_sn_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/strided_slice"
  op: "StridedSlice"
  input: "dense_sn_2/MatMul_3"
  input: "dense_sn_2/strided_slice/stack"
  input: "dense_sn_2/strided_slice/stack_1"
  input: "dense_sn_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "dense_sn_2/truediv_2"
  op: "RealDiv"
  input: "dense_sn_2/Reshape"
  input: "dense_sn_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_sn_2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/Reshape_1"
  op: "Reshape"
  input: "dense_sn_2/truediv_2"
  input: "dense_sn_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/Assign"
  op: "Assign"
  input: "dense_sn_2/u_sn"
  input: "dense_sn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_2/Assign_1"
  op: "Assign"
  input: "dense_sn_2/u_sn"
  input: "dense_sn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_sn_2/Reshape_2/shape"
  op: "Const"
  input: "^dense_sn_2/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_sn_2/Reshape_2"
  op: "Reshape"
  input: "dense_sn_2/Reshape_1"
  input: "dense_sn_2/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_sn_2/MatMul_4"
  op: "MatMul"
  input: "elu_24/Elu"
  input: "dense_sn_2/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_sn_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_sn_2/MatMul_4"
  input: "dense_sn_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "concatenate_7/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concatenate_7/concat"
  op: "ConcatV2"
  input: "flatten_1/Reshape"
  input: "dense_sn_2/BiasAdd"
  input: "concatenate_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGG_128/input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09975093603134155
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09975093603134155
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block1_conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8323094
    }
  }
}
node {
  name: "VGG_128/block1_conv1/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block1_conv1/random_uniform/max"
  input: "VGG_128/block1_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block1_conv1/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block1_conv1/random_uniform/RandomUniform"
  input: "VGG_128/block1_conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block1_conv1/random_uniform"
  op: "Add"
  input: "VGG_128/block1_conv1/random_uniform/mul"
  input: "VGG_128/block1_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block1_conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block1_conv1/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block1_conv1/kernel"
  input: "VGG_128/block1_conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block1_conv1/kernel/read"
  op: "Identity"
  input: "VGG_128/block1_conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block1_conv1/bias/Assign"
  op: "Assign"
  input: "VGG_128/block1_conv1/bias"
  input: "VGG_128/block1_conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block1_conv1/bias/read"
  op: "Identity"
  input: "VGG_128/block1_conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv1/convolution"
  op: "Conv2D"
  input: "VGG_128/input_2"
  input: "VGG_128/block1_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block1_conv1/convolution"
  input: "VGG_128/block1_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block1_conv1/Relu"
  op: "Relu"
  input: "VGG_128/block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block1_conv2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block1_conv2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 688667
    }
  }
}
node {
  name: "VGG_128/block1_conv2/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block1_conv2/random_uniform/max"
  input: "VGG_128/block1_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block1_conv2/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block1_conv2/random_uniform/RandomUniform"
  input: "VGG_128/block1_conv2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block1_conv2/random_uniform"
  op: "Add"
  input: "VGG_128/block1_conv2/random_uniform/mul"
  input: "VGG_128/block1_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block1_conv2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block1_conv2/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block1_conv2/kernel"
  input: "VGG_128/block1_conv2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block1_conv2/kernel/read"
  op: "Identity"
  input: "VGG_128/block1_conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block1_conv2/bias/Assign"
  op: "Assign"
  input: "VGG_128/block1_conv2/bias"
  input: "VGG_128/block1_conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block1_conv2/bias/read"
  op: "Identity"
  input: "VGG_128/block1_conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block1_conv2/convolution"
  op: "Conv2D"
  input: "VGG_128/block1_conv1/Relu"
  input: "VGG_128/block1_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block1_conv2/convolution"
  input: "VGG_128/block1_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block1_conv2/Relu"
  op: "Relu"
  input: "VGG_128/block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block1_pool/MaxPool"
  op: "MaxPool"
  input: "VGG_128/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block2_conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4030996
    }
  }
}
node {
  name: "VGG_128/block2_conv1/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block2_conv1/random_uniform/max"
  input: "VGG_128/block2_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block2_conv1/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block2_conv1/random_uniform/RandomUniform"
  input: "VGG_128/block2_conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block2_conv1/random_uniform"
  op: "Add"
  input: "VGG_128/block2_conv1/random_uniform/mul"
  input: "VGG_128/block2_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block2_conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block2_conv1/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block2_conv1/kernel"
  input: "VGG_128/block2_conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block2_conv1/kernel/read"
  op: "Identity"
  input: "VGG_128/block2_conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block2_conv1/bias/Assign"
  op: "Assign"
  input: "VGG_128/block2_conv1/bias"
  input: "VGG_128/block2_conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block2_conv1/bias/read"
  op: "Identity"
  input: "VGG_128/block2_conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv1/convolution"
  op: "Conv2D"
  input: "VGG_128/block1_pool/MaxPool"
  input: "VGG_128/block2_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block2_conv1/convolution"
  input: "VGG_128/block2_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block2_conv1/Relu"
  op: "Relu"
  input: "VGG_128/block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block2_conv2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block2_conv2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 394612
    }
  }
}
node {
  name: "VGG_128/block2_conv2/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block2_conv2/random_uniform/max"
  input: "VGG_128/block2_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block2_conv2/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block2_conv2/random_uniform/RandomUniform"
  input: "VGG_128/block2_conv2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block2_conv2/random_uniform"
  op: "Add"
  input: "VGG_128/block2_conv2/random_uniform/mul"
  input: "VGG_128/block2_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block2_conv2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block2_conv2/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block2_conv2/kernel"
  input: "VGG_128/block2_conv2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block2_conv2/kernel/read"
  op: "Identity"
  input: "VGG_128/block2_conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block2_conv2/bias/Assign"
  op: "Assign"
  input: "VGG_128/block2_conv2/bias"
  input: "VGG_128/block2_conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block2_conv2/bias/read"
  op: "Identity"
  input: "VGG_128/block2_conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block2_conv2/convolution"
  op: "Conv2D"
  input: "VGG_128/block2_conv1/Relu"
  input: "VGG_128/block2_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block2_conv2/convolution"
  input: "VGG_128/block2_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block2_conv2/Relu"
  op: "Relu"
  input: "VGG_128/block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block2_pool/MaxPool"
  op: "MaxPool"
  input: "VGG_128/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block3_conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2493561
    }
  }
}
node {
  name: "VGG_128/block3_conv1/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block3_conv1/random_uniform/max"
  input: "VGG_128/block3_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv1/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block3_conv1/random_uniform/RandomUniform"
  input: "VGG_128/block3_conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv1/random_uniform"
  op: "Add"
  input: "VGG_128/block3_conv1/random_uniform/mul"
  input: "VGG_128/block3_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block3_conv1/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block3_conv1/kernel"
  input: "VGG_128/block3_conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv1/kernel/read"
  op: "Identity"
  input: "VGG_128/block3_conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block3_conv1/bias/Assign"
  op: "Assign"
  input: "VGG_128/block3_conv1/bias"
  input: "VGG_128/block3_conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv1/bias/read"
  op: "Identity"
  input: "VGG_128/block3_conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv1/convolution"
  op: "Conv2D"
  input: "VGG_128/block2_pool/MaxPool"
  input: "VGG_128/block3_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block3_conv1/convolution"
  input: "VGG_128/block3_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block3_conv1/Relu"
  op: "Relu"
  input: "VGG_128/block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block3_conv2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 331065
    }
  }
}
node {
  name: "VGG_128/block3_conv2/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block3_conv2/random_uniform/max"
  input: "VGG_128/block3_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv2/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block3_conv2/random_uniform/RandomUniform"
  input: "VGG_128/block3_conv2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv2/random_uniform"
  op: "Add"
  input: "VGG_128/block3_conv2/random_uniform/mul"
  input: "VGG_128/block3_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block3_conv2/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block3_conv2/kernel"
  input: "VGG_128/block3_conv2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv2/kernel/read"
  op: "Identity"
  input: "VGG_128/block3_conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block3_conv2/bias/Assign"
  op: "Assign"
  input: "VGG_128/block3_conv2/bias"
  input: "VGG_128/block3_conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv2/bias/read"
  op: "Identity"
  input: "VGG_128/block3_conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv2/convolution"
  op: "Conv2D"
  input: "VGG_128/block3_conv1/Relu"
  input: "VGG_128/block3_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block3_conv2/convolution"
  input: "VGG_128/block3_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block3_conv2/Relu"
  op: "Relu"
  input: "VGG_128/block3_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block3_conv3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6479769
    }
  }
}
node {
  name: "VGG_128/block3_conv3/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block3_conv3/random_uniform/max"
  input: "VGG_128/block3_conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv3/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block3_conv3/random_uniform/RandomUniform"
  input: "VGG_128/block3_conv3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv3/random_uniform"
  op: "Add"
  input: "VGG_128/block3_conv3/random_uniform/mul"
  input: "VGG_128/block3_conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block3_conv3/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block3_conv3/kernel"
  input: "VGG_128/block3_conv3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv3/kernel/read"
  op: "Identity"
  input: "VGG_128/block3_conv3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block3_conv3/bias/Assign"
  op: "Assign"
  input: "VGG_128/block3_conv3/bias"
  input: "VGG_128/block3_conv3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv3/bias/read"
  op: "Identity"
  input: "VGG_128/block3_conv3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv3/convolution"
  op: "Conv2D"
  input: "VGG_128/block3_conv2/Relu"
  input: "VGG_128/block3_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv3/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block3_conv3/convolution"
  input: "VGG_128/block3_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block3_conv3/Relu"
  op: "Relu"
  input: "VGG_128/block3_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block3_conv4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7310901
    }
  }
}
node {
  name: "VGG_128/block3_conv4/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block3_conv4/random_uniform/max"
  input: "VGG_128/block3_conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv4/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block3_conv4/random_uniform/RandomUniform"
  input: "VGG_128/block3_conv4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv4/random_uniform"
  op: "Add"
  input: "VGG_128/block3_conv4/random_uniform/mul"
  input: "VGG_128/block3_conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_conv4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block3_conv4/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block3_conv4/kernel"
  input: "VGG_128/block3_conv4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv4/kernel/read"
  op: "Identity"
  input: "VGG_128/block3_conv4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block3_conv4/bias/Assign"
  op: "Assign"
  input: "VGG_128/block3_conv4/bias"
  input: "VGG_128/block3_conv4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv4/bias/read"
  op: "Identity"
  input: "VGG_128/block3_conv4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block3_conv4/convolution"
  op: "Conv2D"
  input: "VGG_128/block3_conv3/Relu"
  input: "VGG_128/block3_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block3_conv4/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block3_conv4/convolution"
  input: "VGG_128/block3_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block3_conv4/Relu"
  op: "Relu"
  input: "VGG_128/block3_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block3_pool/MaxPool"
  op: "MaxPool"
  input: "VGG_128/block3_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block4_conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 58754
    }
  }
}
node {
  name: "VGG_128/block4_conv1/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block4_conv1/random_uniform/max"
  input: "VGG_128/block4_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv1/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block4_conv1/random_uniform/RandomUniform"
  input: "VGG_128/block4_conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv1/random_uniform"
  op: "Add"
  input: "VGG_128/block4_conv1/random_uniform/mul"
  input: "VGG_128/block4_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block4_conv1/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block4_conv1/kernel"
  input: "VGG_128/block4_conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv1/kernel/read"
  op: "Identity"
  input: "VGG_128/block4_conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block4_conv1/bias/Assign"
  op: "Assign"
  input: "VGG_128/block4_conv1/bias"
  input: "VGG_128/block4_conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv1/bias/read"
  op: "Identity"
  input: "VGG_128/block4_conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv1/convolution"
  op: "Conv2D"
  input: "VGG_128/block3_pool/MaxPool"
  input: "VGG_128/block4_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block4_conv1/convolution"
  input: "VGG_128/block4_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block4_conv1/Relu"
  op: "Relu"
  input: "VGG_128/block4_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block4_conv2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6915969
    }
  }
}
node {
  name: "VGG_128/block4_conv2/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block4_conv2/random_uniform/max"
  input: "VGG_128/block4_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv2/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block4_conv2/random_uniform/RandomUniform"
  input: "VGG_128/block4_conv2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv2/random_uniform"
  op: "Add"
  input: "VGG_128/block4_conv2/random_uniform/mul"
  input: "VGG_128/block4_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block4_conv2/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block4_conv2/kernel"
  input: "VGG_128/block4_conv2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv2/kernel/read"
  op: "Identity"
  input: "VGG_128/block4_conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block4_conv2/bias/Assign"
  op: "Assign"
  input: "VGG_128/block4_conv2/bias"
  input: "VGG_128/block4_conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv2/bias/read"
  op: "Identity"
  input: "VGG_128/block4_conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv2/convolution"
  op: "Conv2D"
  input: "VGG_128/block4_conv1/Relu"
  input: "VGG_128/block4_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block4_conv2/convolution"
  input: "VGG_128/block4_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block4_conv2/Relu"
  op: "Relu"
  input: "VGG_128/block4_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block4_conv3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3794769
    }
  }
}
node {
  name: "VGG_128/block4_conv3/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block4_conv3/random_uniform/max"
  input: "VGG_128/block4_conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv3/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block4_conv3/random_uniform/RandomUniform"
  input: "VGG_128/block4_conv3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv3/random_uniform"
  op: "Add"
  input: "VGG_128/block4_conv3/random_uniform/mul"
  input: "VGG_128/block4_conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block4_conv3/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block4_conv3/kernel"
  input: "VGG_128/block4_conv3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv3/kernel/read"
  op: "Identity"
  input: "VGG_128/block4_conv3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block4_conv3/bias/Assign"
  op: "Assign"
  input: "VGG_128/block4_conv3/bias"
  input: "VGG_128/block4_conv3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv3/bias/read"
  op: "Identity"
  input: "VGG_128/block4_conv3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv3/convolution"
  op: "Conv2D"
  input: "VGG_128/block4_conv2/Relu"
  input: "VGG_128/block4_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv3/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block4_conv3/convolution"
  input: "VGG_128/block4_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block4_conv3/Relu"
  op: "Relu"
  input: "VGG_128/block4_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block4_conv4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5937020
    }
  }
}
node {
  name: "VGG_128/block4_conv4/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block4_conv4/random_uniform/max"
  input: "VGG_128/block4_conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv4/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block4_conv4/random_uniform/RandomUniform"
  input: "VGG_128/block4_conv4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv4/random_uniform"
  op: "Add"
  input: "VGG_128/block4_conv4/random_uniform/mul"
  input: "VGG_128/block4_conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_conv4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block4_conv4/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block4_conv4/kernel"
  input: "VGG_128/block4_conv4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv4/kernel/read"
  op: "Identity"
  input: "VGG_128/block4_conv4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block4_conv4/bias/Assign"
  op: "Assign"
  input: "VGG_128/block4_conv4/bias"
  input: "VGG_128/block4_conv4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv4/bias/read"
  op: "Identity"
  input: "VGG_128/block4_conv4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block4_conv4/convolution"
  op: "Conv2D"
  input: "VGG_128/block4_conv3/Relu"
  input: "VGG_128/block4_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block4_conv4/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block4_conv4/convolution"
  input: "VGG_128/block4_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block4_conv4/Relu"
  op: "Relu"
  input: "VGG_128/block4_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block4_pool/MaxPool"
  op: "MaxPool"
  input: "VGG_128/block4_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block5_conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1055851
    }
  }
}
node {
  name: "VGG_128/block5_conv1/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block5_conv1/random_uniform/max"
  input: "VGG_128/block5_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv1/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block5_conv1/random_uniform/RandomUniform"
  input: "VGG_128/block5_conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv1/random_uniform"
  op: "Add"
  input: "VGG_128/block5_conv1/random_uniform/mul"
  input: "VGG_128/block5_conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block5_conv1/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block5_conv1/kernel"
  input: "VGG_128/block5_conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv1/kernel/read"
  op: "Identity"
  input: "VGG_128/block5_conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block5_conv1/bias/Assign"
  op: "Assign"
  input: "VGG_128/block5_conv1/bias"
  input: "VGG_128/block5_conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv1/bias/read"
  op: "Identity"
  input: "VGG_128/block5_conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv1/convolution"
  op: "Conv2D"
  input: "VGG_128/block4_pool/MaxPool"
  input: "VGG_128/block5_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block5_conv1/convolution"
  input: "VGG_128/block5_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block5_conv1/Relu"
  op: "Relu"
  input: "VGG_128/block5_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block5_conv2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7324986
    }
  }
}
node {
  name: "VGG_128/block5_conv2/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block5_conv2/random_uniform/max"
  input: "VGG_128/block5_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv2/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block5_conv2/random_uniform/RandomUniform"
  input: "VGG_128/block5_conv2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv2/random_uniform"
  op: "Add"
  input: "VGG_128/block5_conv2/random_uniform/mul"
  input: "VGG_128/block5_conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block5_conv2/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block5_conv2/kernel"
  input: "VGG_128/block5_conv2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv2/kernel/read"
  op: "Identity"
  input: "VGG_128/block5_conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block5_conv2/bias/Assign"
  op: "Assign"
  input: "VGG_128/block5_conv2/bias"
  input: "VGG_128/block5_conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv2/bias/read"
  op: "Identity"
  input: "VGG_128/block5_conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv2/convolution"
  op: "Conv2D"
  input: "VGG_128/block5_conv1/Relu"
  input: "VGG_128/block5_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block5_conv2/convolution"
  input: "VGG_128/block5_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block5_conv2/Relu"
  op: "Relu"
  input: "VGG_128/block5_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block5_conv3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8485268
    }
  }
}
node {
  name: "VGG_128/block5_conv3/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block5_conv3/random_uniform/max"
  input: "VGG_128/block5_conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv3/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block5_conv3/random_uniform/RandomUniform"
  input: "VGG_128/block5_conv3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv3/random_uniform"
  op: "Add"
  input: "VGG_128/block5_conv3/random_uniform/mul"
  input: "VGG_128/block5_conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block5_conv3/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block5_conv3/kernel"
  input: "VGG_128/block5_conv3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv3/kernel/read"
  op: "Identity"
  input: "VGG_128/block5_conv3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block5_conv3/bias/Assign"
  op: "Assign"
  input: "VGG_128/block5_conv3/bias"
  input: "VGG_128/block5_conv3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv3/bias/read"
  op: "Identity"
  input: "VGG_128/block5_conv3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv3/convolution"
  op: "Conv2D"
  input: "VGG_128/block5_conv2/Relu"
  input: "VGG_128/block5_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv3/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block5_conv3/convolution"
  input: "VGG_128/block5_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block5_conv3/Relu"
  op: "Relu"
  input: "VGG_128/block5_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "VGG_128/block5_conv4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8478959
    }
  }
}
node {
  name: "VGG_128/block5_conv4/random_uniform/sub"
  op: "Sub"
  input: "VGG_128/block5_conv4/random_uniform/max"
  input: "VGG_128/block5_conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv4/random_uniform/mul"
  op: "Mul"
  input: "VGG_128/block5_conv4/random_uniform/RandomUniform"
  input: "VGG_128/block5_conv4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv4/random_uniform"
  op: "Add"
  input: "VGG_128/block5_conv4/random_uniform/mul"
  input: "VGG_128/block5_conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_conv4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block5_conv4/kernel/Assign"
  op: "Assign"
  input: "VGG_128/block5_conv4/kernel"
  input: "VGG_128/block5_conv4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv4/kernel/read"
  op: "Identity"
  input: "VGG_128/block5_conv4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/kernel"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "VGG_128/block5_conv4/bias/Assign"
  op: "Assign"
  input: "VGG_128/block5_conv4/bias"
  input: "VGG_128/block5_conv4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv4/bias/read"
  op: "Identity"
  input: "VGG_128/block5_conv4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/bias"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "VGG_128/block5_conv4/convolution"
  op: "Conv2D"
  input: "VGG_128/block5_conv3/Relu"
  input: "VGG_128/block5_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/block5_conv4/BiasAdd"
  op: "BiasAdd"
  input: "VGG_128/block5_conv4/convolution"
  input: "VGG_128/block5_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGG_128/block5_conv4/Relu"
  op: "Relu"
  input: "VGG_128/block5_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/block5_pool/MaxPool"
  op: "MaxPool"
  input: "VGG_128/block5_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGG_128/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign"
  op: "Assign"
  input: "VGG_128/block1_conv1/kernel"
  input: "VGG_128/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_1"
  op: "Assign"
  input: "VGG_128/block1_conv1/bias"
  input: "VGG_128/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_2"
  op: "Assign"
  input: "VGG_128/block1_conv2/kernel"
  input: "VGG_128/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_3"
  op: "Assign"
  input: "VGG_128/block1_conv2/bias"
  input: "VGG_128/Placeholder_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_4"
  op: "Assign"
  input: "VGG_128/block2_conv1/kernel"
  input: "VGG_128/Placeholder_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_5"
  op: "Assign"
  input: "VGG_128/block2_conv1/bias"
  input: "VGG_128/Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_6"
  op: "Assign"
  input: "VGG_128/block2_conv2/kernel"
  input: "VGG_128/Placeholder_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_7"
  op: "Assign"
  input: "VGG_128/block2_conv2/bias"
  input: "VGG_128/Placeholder_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_8"
  op: "Assign"
  input: "VGG_128/block3_conv1/kernel"
  input: "VGG_128/Placeholder_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_9"
  op: "Assign"
  input: "VGG_128/block3_conv1/bias"
  input: "VGG_128/Placeholder_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_10"
  op: "Assign"
  input: "VGG_128/block3_conv2/kernel"
  input: "VGG_128/Placeholder_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_11"
  op: "Assign"
  input: "VGG_128/block3_conv2/bias"
  input: "VGG_128/Placeholder_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_12"
  op: "Assign"
  input: "VGG_128/block3_conv3/kernel"
  input: "VGG_128/Placeholder_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_13"
  op: "Assign"
  input: "VGG_128/block3_conv3/bias"
  input: "VGG_128/Placeholder_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_14"
  op: "Assign"
  input: "VGG_128/block3_conv4/kernel"
  input: "VGG_128/Placeholder_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_15"
  op: "Assign"
  input: "VGG_128/block3_conv4/bias"
  input: "VGG_128/Placeholder_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_16"
  op: "Assign"
  input: "VGG_128/block4_conv1/kernel"
  input: "VGG_128/Placeholder_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_17"
  op: "Assign"
  input: "VGG_128/block4_conv1/bias"
  input: "VGG_128/Placeholder_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_18"
  op: "Assign"
  input: "VGG_128/block4_conv2/kernel"
  input: "VGG_128/Placeholder_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_19"
  op: "Assign"
  input: "VGG_128/block4_conv2/bias"
  input: "VGG_128/Placeholder_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_20"
  op: "Assign"
  input: "VGG_128/block4_conv3/kernel"
  input: "VGG_128/Placeholder_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_21"
  op: "Assign"
  input: "VGG_128/block4_conv3/bias"
  input: "VGG_128/Placeholder_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_22"
  op: "Assign"
  input: "VGG_128/block4_conv4/kernel"
  input: "VGG_128/Placeholder_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_23"
  op: "Assign"
  input: "VGG_128/block4_conv4/bias"
  input: "VGG_128/Placeholder_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_24"
  op: "Assign"
  input: "VGG_128/block5_conv1/kernel"
  input: "VGG_128/Placeholder_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_25"
  op: "Assign"
  input: "VGG_128/block5_conv1/bias"
  input: "VGG_128/Placeholder_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_26"
  op: "Assign"
  input: "VGG_128/block5_conv2/kernel"
  input: "VGG_128/Placeholder_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_27"
  op: "Assign"
  input: "VGG_128/block5_conv2/bias"
  input: "VGG_128/Placeholder_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_28"
  op: "Assign"
  input: "VGG_128/block5_conv3/kernel"
  input: "VGG_128/Placeholder_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_29"
  op: "Assign"
  input: "VGG_128/block5_conv3/bias"
  input: "VGG_128/Placeholder_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_30"
  op: "Assign"
  input: "VGG_128/block5_conv4/kernel"
  input: "VGG_128/Placeholder_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "VGG_128/Assign_31"
  op: "Assign"
  input: "VGG_128/block5_conv4/bias"
  input: "VGG_128/Placeholder_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "alpha"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@alpha"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_128to64/conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_128to64/conv2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_128to64/conv2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_128to64/conv2d_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_64to32/conv2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_64to32/conv2d_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_64to32/conv2d_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_64to32/conv2d_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_32to16/conv2d_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_32to16/conv2d_5/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_32to16/conv2d_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_32to16/conv2d_6/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_16to8/conv2d_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_16to8/conv2d_7/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_16to8/conv2d_8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_16to8/conv2d_8/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_8to4/conv2d_9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_8to4/conv2d_9/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_8to4/conv2d_10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "gModel_0/gLEnc_8to4/conv2d_10/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "gModel_0/gLBott_4/conv2d_11/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "gModel_0/gLBott_4/conv2d_11/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "gModel_0/gLBott_4/conv2d_12/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "gModel_0/gLBott_4/conv2d_12/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_4to8/conv2d_13/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_4to8/conv2d_13/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_8to16/conv2d_14/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_8to16/conv2d_14/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_16to32/conv2d_15/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_16to32/conv2d_15/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_32to64/conv2d_16/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_32to64/conv2d_16/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "gModel_0/toRGB_L_64/conv2d_17/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_64/conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "gModel_0/toRGB_L_64/conv2d_17/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_64/conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_64to128/conv2d_18/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_64to128/conv2d_18/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/conv2d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "gModel_0/toRGB_L_128/conv2d_19/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_128/conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "gModel_0/toRGB_L_128/conv2d_19/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_128/conv2d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "Conv3DSN/conv3dsn_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "Conv3DSN/conv3dsn_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "Conv3DSN/conv3dsn_1/u_sn"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/u_sn"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "Conv3DSN/conv3dsn_1/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "Conv3DSN_1/conv3dsn_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "Conv3DSN_1/conv3dsn_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "Conv3DSN_1/conv3dsn_2/u_sn"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/u_sn"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "Conv3DSN_1/conv3dsn_2/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "Conv3DSN_2/conv3dsn_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "Conv3DSN_2/conv3dsn_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "Conv3DSN_2/conv3dsn_3/u_sn"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/u_sn"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "Conv3DSN_2/conv3dsn_3/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "Conv3DSN_3/conv3dsn_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "Conv3DSN_3/conv3dsn_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "Conv3DSN_3/conv3dsn_4/u_sn"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/u_sn"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "Conv3DSN_3/conv3dsn_4/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "Conv3DSN_4/conv3dsn_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "Conv3DSN_4/conv3dsn_5/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "Conv3DSN_4/conv3dsn_5/u_sn"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/u_sn"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "Conv3DSN_4/conv3dsn_5/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "Conv3DSN_5/conv3dsn_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "Conv3DSN_5/conv3dsn_6/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "Conv3DSN_5/conv3dsn_6/u_sn"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/u_sn"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "Conv3DSN_5/conv3dsn_6/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "dense_sn_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "dense_sn_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "dense_sn_1/u_sn"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/u_sn"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "dense_sn_1/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "dense_sn_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "dense_sn_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "dense_sn_2/u_sn"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/u_sn"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "dense_sn_2/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "VGG_128/block1_conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "VGG_128/block1_conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "VGG_128/block1_conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "VGG_128/block1_conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "VGG_128/block2_conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "VGG_128/block2_conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "VGG_128/block2_conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "VGG_128/block2_conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "VGG_128/block3_conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "VGG_128/block3_conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "VGG_128/block3_conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "VGG_128/block3_conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "VGG_128/block3_conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "VGG_128/block3_conv3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "VGG_128/block3_conv4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "VGG_128/block3_conv4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "VGG_128/block4_conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "VGG_128/block4_conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "VGG_128/block4_conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "VGG_128/block4_conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "VGG_128/block4_conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "VGG_128/block4_conv3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "VGG_128/block4_conv4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "VGG_128/block4_conv4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "VGG_128/block5_conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "VGG_128/block5_conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "VGG_128/block5_conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "VGG_128/block5_conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "VGG_128/block5_conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "VGG_128/block5_conv3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "VGG_128/block5_conv4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "VGG_128/block5_conv4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGG_128/init"
  op: "NoOp"
  input: "^Conv3DSN/conv3dsn_1/Variable/Assign"
  input: "^Conv3DSN/conv3dsn_1/bias/Assign"
  input: "^Conv3DSN/conv3dsn_1/kernel/Assign"
  input: "^Conv3DSN/conv3dsn_1/u_sn/Assign"
  input: "^Conv3DSN_1/conv3dsn_2/Variable/Assign"
  input: "^Conv3DSN_1/conv3dsn_2/bias/Assign"
  input: "^Conv3DSN_1/conv3dsn_2/kernel/Assign"
  input: "^Conv3DSN_1/conv3dsn_2/u_sn/Assign"
  input: "^Conv3DSN_2/conv3dsn_3/Variable/Assign"
  input: "^Conv3DSN_2/conv3dsn_3/bias/Assign"
  input: "^Conv3DSN_2/conv3dsn_3/kernel/Assign"
  input: "^Conv3DSN_2/conv3dsn_3/u_sn/Assign"
  input: "^Conv3DSN_3/conv3dsn_4/Variable/Assign"
  input: "^Conv3DSN_3/conv3dsn_4/bias/Assign"
  input: "^Conv3DSN_3/conv3dsn_4/kernel/Assign"
  input: "^Conv3DSN_3/conv3dsn_4/u_sn/Assign"
  input: "^Conv3DSN_4/conv3dsn_5/Variable/Assign"
  input: "^Conv3DSN_4/conv3dsn_5/bias/Assign"
  input: "^Conv3DSN_4/conv3dsn_5/kernel/Assign"
  input: "^Conv3DSN_4/conv3dsn_5/u_sn/Assign"
  input: "^Conv3DSN_5/conv3dsn_6/Variable/Assign"
  input: "^Conv3DSN_5/conv3dsn_6/bias/Assign"
  input: "^Conv3DSN_5/conv3dsn_6/kernel/Assign"
  input: "^Conv3DSN_5/conv3dsn_6/u_sn/Assign"
  input: "^VGG_128/block1_conv1/bias/Assign"
  input: "^VGG_128/block1_conv1/kernel/Assign"
  input: "^VGG_128/block1_conv2/bias/Assign"
  input: "^VGG_128/block1_conv2/kernel/Assign"
  input: "^VGG_128/block2_conv1/bias/Assign"
  input: "^VGG_128/block2_conv1/kernel/Assign"
  input: "^VGG_128/block2_conv2/bias/Assign"
  input: "^VGG_128/block2_conv2/kernel/Assign"
  input: "^VGG_128/block3_conv1/bias/Assign"
  input: "^VGG_128/block3_conv1/kernel/Assign"
  input: "^VGG_128/block3_conv2/bias/Assign"
  input: "^VGG_128/block3_conv2/kernel/Assign"
  input: "^VGG_128/block3_conv3/bias/Assign"
  input: "^VGG_128/block3_conv3/kernel/Assign"
  input: "^VGG_128/block3_conv4/bias/Assign"
  input: "^VGG_128/block3_conv4/kernel/Assign"
  input: "^VGG_128/block4_conv1/bias/Assign"
  input: "^VGG_128/block4_conv1/kernel/Assign"
  input: "^VGG_128/block4_conv2/bias/Assign"
  input: "^VGG_128/block4_conv2/kernel/Assign"
  input: "^VGG_128/block4_conv3/bias/Assign"
  input: "^VGG_128/block4_conv3/kernel/Assign"
  input: "^VGG_128/block4_conv4/bias/Assign"
  input: "^VGG_128/block4_conv4/kernel/Assign"
  input: "^VGG_128/block5_conv1/bias/Assign"
  input: "^VGG_128/block5_conv1/kernel/Assign"
  input: "^VGG_128/block5_conv2/bias/Assign"
  input: "^VGG_128/block5_conv2/kernel/Assign"
  input: "^VGG_128/block5_conv3/bias/Assign"
  input: "^VGG_128/block5_conv3/kernel/Assign"
  input: "^VGG_128/block5_conv4/bias/Assign"
  input: "^VGG_128/block5_conv4/kernel/Assign"
  input: "^alpha/Assign"
  input: "^dense_sn_1/Variable/Assign"
  input: "^dense_sn_1/bias/Assign"
  input: "^dense_sn_1/kernel/Assign"
  input: "^dense_sn_1/u_sn/Assign"
  input: "^dense_sn_2/Variable/Assign"
  input: "^dense_sn_2/bias/Assign"
  input: "^dense_sn_2/kernel/Assign"
  input: "^dense_sn_2/u_sn/Assign"
  input: "^gModel_0/gLBott_4/conv2d_11/bias/Assign"
  input: "^gModel_0/gLBott_4/conv2d_11/kernel/Assign"
  input: "^gModel_0/gLBott_4/conv2d_12/bias/Assign"
  input: "^gModel_0/gLBott_4/conv2d_12/kernel/Assign"
  input: "^gModel_0/gLDec_16to32/conv2d_15/bias/Assign"
  input: "^gModel_0/gLDec_16to32/conv2d_15/kernel/Assign"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable/Assign"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias/Assign"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta/Assign"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma/Assign"
  input: "^gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel/Assign"
  input: "^gModel_0/gLDec_32to64/conv2d_16/bias/Assign"
  input: "^gModel_0/gLDec_32to64/conv2d_16/kernel/Assign"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable/Assign"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias/Assign"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta/Assign"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma/Assign"
  input: "^gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel/Assign"
  input: "^gModel_0/gLDec_4to8/conv2d_13/bias/Assign"
  input: "^gModel_0/gLDec_4to8/conv2d_13/kernel/Assign"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable/Assign"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias/Assign"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta/Assign"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma/Assign"
  input: "^gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel/Assign"
  input: "^gModel_0/gLDec_64to128/conv2d_18/bias/Assign"
  input: "^gModel_0/gLDec_64to128/conv2d_18/kernel/Assign"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable/Assign"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias/Assign"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta/Assign"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma/Assign"
  input: "^gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel/Assign"
  input: "^gModel_0/gLDec_8to16/conv2d_14/bias/Assign"
  input: "^gModel_0/gLDec_8to16/conv2d_14/kernel/Assign"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable/Assign"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias/Assign"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta/Assign"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma/Assign"
  input: "^gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel/Assign"
  input: "^gModel_0/gLEnc_128to64/conv2d_1/bias/Assign"
  input: "^gModel_0/gLEnc_128to64/conv2d_1/kernel/Assign"
  input: "^gModel_0/gLEnc_128to64/conv2d_2/bias/Assign"
  input: "^gModel_0/gLEnc_128to64/conv2d_2/kernel/Assign"
  input: "^gModel_0/gLEnc_16to8/conv2d_7/bias/Assign"
  input: "^gModel_0/gLEnc_16to8/conv2d_7/kernel/Assign"
  input: "^gModel_0/gLEnc_16to8/conv2d_8/bias/Assign"
  input: "^gModel_0/gLEnc_16to8/conv2d_8/kernel/Assign"
  input: "^gModel_0/gLEnc_32to16/conv2d_5/bias/Assign"
  input: "^gModel_0/gLEnc_32to16/conv2d_5/kernel/Assign"
  input: "^gModel_0/gLEnc_32to16/conv2d_6/bias/Assign"
  input: "^gModel_0/gLEnc_32to16/conv2d_6/kernel/Assign"
  input: "^gModel_0/gLEnc_64to32/conv2d_3/bias/Assign"
  input: "^gModel_0/gLEnc_64to32/conv2d_3/kernel/Assign"
  input: "^gModel_0/gLEnc_64to32/conv2d_4/bias/Assign"
  input: "^gModel_0/gLEnc_64to32/conv2d_4/kernel/Assign"
  input: "^gModel_0/gLEnc_8to4/conv2d_10/bias/Assign"
  input: "^gModel_0/gLEnc_8to4/conv2d_10/kernel/Assign"
  input: "^gModel_0/gLEnc_8to4/conv2d_9/bias/Assign"
  input: "^gModel_0/gLEnc_8to4/conv2d_9/kernel/Assign"
  input: "^gModel_0/toRGB_L_128/conv2d_19/bias/Assign"
  input: "^gModel_0/toRGB_L_128/conv2d_19/kernel/Assign"
  input: "^gModel_0/toRGB_L_64/conv2d_17/bias/Assign"
  input: "^gModel_0/toRGB_L_64/conv2d_17/kernel/Assign"
}
node {
  name: "stackedVGG_128/input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/stack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/stack/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/input"
  input: "stackedVGG_128/stack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/stack/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/stack/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/stack/Reshape_1"
  op: "Reshape"
  input: "stackedVGG_128/stack/Placeholder"
  input: "stackedVGG_128/stack/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_conv1/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/stack/Reshape"
  input: "VGG_128/block1_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block1_conv1/convolution"
  input: "VGG_128/block1_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_conv1/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_conv2/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block1_conv1/Relu"
  input: "VGG_128/block1_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block1_conv2/convolution"
  input: "VGG_128/block1_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_conv2/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block1_pool/MaxPool"
  op: "MaxPool"
  input: "stackedVGG_128/partialVGG/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_conv1/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block1_pool/MaxPool"
  input: "VGG_128/block2_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block2_conv1/convolution"
  input: "VGG_128/block2_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_conv1/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_conv2/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block2_conv1/Relu"
  input: "VGG_128/block2_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block2_conv2/convolution"
  input: "VGG_128/block2_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_conv2/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block2_pool/MaxPool"
  op: "MaxPool"
  input: "stackedVGG_128/partialVGG/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv1/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block2_pool/MaxPool"
  input: "VGG_128/block3_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block3_conv1/convolution"
  input: "VGG_128/block3_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv1/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv2/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block3_conv1/Relu"
  input: "VGG_128/block3_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv2/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block3_conv2/convolution"
  input: "VGG_128/block3_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv2/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block3_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv3/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block3_conv2/Relu"
  input: "VGG_128/block3_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv3/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block3_conv3/convolution"
  input: "VGG_128/block3_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv3/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block3_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv4/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block3_conv3/Relu"
  input: "VGG_128/block3_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv4/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block3_conv4/convolution"
  input: "VGG_128/block3_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_conv4/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block3_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block3_pool/MaxPool"
  op: "MaxPool"
  input: "stackedVGG_128/partialVGG/block3_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv1/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block3_pool/MaxPool"
  input: "VGG_128/block4_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv1/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block4_conv1/convolution"
  input: "VGG_128/block4_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv1/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block4_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv2/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block4_conv1/Relu"
  input: "VGG_128/block4_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv2/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block4_conv2/convolution"
  input: "VGG_128/block4_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv2/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block4_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv3/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block4_conv2/Relu"
  input: "VGG_128/block4_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv3/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block4_conv3/convolution"
  input: "VGG_128/block4_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv3/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block4_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv4/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block4_conv3/Relu"
  input: "VGG_128/block4_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv4/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block4_conv4/convolution"
  input: "VGG_128/block4_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_conv4/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block4_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block4_pool/MaxPool"
  op: "MaxPool"
  input: "stackedVGG_128/partialVGG/block4_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block5_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block5_conv1/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block4_pool/MaxPool"
  input: "VGG_128/block5_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block5_conv1/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block5_conv1/convolution"
  input: "VGG_128/block5_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block5_conv1/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block5_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block5_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block5_conv2/convolution"
  op: "Conv2D"
  input: "stackedVGG_128/partialVGG/block5_conv1/Relu"
  input: "VGG_128/block5_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block5_conv2/BiasAdd"
  op: "BiasAdd"
  input: "stackedVGG_128/partialVGG/block5_conv2/convolution"
  input: "VGG_128/block5_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "stackedVGG_128/partialVGG/block5_conv2/Relu"
  op: "Relu"
  input: "stackedVGG_128/partialVGG/block5_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/f1_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f1_unstack/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/partialVGG/block1_conv2/Relu"
  input: "stackedVGG_128/f1_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f1_unstack/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/f1_unstack/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f1_unstack/Reshape_1"
  op: "Reshape"
  input: "stackedVGG_128/f1_unstack/Placeholder"
  input: "stackedVGG_128/f1_unstack/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f2_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f2_unstack/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/partialVGG/block2_conv2/Relu"
  input: "stackedVGG_128/f2_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f2_unstack/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/f2_unstack/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f2_unstack/Reshape_1"
  op: "Reshape"
  input: "stackedVGG_128/f2_unstack/Placeholder"
  input: "stackedVGG_128/f2_unstack/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f3_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f3_unstack/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/partialVGG/block3_conv2/Relu"
  input: "stackedVGG_128/f3_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f3_unstack/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/f3_unstack/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f3_unstack/Reshape_1"
  op: "Reshape"
  input: "stackedVGG_128/f3_unstack/Placeholder"
  input: "stackedVGG_128/f3_unstack/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f4_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f4_unstack/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/partialVGG/block4_conv2/Relu"
  input: "stackedVGG_128/f4_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f4_unstack/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/f4_unstack/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f4_unstack/Reshape_1"
  op: "Reshape"
  input: "stackedVGG_128/f4_unstack/Placeholder"
  input: "stackedVGG_128/f4_unstack/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f5_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f5_unstack/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/partialVGG/block5_conv2/Relu"
  input: "stackedVGG_128/f5_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/f5_unstack/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/f5_unstack/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/f5_unstack/Reshape_1"
  op: "Reshape"
  input: "stackedVGG_128/f5_unstack/Placeholder"
  input: "stackedVGG_128/f5_unstack/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/lambda_73/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_73/mul"
  op: "Mul"
  input: "stackedVGG_128/f1_unstack/Reshape"
  input: "stackedVGG_128/lambda_73/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_73/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_73/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_73/mul_1"
  op: "Mul"
  input: "stackedVGG_128/lambda_73/Placeholder"
  input: "stackedVGG_128/lambda_73/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_74/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0357142873108387
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_74/mul"
  op: "Mul"
  input: "stackedVGG_128/f2_unstack/Reshape"
  input: "stackedVGG_128/lambda_74/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_74/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_74/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0357142873108387
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_74/mul_1"
  op: "Mul"
  input: "stackedVGG_128/lambda_74/Placeholder"
  input: "stackedVGG_128/lambda_74/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_75/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_75/mul"
  op: "Mul"
  input: "stackedVGG_128/f3_unstack/Reshape"
  input: "stackedVGG_128/lambda_75/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_75/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_75/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_75/mul_1"
  op: "Mul"
  input: "stackedVGG_128/lambda_75/Placeholder"
  input: "stackedVGG_128/lambda_75/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_76/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_76/mul"
  op: "Mul"
  input: "stackedVGG_128/f4_unstack/Reshape"
  input: "stackedVGG_128/lambda_76/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_76/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_76/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_76/mul_1"
  op: "Mul"
  input: "stackedVGG_128/lambda_76/Placeholder"
  input: "stackedVGG_128/lambda_76/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_77/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1111111119389534
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_77/mul"
  op: "Mul"
  input: "stackedVGG_128/f5_unstack/Reshape"
  input: "stackedVGG_128/lambda_77/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/lambda_77/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_77/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1111111119389534
      }
    }
  }
}
node {
  name: "stackedVGG_128/lambda_77/mul_1"
  op: "Mul"
  input: "stackedVGG_128/lambda_77/Placeholder"
  input: "stackedVGG_128/lambda_77/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/strided_slice"
  op: "StridedSlice"
  input: "stackedVGG_128/reshape_1/Shape"
  input: "stackedVGG_128/reshape_1/strided_slice/stack"
  input: "stackedVGG_128/reshape_1/strided_slice/stack_1"
  input: "stackedVGG_128/reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/Reshape/shape"
  op: "Pack"
  input: "stackedVGG_128/reshape_1/strided_slice"
  input: "stackedVGG_128/reshape_1/Reshape/shape/1"
  input: "stackedVGG_128/reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "stackedVGG_128/reshape_1/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/lambda_73/mul"
  input: "stackedVGG_128/reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/strided_slice"
  op: "StridedSlice"
  input: "stackedVGG_128/reshape_2/Shape"
  input: "stackedVGG_128/reshape_2/strided_slice/stack"
  input: "stackedVGG_128/reshape_2/strided_slice/stack_1"
  input: "stackedVGG_128/reshape_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/Reshape/shape"
  op: "Pack"
  input: "stackedVGG_128/reshape_2/strided_slice"
  input: "stackedVGG_128/reshape_2/Reshape/shape/1"
  input: "stackedVGG_128/reshape_2/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "stackedVGG_128/reshape_2/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/lambda_74/mul"
  input: "stackedVGG_128/reshape_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/strided_slice"
  op: "StridedSlice"
  input: "stackedVGG_128/reshape_3/Shape"
  input: "stackedVGG_128/reshape_3/strided_slice/stack"
  input: "stackedVGG_128/reshape_3/strided_slice/stack_1"
  input: "stackedVGG_128/reshape_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/Reshape/shape"
  op: "Pack"
  input: "stackedVGG_128/reshape_3/strided_slice"
  input: "stackedVGG_128/reshape_3/Reshape/shape/1"
  input: "stackedVGG_128/reshape_3/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "stackedVGG_128/reshape_3/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/lambda_75/mul"
  input: "stackedVGG_128/reshape_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/strided_slice"
  op: "StridedSlice"
  input: "stackedVGG_128/reshape_4/Shape"
  input: "stackedVGG_128/reshape_4/strided_slice/stack"
  input: "stackedVGG_128/reshape_4/strided_slice/stack_1"
  input: "stackedVGG_128/reshape_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/Reshape/shape"
  op: "Pack"
  input: "stackedVGG_128/reshape_4/strided_slice"
  input: "stackedVGG_128/reshape_4/Reshape/shape/1"
  input: "stackedVGG_128/reshape_4/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "stackedVGG_128/reshape_4/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/lambda_76/mul"
  input: "stackedVGG_128/reshape_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/strided_slice"
  op: "StridedSlice"
  input: "stackedVGG_128/reshape_5/Shape"
  input: "stackedVGG_128/reshape_5/strided_slice/stack"
  input: "stackedVGG_128/reshape_5/strided_slice/stack_1"
  input: "stackedVGG_128/reshape_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/Reshape/shape"
  op: "Pack"
  input: "stackedVGG_128/reshape_5/strided_slice"
  input: "stackedVGG_128/reshape_5/Reshape/shape/1"
  input: "stackedVGG_128/reshape_5/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "stackedVGG_128/reshape_5/Reshape"
  op: "Reshape"
  input: "stackedVGG_128/lambda_77/mul"
  input: "stackedVGG_128/reshape_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "stackedVGG_128/concatenate_8/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "stackedVGG_128/concatenate_8/concat"
  op: "ConcatV2"
  input: "stackedVGG_128/reshape_1/Reshape"
  input: "stackedVGG_128/reshape_2/Reshape"
  input: "stackedVGG_128/reshape_3/Reshape"
  input: "stackedVGG_128/reshape_4/Reshape"
  input: "stackedVGG_128/reshape_5/Reshape"
  input: "stackedVGG_128/concatenate_8/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/stack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/stack/Reshape"
  op: "Reshape"
  input: "gModel_0/maskedBypass0/lambda_59/add"
  input: "vggFeats_128/stack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape"
  op: "Reshape"
  input: "vggFeats_128/Placeholder"
  input: "vggFeats_128/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_conv1/convolution"
  op: "Conv2D"
  input: "vggFeats_128/stack/Reshape"
  input: "VGG_128/block1_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block1_conv1/convolution"
  input: "VGG_128/block1_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_conv1/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_conv2/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block1_conv1/Relu"
  input: "VGG_128/block1_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block1_conv2/convolution"
  input: "VGG_128/block1_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_conv2/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block1_pool/MaxPool"
  op: "MaxPool"
  input: "vggFeats_128/partialVGG/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_conv1/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block1_pool/MaxPool"
  input: "VGG_128/block2_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block2_conv1/convolution"
  input: "VGG_128/block2_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_conv1/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_conv2/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block2_conv1/Relu"
  input: "VGG_128/block2_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block2_conv2/convolution"
  input: "VGG_128/block2_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_conv2/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block2_pool/MaxPool"
  op: "MaxPool"
  input: "vggFeats_128/partialVGG/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv1/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block2_pool/MaxPool"
  input: "VGG_128/block3_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block3_conv1/convolution"
  input: "VGG_128/block3_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv1/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv2/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block3_conv1/Relu"
  input: "VGG_128/block3_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block3_conv2/convolution"
  input: "VGG_128/block3_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv2/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block3_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv3/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block3_conv2/Relu"
  input: "VGG_128/block3_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv3/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block3_conv3/convolution"
  input: "VGG_128/block3_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv3/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block3_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv4/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block3_conv3/Relu"
  input: "VGG_128/block3_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv4/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block3_conv4/convolution"
  input: "VGG_128/block3_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_conv4/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block3_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block3_pool/MaxPool"
  op: "MaxPool"
  input: "vggFeats_128/partialVGG/block3_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv1/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block3_pool/MaxPool"
  input: "VGG_128/block4_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block4_conv1/convolution"
  input: "VGG_128/block4_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv1/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block4_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv2/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block4_conv1/Relu"
  input: "VGG_128/block4_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block4_conv2/convolution"
  input: "VGG_128/block4_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv2/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block4_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv3/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block4_conv2/Relu"
  input: "VGG_128/block4_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv3/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block4_conv3/convolution"
  input: "VGG_128/block4_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv3/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block4_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv4/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block4_conv3/Relu"
  input: "VGG_128/block4_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv4/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block4_conv4/convolution"
  input: "VGG_128/block4_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_conv4/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block4_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block4_pool/MaxPool"
  op: "MaxPool"
  input: "vggFeats_128/partialVGG/block4_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block5_conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block5_conv1/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block4_pool/MaxPool"
  input: "VGG_128/block5_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block5_conv1/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block5_conv1/convolution"
  input: "VGG_128/block5_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block5_conv1/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block5_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block5_conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block5_conv2/convolution"
  op: "Conv2D"
  input: "vggFeats_128/partialVGG/block5_conv1/Relu"
  input: "VGG_128/block5_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block5_conv2/BiasAdd"
  op: "BiasAdd"
  input: "vggFeats_128/partialVGG/block5_conv2/convolution"
  input: "VGG_128/block5_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "vggFeats_128/partialVGG/block5_conv2/Relu"
  op: "Relu"
  input: "vggFeats_128/partialVGG/block5_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/f4_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/f4_unstack/Reshape"
  op: "Reshape"
  input: "vggFeats_128/partialVGG/block4_conv2/Relu"
  input: "vggFeats_128/f4_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\020\000\000\000\020\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_1"
  op: "Reshape"
  input: "vggFeats_128/Placeholder_1"
  input: "vggFeats_128/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/f1_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/f1_unstack/Reshape"
  op: "Reshape"
  input: "vggFeats_128/partialVGG/block1_conv2/Relu"
  input: "vggFeats_128/f1_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_2"
  op: "Reshape"
  input: "vggFeats_128/Placeholder_2"
  input: "vggFeats_128/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/f3_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/f3_unstack/Reshape"
  op: "Reshape"
  input: "vggFeats_128/partialVGG/block3_conv2/Relu"
  input: "vggFeats_128/f3_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_3"
  op: "Reshape"
  input: "vggFeats_128/Placeholder_3"
  input: "vggFeats_128/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/f2_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/f2_unstack/Reshape"
  op: "Reshape"
  input: "vggFeats_128/partialVGG/block2_conv2/Relu"
  input: "vggFeats_128/f2_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_4"
  op: "Reshape"
  input: "vggFeats_128/Placeholder_4"
  input: "vggFeats_128/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/f5_unstack/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/f5_unstack/Reshape"
  op: "Reshape"
  input: "vggFeats_128/partialVGG/block5_conv2/Relu"
  input: "vggFeats_128/f5_unstack/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\010\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "vggFeats_128/Reshape_5"
  op: "Reshape"
  input: "vggFeats_128/Placeholder_5"
  input: "vggFeats_128/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/lambda_77/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1111111119389534
      }
    }
  }
}
node {
  name: "vggFeats_128/lambda_77/mul"
  op: "Mul"
  input: "vggFeats_128/f5_unstack/Reshape"
  input: "vggFeats_128/lambda_77/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1111111119389534
      }
    }
  }
}
node {
  name: "vggFeats_128/mul"
  op: "Mul"
  input: "vggFeats_128/Placeholder_6"
  input: "vggFeats_128/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/lambda_74/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0357142873108387
      }
    }
  }
}
node {
  name: "vggFeats_128/lambda_74/mul"
  op: "Mul"
  input: "vggFeats_128/f2_unstack/Reshape"
  input: "vggFeats_128/lambda_74/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0357142873108387
      }
    }
  }
}
node {
  name: "vggFeats_128/mul_1"
  op: "Mul"
  input: "vggFeats_128/Placeholder_7"
  input: "vggFeats_128/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/lambda_75/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "vggFeats_128/lambda_75/mul"
  op: "Mul"
  input: "vggFeats_128/f3_unstack/Reshape"
  input: "vggFeats_128/lambda_75/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "vggFeats_128/mul_2"
  op: "Mul"
  input: "vggFeats_128/Placeholder_8"
  input: "vggFeats_128/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/lambda_76/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "vggFeats_128/lambda_76/mul"
  op: "Mul"
  input: "vggFeats_128/f4_unstack/Reshape"
  input: "vggFeats_128/lambda_76/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "vggFeats_128/mul_3"
  op: "Mul"
  input: "vggFeats_128/Placeholder_9"
  input: "vggFeats_128/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/lambda_73/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "vggFeats_128/lambda_73/mul"
  op: "Mul"
  input: "vggFeats_128/f1_unstack/Reshape"
  input: "vggFeats_128/lambda_73/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "vggFeats_128/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "vggFeats_128/mul_4"
  op: "Mul"
  input: "vggFeats_128/Placeholder_10"
  input: "vggFeats_128/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/Shape"
  op: "Shape"
  input: "vggFeats_128/lambda_77/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/strided_slice"
  op: "StridedSlice"
  input: "vggFeats_128/reshape_5_1/Shape"
  input: "vggFeats_128/reshape_5_1/strided_slice/stack"
  input: "vggFeats_128/reshape_5_1/strided_slice/stack_1"
  input: "vggFeats_128/reshape_5_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/Reshape/shape"
  op: "Pack"
  input: "vggFeats_128/reshape_5_1/strided_slice"
  input: "vggFeats_128/reshape_5_1/Reshape/shape/1"
  input: "vggFeats_128/reshape_5_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "vggFeats_128/reshape_5_1/Reshape"
  op: "Reshape"
  input: "vggFeats_128/lambda_77/mul"
  input: "vggFeats_128/reshape_5_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/Shape"
  op: "Shape"
  input: "vggFeats_128/lambda_76/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/strided_slice"
  op: "StridedSlice"
  input: "vggFeats_128/reshape_4_1/Shape"
  input: "vggFeats_128/reshape_4_1/strided_slice/stack"
  input: "vggFeats_128/reshape_4_1/strided_slice/stack_1"
  input: "vggFeats_128/reshape_4_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/Reshape/shape"
  op: "Pack"
  input: "vggFeats_128/reshape_4_1/strided_slice"
  input: "vggFeats_128/reshape_4_1/Reshape/shape/1"
  input: "vggFeats_128/reshape_4_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "vggFeats_128/reshape_4_1/Reshape"
  op: "Reshape"
  input: "vggFeats_128/lambda_76/mul"
  input: "vggFeats_128/reshape_4_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/Shape"
  op: "Shape"
  input: "vggFeats_128/lambda_74/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/strided_slice"
  op: "StridedSlice"
  input: "vggFeats_128/reshape_2_1/Shape"
  input: "vggFeats_128/reshape_2_1/strided_slice/stack"
  input: "vggFeats_128/reshape_2_1/strided_slice/stack_1"
  input: "vggFeats_128/reshape_2_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/Reshape/shape"
  op: "Pack"
  input: "vggFeats_128/reshape_2_1/strided_slice"
  input: "vggFeats_128/reshape_2_1/Reshape/shape/1"
  input: "vggFeats_128/reshape_2_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "vggFeats_128/reshape_2_1/Reshape"
  op: "Reshape"
  input: "vggFeats_128/lambda_74/mul"
  input: "vggFeats_128/reshape_2_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/Shape"
  op: "Shape"
  input: "vggFeats_128/lambda_73/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/strided_slice"
  op: "StridedSlice"
  input: "vggFeats_128/reshape_1_1/Shape"
  input: "vggFeats_128/reshape_1_1/strided_slice/stack"
  input: "vggFeats_128/reshape_1_1/strided_slice/stack_1"
  input: "vggFeats_128/reshape_1_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/Reshape/shape"
  op: "Pack"
  input: "vggFeats_128/reshape_1_1/strided_slice"
  input: "vggFeats_128/reshape_1_1/Reshape/shape/1"
  input: "vggFeats_128/reshape_1_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "vggFeats_128/reshape_1_1/Reshape"
  op: "Reshape"
  input: "vggFeats_128/lambda_73/mul"
  input: "vggFeats_128/reshape_1_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/Shape"
  op: "Shape"
  input: "vggFeats_128/lambda_75/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/strided_slice"
  op: "StridedSlice"
  input: "vggFeats_128/reshape_3_1/Shape"
  input: "vggFeats_128/reshape_3_1/strided_slice/stack"
  input: "vggFeats_128/reshape_3_1/strided_slice/stack_1"
  input: "vggFeats_128/reshape_3_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/Reshape/shape"
  op: "Pack"
  input: "vggFeats_128/reshape_3_1/strided_slice"
  input: "vggFeats_128/reshape_3_1/Reshape/shape/1"
  input: "vggFeats_128/reshape_3_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "vggFeats_128/reshape_3_1/Reshape"
  op: "Reshape"
  input: "vggFeats_128/lambda_75/mul"
  input: "vggFeats_128/reshape_3_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "vggFeats_128/concatenate_8/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "vggFeats_128/concatenate_8/concat"
  op: "ConcatV2"
  input: "vggFeats_128/reshape_1_1/Reshape"
  input: "vggFeats_128/reshape_2_1/Reshape"
  input: "vggFeats_128/reshape_3_1/Reshape"
  input: "vggFeats_128/reshape_4_1/Reshape"
  input: "vggFeats_128/reshape_5_1/Reshape"
  input: "vggFeats_128/concatenate_8/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/lambda_66/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_66/transpose"
  op: "Transpose"
  input: "gModel_0/maskedBypass0/lambda_59/add"
  input: "discriminator/lambda_66/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "discriminator/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\004\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/transpose"
  op: "Transpose"
  input: "discriminator/Placeholder"
  input: "discriminator/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/lambda_60/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_60/MirrorPad"
  op: "MirrorPad"
  input: "gModel_0/maskedBypass0/lambda_59/add"
  input: "discriminator/lambda_60/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad"
  op: "MirrorPad"
  input: "discriminator/Placeholder_1"
  input: "discriminator/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377`\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Reshape"
  op: "Reshape"
  input: "Conv3DSN/conv3dsn_1/kernel/read"
  input: "discriminator/conv3dsn_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 81
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 81
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Variable/Assign"
  op: "Assign"
  input: "discriminator/conv3dsn_1/Variable"
  input: "discriminator/conv3dsn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Variable/read"
  op: "Identity"
  input: "discriminator/conv3dsn_1/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_1/Variable"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_1/transpose/Rank"
  input: "discriminator/conv3dsn_1/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose/Range"
  op: "Range"
  input: "discriminator/conv3dsn_1/transpose/Range/start"
  input: "discriminator/conv3dsn_1/transpose/Rank"
  input: "discriminator/conv3dsn_1/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_1/transpose/sub"
  input: "discriminator/conv3dsn_1/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose"
  op: "Transpose"
  input: "discriminator/conv3dsn_1/Reshape"
  input: "discriminator/conv3dsn_1/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/MatMul"
  op: "MatMul"
  input: "Conv3DSN/conv3dsn_1/u_sn/read"
  input: "discriminator/conv3dsn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/pow"
  op: "Pow"
  input: "discriminator/conv3dsn_1/MatMul"
  input: "discriminator/conv3dsn_1/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Sum"
  op: "Sum"
  input: "discriminator/conv3dsn_1/pow"
  input: "discriminator/conv3dsn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/pow_1"
  op: "Pow"
  input: "discriminator/conv3dsn_1/Sum"
  input: "discriminator/conv3dsn_1/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_1/pow_1"
  input: "discriminator/conv3dsn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/clip_by_value"
  op: "Maximum"
  input: "discriminator/conv3dsn_1/clip_by_value/Minimum"
  input: "discriminator/conv3dsn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/truediv"
  op: "RealDiv"
  input: "discriminator/conv3dsn_1/MatMul"
  input: "discriminator/conv3dsn_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/MatMul_1"
  op: "MatMul"
  input: "discriminator/conv3dsn_1/truediv"
  input: "discriminator/conv3dsn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/pow_2"
  op: "Pow"
  input: "discriminator/conv3dsn_1/MatMul_1"
  input: "discriminator/conv3dsn_1/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Sum_1"
  op: "Sum"
  input: "discriminator/conv3dsn_1/pow_2"
  input: "discriminator/conv3dsn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/pow_3"
  op: "Pow"
  input: "discriminator/conv3dsn_1/Sum_1"
  input: "discriminator/conv3dsn_1/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_1/pow_3"
  input: "discriminator/conv3dsn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/clip_by_value_1"
  op: "Maximum"
  input: "discriminator/conv3dsn_1/clip_by_value_1/Minimum"
  input: "discriminator/conv3dsn_1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/truediv_1"
  op: "RealDiv"
  input: "discriminator/conv3dsn_1/MatMul_1"
  input: "discriminator/conv3dsn_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/MatMul_2"
  op: "MatMul"
  input: "discriminator/conv3dsn_1/truediv"
  input: "discriminator/conv3dsn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose_1/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose_1/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_1/transpose_1/Rank"
  input: "discriminator/conv3dsn_1/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose_1/Range"
  op: "Range"
  input: "discriminator/conv3dsn_1/transpose_1/Range/start"
  input: "discriminator/conv3dsn_1/transpose_1/Rank"
  input: "discriminator/conv3dsn_1/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose_1/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_1/transpose_1/sub"
  input: "discriminator/conv3dsn_1/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/transpose_1"
  op: "Transpose"
  input: "discriminator/conv3dsn_1/truediv_1"
  input: "discriminator/conv3dsn_1/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/MatMul_3"
  op: "MatMul"
  input: "discriminator/conv3dsn_1/MatMul_2"
  input: "discriminator/conv3dsn_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/strided_slice"
  op: "StridedSlice"
  input: "discriminator/conv3dsn_1/MatMul_3"
  input: "discriminator/conv3dsn_1/strided_slice/stack"
  input: "discriminator/conv3dsn_1/strided_slice/stack_1"
  input: "discriminator/conv3dsn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/truediv_2"
  op: "RealDiv"
  input: "discriminator/conv3dsn_1/Reshape"
  input: "discriminator/conv3dsn_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Reshape_1"
  op: "Reshape"
  input: "discriminator/conv3dsn_1/truediv_2"
  input: "discriminator/conv3dsn_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Assign"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/u_sn"
  input: "discriminator/conv3dsn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Assign_1"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/u_sn"
  input: "discriminator/conv3dsn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Reshape_2/shape"
  op: "Const"
  input: "^discriminator/conv3dsn_1/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Reshape_2"
  op: "Reshape"
  input: "discriminator/conv3dsn_1/Reshape_1"
  input: "discriminator/conv3dsn_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/convolution"
  op: "Conv3D"
  input: "discriminator/lambda_60/MirrorPad"
  input: "discriminator/conv3dsn_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN/conv3dsn_1/bias/read"
  input: "discriminator/conv3dsn_1/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_1/add"
  op: "Add"
  input: "discriminator/conv3dsn_1/convolution"
  input: "discriminator/conv3dsn_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_67/zeros_like"
  op: "ZerosLike"
  input: "discriminator/lambda_66/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_67/Complex"
  op: "Complex"
  input: "discriminator/lambda_66/transpose"
  input: "discriminator/lambda_67/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_COMPLEX64
    }
  }
}
node {
  name: "discriminator/lambda_67/FFT3D"
  op: "FFT3D"
  input: "discriminator/lambda_67/Complex"
  attr {
    key: "Tcomplex"
    value {
      type: DT_COMPLEX64
    }
  }
}
node {
  name: "discriminator/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "discriminator/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/zeros_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/zeros_like"
  op: "Fill"
  input: "discriminator/zeros_like/shape_as_tensor"
  input: "discriminator/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/Complex"
  op: "Complex"
  input: "discriminator/Placeholder_2"
  input: "discriminator/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_COMPLEX64
    }
  }
}
node {
  name: "discriminator/FFT3D"
  op: "FFT3D"
  input: "discriminator/Complex"
  attr {
    key: "Tcomplex"
    value {
      type: DT_COMPLEX64
    }
  }
}
node {
  name: "discriminator/lambda_68/Real"
  op: "Real"
  input: "discriminator/lambda_67/FFT3D"
  attr {
    key: "T"
    value {
      type: DT_COMPLEX64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_68/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9073486328125e-06
      }
    }
  }
}
node {
  name: "discriminator/lambda_68/mul"
  op: "Mul"
  input: "discriminator/lambda_68/Real"
  input: "discriminator/lambda_68/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "discriminator/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9073486328125e-06
      }
    }
  }
}
node {
  name: "discriminator/mul"
  op: "Mul"
  input: "discriminator/Placeholder_3"
  input: "discriminator/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_69/Imag"
  op: "Imag"
  input: "discriminator/lambda_67/FFT3D"
  attr {
    key: "T"
    value {
      type: DT_COMPLEX64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_69/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9073486328125e-06
      }
    }
  }
}
node {
  name: "discriminator/lambda_69/mul"
  op: "Mul"
  input: "discriminator/lambda_69/Imag"
  input: "discriminator/lambda_69/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "discriminator/Imag/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000 \000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/Imag/zeros_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/Imag/zeros_like"
  op: "Fill"
  input: "discriminator/Imag/zeros_like/shape_as_tensor"
  input: "discriminator/Imag/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.9073486328125e-06
      }
    }
  }
}
node {
  name: "discriminator/mul_1"
  op: "Mul"
  input: "discriminator/Imag/zeros_like"
  input: "discriminator/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/elu_18/Elu"
  op: "Elu"
  input: "discriminator/conv3dsn_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_61/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_61/MirrorPad"
  op: "MirrorPad"
  input: "discriminator/elu_18/Elu"
  input: "discriminator/lambda_61/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_1/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_1"
  op: "MirrorPad"
  input: "discriminator/Placeholder_5"
  input: "discriminator/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/concatenate_6/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/concatenate_6/concat"
  op: "ConcatV2"
  input: "discriminator/lambda_68/mul"
  input: "discriminator/lambda_69/mul"
  input: "discriminator/concatenate_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/lambda_70/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "discriminator/lambda_70/mul"
  op: "Mul"
  input: "discriminator/concatenate_6/concat"
  input: "discriminator/lambda_70/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_70/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_70/transpose"
  op: "Transpose"
  input: "discriminator/lambda_70/mul"
  input: "discriminator/lambda_70/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 6
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "discriminator/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "discriminator/mul_2"
  op: "Mul"
  input: "discriminator/Placeholder_6"
  input: "discriminator/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/transpose_1"
  op: "Transpose"
  input: "discriminator/mul_2"
  input: "discriminator/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377`\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Reshape"
  op: "Reshape"
  input: "Conv3DSN_1/conv3dsn_2/kernel/read"
  input: "discriminator/conv3dsn_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \n\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/zeros"
  op: "Fill"
  input: "discriminator/conv3dsn_2/zeros/shape_as_tensor"
  input: "discriminator/conv3dsn_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2592
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Variable/Assign"
  op: "Assign"
  input: "discriminator/conv3dsn_2/Variable"
  input: "discriminator/conv3dsn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Variable/read"
  op: "Identity"
  input: "discriminator/conv3dsn_2/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_2/Variable"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_2/transpose/Rank"
  input: "discriminator/conv3dsn_2/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose/Range"
  op: "Range"
  input: "discriminator/conv3dsn_2/transpose/Range/start"
  input: "discriminator/conv3dsn_2/transpose/Rank"
  input: "discriminator/conv3dsn_2/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_2/transpose/sub"
  input: "discriminator/conv3dsn_2/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose"
  op: "Transpose"
  input: "discriminator/conv3dsn_2/Reshape"
  input: "discriminator/conv3dsn_2/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/MatMul"
  op: "MatMul"
  input: "Conv3DSN_1/conv3dsn_2/u_sn/read"
  input: "discriminator/conv3dsn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/pow"
  op: "Pow"
  input: "discriminator/conv3dsn_2/MatMul"
  input: "discriminator/conv3dsn_2/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Sum"
  op: "Sum"
  input: "discriminator/conv3dsn_2/pow"
  input: "discriminator/conv3dsn_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/pow_1"
  op: "Pow"
  input: "discriminator/conv3dsn_2/Sum"
  input: "discriminator/conv3dsn_2/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_2/pow_1"
  input: "discriminator/conv3dsn_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/clip_by_value"
  op: "Maximum"
  input: "discriminator/conv3dsn_2/clip_by_value/Minimum"
  input: "discriminator/conv3dsn_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/truediv"
  op: "RealDiv"
  input: "discriminator/conv3dsn_2/MatMul"
  input: "discriminator/conv3dsn_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/MatMul_1"
  op: "MatMul"
  input: "discriminator/conv3dsn_2/truediv"
  input: "discriminator/conv3dsn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/pow_2"
  op: "Pow"
  input: "discriminator/conv3dsn_2/MatMul_1"
  input: "discriminator/conv3dsn_2/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Sum_1"
  op: "Sum"
  input: "discriminator/conv3dsn_2/pow_2"
  input: "discriminator/conv3dsn_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/pow_3"
  op: "Pow"
  input: "discriminator/conv3dsn_2/Sum_1"
  input: "discriminator/conv3dsn_2/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_2/pow_3"
  input: "discriminator/conv3dsn_2/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/clip_by_value_1"
  op: "Maximum"
  input: "discriminator/conv3dsn_2/clip_by_value_1/Minimum"
  input: "discriminator/conv3dsn_2/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/truediv_1"
  op: "RealDiv"
  input: "discriminator/conv3dsn_2/MatMul_1"
  input: "discriminator/conv3dsn_2/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/MatMul_2"
  op: "MatMul"
  input: "discriminator/conv3dsn_2/truediv"
  input: "discriminator/conv3dsn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose_1/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose_1/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_2/transpose_1/Rank"
  input: "discriminator/conv3dsn_2/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose_1/Range"
  op: "Range"
  input: "discriminator/conv3dsn_2/transpose_1/Range/start"
  input: "discriminator/conv3dsn_2/transpose_1/Rank"
  input: "discriminator/conv3dsn_2/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose_1/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_2/transpose_1/sub"
  input: "discriminator/conv3dsn_2/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/transpose_1"
  op: "Transpose"
  input: "discriminator/conv3dsn_2/truediv_1"
  input: "discriminator/conv3dsn_2/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/MatMul_3"
  op: "MatMul"
  input: "discriminator/conv3dsn_2/MatMul_2"
  input: "discriminator/conv3dsn_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/strided_slice"
  op: "StridedSlice"
  input: "discriminator/conv3dsn_2/MatMul_3"
  input: "discriminator/conv3dsn_2/strided_slice/stack"
  input: "discriminator/conv3dsn_2/strided_slice/stack_1"
  input: "discriminator/conv3dsn_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/truediv_2"
  op: "RealDiv"
  input: "discriminator/conv3dsn_2/Reshape"
  input: "discriminator/conv3dsn_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Reshape_1"
  op: "Reshape"
  input: "discriminator/conv3dsn_2/truediv_2"
  input: "discriminator/conv3dsn_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Assign"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/u_sn"
  input: "discriminator/conv3dsn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Assign_1"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/u_sn"
  input: "discriminator/conv3dsn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Reshape_2/shape"
  op: "Const"
  input: "^discriminator/conv3dsn_2/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Reshape_2"
  op: "Reshape"
  input: "discriminator/conv3dsn_2/Reshape_1"
  input: "discriminator/conv3dsn_2/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/convolution"
  op: "Conv3D"
  input: "discriminator/lambda_61/MirrorPad"
  input: "discriminator/conv3dsn_2/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_1/conv3dsn_2/bias/read"
  input: "discriminator/conv3dsn_2/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_2/add"
  op: "Add"
  input: "discriminator/conv3dsn_2/convolution"
  input: "discriminator/conv3dsn_2/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/elu_19/Elu"
  op: "Elu"
  input: "discriminator/conv3dsn_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_71/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_71/MirrorPad"
  op: "MirrorPad"
  input: "discriminator/lambda_70/transpose"
  input: "discriminator/lambda_71/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_2/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_2"
  op: "MirrorPad"
  input: "discriminator/Placeholder_7"
  input: "discriminator/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice/stack_2"
  op: "Pack"
  input: "discriminator/lambda_62/strided_slice/stack_2/values_0"
  input: "discriminator/lambda_62/strided_slice/stack_2/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice"
  op: "StridedSlice"
  input: "discriminator/elu_19/Elu"
  input: "discriminator/lambda_62/strided_slice/stack"
  input: "discriminator/lambda_62/strided_slice/stack_2"
  input: "discriminator/lambda_62/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/lambda_62/add"
  op: "Add"
  input: "discriminator/lambda_62/strided_slice"
  input: "gModel_0/maskedBypass0/lambda_59/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice_1/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice_1/stack_1/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice_1/stack_1"
  op: "Pack"
  input: "discriminator/lambda_62/strided_slice_1/stack_1/values_0"
  input: "discriminator/lambda_62/strided_slice_1/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice_1/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/strided_slice_1"
  op: "StridedSlice"
  input: "discriminator/elu_19/Elu"
  input: "discriminator/lambda_62/strided_slice_1/stack_1"
  input: "discriminator/lambda_62/strided_slice_1/stack_2"
  input: "discriminator/lambda_62/strided_slice_1/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/lambda_62/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator/lambda_62/concat"
  op: "ConcatV2"
  input: "discriminator/lambda_62/add"
  input: "discriminator/lambda_62/strided_slice_1"
  input: "discriminator/lambda_62/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "discriminator/Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "discriminator/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator/strided_slice/stack_2"
  op: "Pack"
  input: "discriminator/strided_slice/stack_2/values_0"
  input: "discriminator/strided_slice/stack_2/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/strided_slice"
  op: "StridedSlice"
  input: "discriminator/Placeholder_8"
  input: "discriminator/strided_slice/stack"
  input: "discriminator/strided_slice/stack_2"
  input: "discriminator/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/add"
  op: "Add"
  input: "discriminator/strided_slice"
  input: "discriminator/Placeholder_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_1/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_1/stack_1/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_1/stack_1"
  op: "Pack"
  input: "discriminator/strided_slice_1/stack_1/values_0"
  input: "discriminator/strided_slice_1/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_1/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_1"
  op: "StridedSlice"
  input: "discriminator/Placeholder_8"
  input: "discriminator/strided_slice_1/stack_1"
  input: "discriminator/strided_slice_1/stack_2"
  input: "discriminator/strided_slice_1/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator/concat"
  op: "ConcatV2"
  input: "discriminator/add"
  input: "discriminator/strided_slice_1"
  input: "discriminator/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\030\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Reshape"
  op: "Reshape"
  input: "Conv3DSN_4/conv3dsn_5/kernel/read"
  input: "discriminator/conv3dsn_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 162
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 162
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Variable/Assign"
  op: "Assign"
  input: "discriminator/conv3dsn_5/Variable"
  input: "discriminator/conv3dsn_5/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_5/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Variable/read"
  op: "Identity"
  input: "discriminator/conv3dsn_5/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_5/Variable"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_5/transpose/Rank"
  input: "discriminator/conv3dsn_5/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose/Range"
  op: "Range"
  input: "discriminator/conv3dsn_5/transpose/Range/start"
  input: "discriminator/conv3dsn_5/transpose/Rank"
  input: "discriminator/conv3dsn_5/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_5/transpose/sub"
  input: "discriminator/conv3dsn_5/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose"
  op: "Transpose"
  input: "discriminator/conv3dsn_5/Reshape"
  input: "discriminator/conv3dsn_5/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/MatMul"
  op: "MatMul"
  input: "Conv3DSN_4/conv3dsn_5/u_sn/read"
  input: "discriminator/conv3dsn_5/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/pow"
  op: "Pow"
  input: "discriminator/conv3dsn_5/MatMul"
  input: "discriminator/conv3dsn_5/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Sum"
  op: "Sum"
  input: "discriminator/conv3dsn_5/pow"
  input: "discriminator/conv3dsn_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/pow_1"
  op: "Pow"
  input: "discriminator/conv3dsn_5/Sum"
  input: "discriminator/conv3dsn_5/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/clip_by_value/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_5/pow_1"
  input: "discriminator/conv3dsn_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/clip_by_value"
  op: "Maximum"
  input: "discriminator/conv3dsn_5/clip_by_value/Minimum"
  input: "discriminator/conv3dsn_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/truediv"
  op: "RealDiv"
  input: "discriminator/conv3dsn_5/MatMul"
  input: "discriminator/conv3dsn_5/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/MatMul_1"
  op: "MatMul"
  input: "discriminator/conv3dsn_5/truediv"
  input: "discriminator/conv3dsn_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/pow_2"
  op: "Pow"
  input: "discriminator/conv3dsn_5/MatMul_1"
  input: "discriminator/conv3dsn_5/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Sum_1"
  op: "Sum"
  input: "discriminator/conv3dsn_5/pow_2"
  input: "discriminator/conv3dsn_5/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/pow_3"
  op: "Pow"
  input: "discriminator/conv3dsn_5/Sum_1"
  input: "discriminator/conv3dsn_5/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_5/pow_3"
  input: "discriminator/conv3dsn_5/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/clip_by_value_1"
  op: "Maximum"
  input: "discriminator/conv3dsn_5/clip_by_value_1/Minimum"
  input: "discriminator/conv3dsn_5/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/truediv_1"
  op: "RealDiv"
  input: "discriminator/conv3dsn_5/MatMul_1"
  input: "discriminator/conv3dsn_5/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/MatMul_2"
  op: "MatMul"
  input: "discriminator/conv3dsn_5/truediv"
  input: "discriminator/conv3dsn_5/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose_1/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_5/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose_1/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_5/transpose_1/Rank"
  input: "discriminator/conv3dsn_5/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose_1/Range"
  op: "Range"
  input: "discriminator/conv3dsn_5/transpose_1/Range/start"
  input: "discriminator/conv3dsn_5/transpose_1/Rank"
  input: "discriminator/conv3dsn_5/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose_1/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_5/transpose_1/sub"
  input: "discriminator/conv3dsn_5/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/transpose_1"
  op: "Transpose"
  input: "discriminator/conv3dsn_5/truediv_1"
  input: "discriminator/conv3dsn_5/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/MatMul_3"
  op: "MatMul"
  input: "discriminator/conv3dsn_5/MatMul_2"
  input: "discriminator/conv3dsn_5/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/strided_slice"
  op: "StridedSlice"
  input: "discriminator/conv3dsn_5/MatMul_3"
  input: "discriminator/conv3dsn_5/strided_slice/stack"
  input: "discriminator/conv3dsn_5/strided_slice/stack_1"
  input: "discriminator/conv3dsn_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/truediv_2"
  op: "RealDiv"
  input: "discriminator/conv3dsn_5/Reshape"
  input: "discriminator/conv3dsn_5/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\006\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Reshape_1"
  op: "Reshape"
  input: "discriminator/conv3dsn_5/truediv_2"
  input: "discriminator/conv3dsn_5/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Assign"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/u_sn"
  input: "discriminator/conv3dsn_5/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Assign_1"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/u_sn"
  input: "discriminator/conv3dsn_5/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Reshape_2/shape"
  op: "Const"
  input: "^discriminator/conv3dsn_5/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\006\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Reshape_2"
  op: "Reshape"
  input: "discriminator/conv3dsn_5/Reshape_1"
  input: "discriminator/conv3dsn_5/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/convolution"
  op: "Conv3D"
  input: "discriminator/lambda_71/MirrorPad"
  input: "discriminator/conv3dsn_5/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_4/conv3dsn_5/bias/read"
  input: "discriminator/conv3dsn_5/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_5/add"
  op: "Add"
  input: "discriminator/conv3dsn_5/convolution"
  input: "discriminator/conv3dsn_5/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/average_pooling3d_1/AvgPool3D"
  op: "AvgPool3D"
  input: "discriminator/lambda_62/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/elu_22/Elu"
  op: "Elu"
  input: "discriminator/conv3dsn_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_72/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_72/MirrorPad"
  op: "MirrorPad"
  input: "discriminator/elu_22/Elu"
  input: "discriminator/lambda_72/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_3/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_3"
  op: "MirrorPad"
  input: "discriminator/Placeholder_10"
  input: "discriminator/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/lambda_63/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_63/MirrorPad"
  op: "MirrorPad"
  input: "discriminator/average_pooling3d_1/AvgPool3D"
  input: "discriminator/lambda_63/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_4/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_4"
  op: "MirrorPad"
  input: "discriminator/Placeholder_11"
  input: "discriminator/MirrorPad_4/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\300\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Reshape"
  op: "Reshape"
  input: "Conv3DSN_2/conv3dsn_3/kernel/read"
  input: "discriminator/conv3dsn_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \n\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/zeros"
  op: "Fill"
  input: "discriminator/conv3dsn_3/zeros/shape_as_tensor"
  input: "discriminator/conv3dsn_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 2592
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Variable/Assign"
  op: "Assign"
  input: "discriminator/conv3dsn_3/Variable"
  input: "discriminator/conv3dsn_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_3/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Variable/read"
  op: "Identity"
  input: "discriminator/conv3dsn_3/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_3/Variable"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_3/transpose/Rank"
  input: "discriminator/conv3dsn_3/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose/Range"
  op: "Range"
  input: "discriminator/conv3dsn_3/transpose/Range/start"
  input: "discriminator/conv3dsn_3/transpose/Rank"
  input: "discriminator/conv3dsn_3/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_3/transpose/sub"
  input: "discriminator/conv3dsn_3/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose"
  op: "Transpose"
  input: "discriminator/conv3dsn_3/Reshape"
  input: "discriminator/conv3dsn_3/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/MatMul"
  op: "MatMul"
  input: "Conv3DSN_2/conv3dsn_3/u_sn/read"
  input: "discriminator/conv3dsn_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/pow"
  op: "Pow"
  input: "discriminator/conv3dsn_3/MatMul"
  input: "discriminator/conv3dsn_3/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Sum"
  op: "Sum"
  input: "discriminator/conv3dsn_3/pow"
  input: "discriminator/conv3dsn_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/pow_1"
  op: "Pow"
  input: "discriminator/conv3dsn_3/Sum"
  input: "discriminator/conv3dsn_3/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_3/pow_1"
  input: "discriminator/conv3dsn_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/clip_by_value"
  op: "Maximum"
  input: "discriminator/conv3dsn_3/clip_by_value/Minimum"
  input: "discriminator/conv3dsn_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/truediv"
  op: "RealDiv"
  input: "discriminator/conv3dsn_3/MatMul"
  input: "discriminator/conv3dsn_3/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/MatMul_1"
  op: "MatMul"
  input: "discriminator/conv3dsn_3/truediv"
  input: "discriminator/conv3dsn_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/pow_2"
  op: "Pow"
  input: "discriminator/conv3dsn_3/MatMul_1"
  input: "discriminator/conv3dsn_3/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Sum_1"
  op: "Sum"
  input: "discriminator/conv3dsn_3/pow_2"
  input: "discriminator/conv3dsn_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/pow_3"
  op: "Pow"
  input: "discriminator/conv3dsn_3/Sum_1"
  input: "discriminator/conv3dsn_3/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_3/pow_3"
  input: "discriminator/conv3dsn_3/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/clip_by_value_1"
  op: "Maximum"
  input: "discriminator/conv3dsn_3/clip_by_value_1/Minimum"
  input: "discriminator/conv3dsn_3/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/truediv_1"
  op: "RealDiv"
  input: "discriminator/conv3dsn_3/MatMul_1"
  input: "discriminator/conv3dsn_3/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/MatMul_2"
  op: "MatMul"
  input: "discriminator/conv3dsn_3/truediv"
  input: "discriminator/conv3dsn_3/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose_1/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_3/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose_1/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_3/transpose_1/Rank"
  input: "discriminator/conv3dsn_3/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose_1/Range"
  op: "Range"
  input: "discriminator/conv3dsn_3/transpose_1/Range/start"
  input: "discriminator/conv3dsn_3/transpose_1/Rank"
  input: "discriminator/conv3dsn_3/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose_1/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_3/transpose_1/sub"
  input: "discriminator/conv3dsn_3/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/transpose_1"
  op: "Transpose"
  input: "discriminator/conv3dsn_3/truediv_1"
  input: "discriminator/conv3dsn_3/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/MatMul_3"
  op: "MatMul"
  input: "discriminator/conv3dsn_3/MatMul_2"
  input: "discriminator/conv3dsn_3/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/strided_slice"
  op: "StridedSlice"
  input: "discriminator/conv3dsn_3/MatMul_3"
  input: "discriminator/conv3dsn_3/strided_slice/stack"
  input: "discriminator/conv3dsn_3/strided_slice/stack_1"
  input: "discriminator/conv3dsn_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/truediv_2"
  op: "RealDiv"
  input: "discriminator/conv3dsn_3/Reshape"
  input: "discriminator/conv3dsn_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Reshape_1"
  op: "Reshape"
  input: "discriminator/conv3dsn_3/truediv_2"
  input: "discriminator/conv3dsn_3/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Assign"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/u_sn"
  input: "discriminator/conv3dsn_3/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Assign_1"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/u_sn"
  input: "discriminator/conv3dsn_3/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Reshape_2/shape"
  op: "Const"
  input: "^discriminator/conv3dsn_3/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000`\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Reshape_2"
  op: "Reshape"
  input: "discriminator/conv3dsn_3/Reshape_1"
  input: "discriminator/conv3dsn_3/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/convolution"
  op: "Conv3D"
  input: "discriminator/lambda_63/MirrorPad"
  input: "discriminator/conv3dsn_3/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_2/conv3dsn_3/bias/read"
  input: "discriminator/conv3dsn_3/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_3/add"
  op: "Add"
  input: "discriminator/conv3dsn_3/convolution"
  input: "discriminator/conv3dsn_3/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\030\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Reshape"
  op: "Reshape"
  input: "Conv3DSN_5/conv3dsn_6/kernel/read"
  input: "discriminator/conv3dsn_6/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 648
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 648
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Variable/Assign"
  op: "Assign"
  input: "discriminator/conv3dsn_6/Variable"
  input: "discriminator/conv3dsn_6/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_6/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Variable/read"
  op: "Identity"
  input: "discriminator/conv3dsn_6/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_6/Variable"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_6/transpose/Rank"
  input: "discriminator/conv3dsn_6/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose/Range"
  op: "Range"
  input: "discriminator/conv3dsn_6/transpose/Range/start"
  input: "discriminator/conv3dsn_6/transpose/Rank"
  input: "discriminator/conv3dsn_6/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_6/transpose/sub"
  input: "discriminator/conv3dsn_6/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose"
  op: "Transpose"
  input: "discriminator/conv3dsn_6/Reshape"
  input: "discriminator/conv3dsn_6/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/MatMul"
  op: "MatMul"
  input: "Conv3DSN_5/conv3dsn_6/u_sn/read"
  input: "discriminator/conv3dsn_6/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/pow"
  op: "Pow"
  input: "discriminator/conv3dsn_6/MatMul"
  input: "discriminator/conv3dsn_6/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Sum"
  op: "Sum"
  input: "discriminator/conv3dsn_6/pow"
  input: "discriminator/conv3dsn_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/pow_1"
  op: "Pow"
  input: "discriminator/conv3dsn_6/Sum"
  input: "discriminator/conv3dsn_6/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/clip_by_value/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_6/pow_1"
  input: "discriminator/conv3dsn_6/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/clip_by_value"
  op: "Maximum"
  input: "discriminator/conv3dsn_6/clip_by_value/Minimum"
  input: "discriminator/conv3dsn_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/truediv"
  op: "RealDiv"
  input: "discriminator/conv3dsn_6/MatMul"
  input: "discriminator/conv3dsn_6/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/MatMul_1"
  op: "MatMul"
  input: "discriminator/conv3dsn_6/truediv"
  input: "discriminator/conv3dsn_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/pow_2"
  op: "Pow"
  input: "discriminator/conv3dsn_6/MatMul_1"
  input: "discriminator/conv3dsn_6/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Sum_1"
  op: "Sum"
  input: "discriminator/conv3dsn_6/pow_2"
  input: "discriminator/conv3dsn_6/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/pow_3"
  op: "Pow"
  input: "discriminator/conv3dsn_6/Sum_1"
  input: "discriminator/conv3dsn_6/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_6/pow_3"
  input: "discriminator/conv3dsn_6/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/clip_by_value_1"
  op: "Maximum"
  input: "discriminator/conv3dsn_6/clip_by_value_1/Minimum"
  input: "discriminator/conv3dsn_6/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/truediv_1"
  op: "RealDiv"
  input: "discriminator/conv3dsn_6/MatMul_1"
  input: "discriminator/conv3dsn_6/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/MatMul_2"
  op: "MatMul"
  input: "discriminator/conv3dsn_6/truediv"
  input: "discriminator/conv3dsn_6/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose_1/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_6/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose_1/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_6/transpose_1/Rank"
  input: "discriminator/conv3dsn_6/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose_1/Range"
  op: "Range"
  input: "discriminator/conv3dsn_6/transpose_1/Range/start"
  input: "discriminator/conv3dsn_6/transpose_1/Rank"
  input: "discriminator/conv3dsn_6/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose_1/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_6/transpose_1/sub"
  input: "discriminator/conv3dsn_6/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/transpose_1"
  op: "Transpose"
  input: "discriminator/conv3dsn_6/truediv_1"
  input: "discriminator/conv3dsn_6/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/MatMul_3"
  op: "MatMul"
  input: "discriminator/conv3dsn_6/MatMul_2"
  input: "discriminator/conv3dsn_6/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/strided_slice"
  op: "StridedSlice"
  input: "discriminator/conv3dsn_6/MatMul_3"
  input: "discriminator/conv3dsn_6/strided_slice/stack"
  input: "discriminator/conv3dsn_6/strided_slice/stack_1"
  input: "discriminator/conv3dsn_6/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/truediv_2"
  op: "RealDiv"
  input: "discriminator/conv3dsn_6/Reshape"
  input: "discriminator/conv3dsn_6/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Reshape_1"
  op: "Reshape"
  input: "discriminator/conv3dsn_6/truediv_2"
  input: "discriminator/conv3dsn_6/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Assign"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/u_sn"
  input: "discriminator/conv3dsn_6/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Assign_1"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/u_sn"
  input: "discriminator/conv3dsn_6/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Reshape_2/shape"
  op: "Const"
  input: "^discriminator/conv3dsn_6/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\030\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Reshape_2"
  op: "Reshape"
  input: "discriminator/conv3dsn_6/Reshape_1"
  input: "discriminator/conv3dsn_6/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/convolution"
  op: "Conv3D"
  input: "discriminator/lambda_72/MirrorPad"
  input: "discriminator/conv3dsn_6/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_5/conv3dsn_6/bias/read"
  input: "discriminator/conv3dsn_6/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_6/add"
  op: "Add"
  input: "discriminator/conv3dsn_6/convolution"
  input: "discriminator/conv3dsn_6/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/elu_20/Elu"
  op: "Elu"
  input: "discriminator/conv3dsn_3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/elu_23/Elu"
  op: "Elu"
  input: "discriminator/conv3dsn_6/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/add_1/add"
  op: "Add"
  input: "discriminator/elu_23/Elu"
  input: "discriminator/elu_22/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_64/MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_64/MirrorPad"
  op: "MirrorPad"
  input: "discriminator/elu_20/Elu"
  input: "discriminator/lambda_64/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_5/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/MirrorPad_5"
  op: "MirrorPad"
  input: "discriminator/Placeholder_12"
  input: "discriminator/MirrorPad_5/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "SYMMETRIC"
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\300\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Reshape"
  op: "Reshape"
  input: "Conv3DSN_3/conv3dsn_4/kernel/read"
  input: "discriminator/conv3dsn_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\024\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/zeros"
  op: "Fill"
  input: "discriminator/conv3dsn_4/zeros/shape_as_tensor"
  input: "discriminator/conv3dsn_4/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 5184
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Variable/Assign"
  op: "Assign"
  input: "discriminator/conv3dsn_4/Variable"
  input: "discriminator/conv3dsn_4/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_4/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Variable/read"
  op: "Identity"
  input: "discriminator/conv3dsn_4/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_4/Variable"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_4/transpose/Rank"
  input: "discriminator/conv3dsn_4/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose/Range"
  op: "Range"
  input: "discriminator/conv3dsn_4/transpose/Range/start"
  input: "discriminator/conv3dsn_4/transpose/Rank"
  input: "discriminator/conv3dsn_4/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_4/transpose/sub"
  input: "discriminator/conv3dsn_4/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose"
  op: "Transpose"
  input: "discriminator/conv3dsn_4/Reshape"
  input: "discriminator/conv3dsn_4/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/MatMul"
  op: "MatMul"
  input: "Conv3DSN_3/conv3dsn_4/u_sn/read"
  input: "discriminator/conv3dsn_4/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/pow"
  op: "Pow"
  input: "discriminator/conv3dsn_4/MatMul"
  input: "discriminator/conv3dsn_4/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Sum"
  op: "Sum"
  input: "discriminator/conv3dsn_4/pow"
  input: "discriminator/conv3dsn_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/pow_1"
  op: "Pow"
  input: "discriminator/conv3dsn_4/Sum"
  input: "discriminator/conv3dsn_4/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/clip_by_value/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_4/pow_1"
  input: "discriminator/conv3dsn_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/clip_by_value"
  op: "Maximum"
  input: "discriminator/conv3dsn_4/clip_by_value/Minimum"
  input: "discriminator/conv3dsn_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/truediv"
  op: "RealDiv"
  input: "discriminator/conv3dsn_4/MatMul"
  input: "discriminator/conv3dsn_4/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/MatMul_1"
  op: "MatMul"
  input: "discriminator/conv3dsn_4/truediv"
  input: "discriminator/conv3dsn_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/pow_2"
  op: "Pow"
  input: "discriminator/conv3dsn_4/MatMul_1"
  input: "discriminator/conv3dsn_4/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Sum_1"
  op: "Sum"
  input: "discriminator/conv3dsn_4/pow_2"
  input: "discriminator/conv3dsn_4/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/pow_3"
  op: "Pow"
  input: "discriminator/conv3dsn_4/Sum_1"
  input: "discriminator/conv3dsn_4/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "discriminator/conv3dsn_4/pow_3"
  input: "discriminator/conv3dsn_4/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/clip_by_value_1"
  op: "Maximum"
  input: "discriminator/conv3dsn_4/clip_by_value_1/Minimum"
  input: "discriminator/conv3dsn_4/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/truediv_1"
  op: "RealDiv"
  input: "discriminator/conv3dsn_4/MatMul_1"
  input: "discriminator/conv3dsn_4/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/MatMul_2"
  op: "MatMul"
  input: "discriminator/conv3dsn_4/truediv"
  input: "discriminator/conv3dsn_4/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose_1/Rank"
  op: "Rank"
  input: "discriminator/conv3dsn_4/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose_1/sub"
  op: "Sub"
  input: "discriminator/conv3dsn_4/transpose_1/Rank"
  input: "discriminator/conv3dsn_4/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose_1/Range"
  op: "Range"
  input: "discriminator/conv3dsn_4/transpose_1/Range/start"
  input: "discriminator/conv3dsn_4/transpose_1/Rank"
  input: "discriminator/conv3dsn_4/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose_1/sub_1"
  op: "Sub"
  input: "discriminator/conv3dsn_4/transpose_1/sub"
  input: "discriminator/conv3dsn_4/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/transpose_1"
  op: "Transpose"
  input: "discriminator/conv3dsn_4/truediv_1"
  input: "discriminator/conv3dsn_4/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/MatMul_3"
  op: "MatMul"
  input: "discriminator/conv3dsn_4/MatMul_2"
  input: "discriminator/conv3dsn_4/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/strided_slice"
  op: "StridedSlice"
  input: "discriminator/conv3dsn_4/MatMul_3"
  input: "discriminator/conv3dsn_4/strided_slice/stack"
  input: "discriminator/conv3dsn_4/strided_slice/stack_1"
  input: "discriminator/conv3dsn_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/truediv_2"
  op: "RealDiv"
  input: "discriminator/conv3dsn_4/Reshape"
  input: "discriminator/conv3dsn_4/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Reshape_1"
  op: "Reshape"
  input: "discriminator/conv3dsn_4/truediv_2"
  input: "discriminator/conv3dsn_4/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Assign"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/u_sn"
  input: "discriminator/conv3dsn_4/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Assign_1"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/u_sn"
  input: "discriminator/conv3dsn_4/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Reshape_2/shape"
  op: "Const"
  input: "^discriminator/conv3dsn_4/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\300\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Reshape_2"
  op: "Reshape"
  input: "discriminator/conv3dsn_4/Reshape_1"
  input: "discriminator/conv3dsn_4/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/convolution"
  op: "Conv3D"
  input: "discriminator/lambda_64/MirrorPad"
  input: "discriminator/conv3dsn_4/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/Reshape_3"
  op: "Reshape"
  input: "Conv3DSN_3/conv3dsn_4/bias/read"
  input: "discriminator/conv3dsn_4/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/conv3dsn_4/add"
  op: "Add"
  input: "discriminator/conv3dsn_4/convolution"
  input: "discriminator/conv3dsn_4/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/average_pooling3d_3/AvgPool3D"
  op: "AvgPool3D"
  input: "discriminator/add_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/elu_21/Elu"
  op: "Elu"
  input: "discriminator/conv3dsn_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/flatten_2/Shape"
  op: "Shape"
  input: "discriminator/average_pooling3d_3/AvgPool3D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/flatten_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/flatten_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/flatten_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/flatten_2/strided_slice"
  op: "StridedSlice"
  input: "discriminator/flatten_2/Shape"
  input: "discriminator/flatten_2/strided_slice/stack"
  input: "discriminator/flatten_2/strided_slice/stack_1"
  input: "discriminator/flatten_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/flatten_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/flatten_2/Prod"
  op: "Prod"
  input: "discriminator/flatten_2/strided_slice"
  input: "discriminator/flatten_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/flatten_2/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator/flatten_2/stack"
  op: "Pack"
  input: "discriminator/flatten_2/stack/0"
  input: "discriminator/flatten_2/Prod"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/flatten_2/Reshape"
  op: "Reshape"
  input: "discriminator/average_pooling3d_3/AvgPool3D"
  input: "discriminator/flatten_2/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice/stack_2"
  op: "Pack"
  input: "discriminator/lambda_65/strided_slice/stack_2/values_0"
  input: "discriminator/lambda_65/strided_slice/stack_2/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice"
  op: "StridedSlice"
  input: "discriminator/elu_21/Elu"
  input: "discriminator/lambda_65/strided_slice/stack"
  input: "discriminator/lambda_65/strided_slice/stack_2"
  input: "discriminator/lambda_65/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/lambda_65/add"
  op: "Add"
  input: "discriminator/lambda_65/strided_slice"
  input: "discriminator/average_pooling3d_1/AvgPool3D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice_1/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice_1/stack_1/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice_1/stack_1"
  op: "Pack"
  input: "discriminator/lambda_65/strided_slice_1/stack_1/values_0"
  input: "discriminator/lambda_65/strided_slice_1/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice_1/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/strided_slice_1"
  op: "StridedSlice"
  input: "discriminator/elu_21/Elu"
  input: "discriminator/lambda_65/strided_slice_1/stack_1"
  input: "discriminator/lambda_65/strided_slice_1/stack_2"
  input: "discriminator/lambda_65/strided_slice_1/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/lambda_65/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator/lambda_65/concat"
  op: "ConcatV2"
  input: "discriminator/lambda_65/add"
  input: "discriminator/lambda_65/strided_slice_1"
  input: "discriminator/lambda_65/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "discriminator/Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_2/stack_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_2/stack_2/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_2/stack_2"
  op: "Pack"
  input: "discriminator/strided_slice_2/stack_2/values_0"
  input: "discriminator/strided_slice_2/stack_2/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/strided_slice_2/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_2"
  op: "StridedSlice"
  input: "discriminator/Placeholder_13"
  input: "discriminator/strided_slice_2/stack"
  input: "discriminator/strided_slice_2/stack_2"
  input: "discriminator/strided_slice_2/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/add_2"
  op: "Add"
  input: "discriminator/strided_slice_2"
  input: "discriminator/Placeholder_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_3/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_3/stack_1/values_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_3/stack_1"
  op: "Pack"
  input: "discriminator/strided_slice_3/stack_1/values_0"
  input: "discriminator/strided_slice_3/stack_1/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_3/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/strided_slice_3"
  op: "StridedSlice"
  input: "discriminator/Placeholder_13"
  input: "discriminator/strided_slice_3/stack_1"
  input: "discriminator/strided_slice_3/stack_2"
  input: "discriminator/strided_slice_3/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator/concat_1"
  op: "ConcatV2"
  input: "discriminator/add_2"
  input: "discriminator/strided_slice_3"
  input: "discriminator/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Reshape"
  op: "Reshape"
  input: "dense_sn_1/kernel/read"
  input: "discriminator/dense_sn_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\030\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/zeros"
  op: "Fill"
  input: "discriminator/dense_sn_1/zeros/shape_as_tensor"
  input: "discriminator/dense_sn_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1572864
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Variable/Assign"
  op: "Assign"
  input: "discriminator/dense_sn_1/Variable"
  input: "discriminator/dense_sn_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/dense_sn_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Variable/read"
  op: "Identity"
  input: "discriminator/dense_sn_1/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/dense_sn_1/Variable"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose/Rank"
  op: "Rank"
  input: "discriminator/dense_sn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose/sub"
  op: "Sub"
  input: "discriminator/dense_sn_1/transpose/Rank"
  input: "discriminator/dense_sn_1/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose/Range"
  op: "Range"
  input: "discriminator/dense_sn_1/transpose/Range/start"
  input: "discriminator/dense_sn_1/transpose/Rank"
  input: "discriminator/dense_sn_1/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose/sub_1"
  op: "Sub"
  input: "discriminator/dense_sn_1/transpose/sub"
  input: "discriminator/dense_sn_1/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose"
  op: "Transpose"
  input: "discriminator/dense_sn_1/Reshape"
  input: "discriminator/dense_sn_1/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/MatMul"
  op: "MatMul"
  input: "dense_sn_1/u_sn/read"
  input: "discriminator/dense_sn_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_1/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/pow"
  op: "Pow"
  input: "discriminator/dense_sn_1/MatMul"
  input: "discriminator/dense_sn_1/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Sum"
  op: "Sum"
  input: "discriminator/dense_sn_1/pow"
  input: "discriminator/dense_sn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_1/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/pow_1"
  op: "Pow"
  input: "discriminator/dense_sn_1/Sum"
  input: "discriminator/dense_sn_1/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "discriminator/dense_sn_1/pow_1"
  input: "discriminator/dense_sn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/clip_by_value"
  op: "Maximum"
  input: "discriminator/dense_sn_1/clip_by_value/Minimum"
  input: "discriminator/dense_sn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/truediv"
  op: "RealDiv"
  input: "discriminator/dense_sn_1/MatMul"
  input: "discriminator/dense_sn_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/MatMul_1"
  op: "MatMul"
  input: "discriminator/dense_sn_1/truediv"
  input: "discriminator/dense_sn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_1/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/pow_2"
  op: "Pow"
  input: "discriminator/dense_sn_1/MatMul_1"
  input: "discriminator/dense_sn_1/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Sum_1"
  op: "Sum"
  input: "discriminator/dense_sn_1/pow_2"
  input: "discriminator/dense_sn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_1/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/pow_3"
  op: "Pow"
  input: "discriminator/dense_sn_1/Sum_1"
  input: "discriminator/dense_sn_1/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "discriminator/dense_sn_1/pow_3"
  input: "discriminator/dense_sn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/clip_by_value_1"
  op: "Maximum"
  input: "discriminator/dense_sn_1/clip_by_value_1/Minimum"
  input: "discriminator/dense_sn_1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/truediv_1"
  op: "RealDiv"
  input: "discriminator/dense_sn_1/MatMul_1"
  input: "discriminator/dense_sn_1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/MatMul_2"
  op: "MatMul"
  input: "discriminator/dense_sn_1/truediv"
  input: "discriminator/dense_sn_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose_1/Rank"
  op: "Rank"
  input: "discriminator/dense_sn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose_1/sub"
  op: "Sub"
  input: "discriminator/dense_sn_1/transpose_1/Rank"
  input: "discriminator/dense_sn_1/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose_1/Range"
  op: "Range"
  input: "discriminator/dense_sn_1/transpose_1/Range/start"
  input: "discriminator/dense_sn_1/transpose_1/Rank"
  input: "discriminator/dense_sn_1/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose_1/sub_1"
  op: "Sub"
  input: "discriminator/dense_sn_1/transpose_1/sub"
  input: "discriminator/dense_sn_1/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/transpose_1"
  op: "Transpose"
  input: "discriminator/dense_sn_1/truediv_1"
  input: "discriminator/dense_sn_1/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/MatMul_3"
  op: "MatMul"
  input: "discriminator/dense_sn_1/MatMul_2"
  input: "discriminator/dense_sn_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/strided_slice"
  op: "StridedSlice"
  input: "discriminator/dense_sn_1/MatMul_3"
  input: "discriminator/dense_sn_1/strided_slice/stack"
  input: "discriminator/dense_sn_1/strided_slice/stack_1"
  input: "discriminator/dense_sn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator/dense_sn_1/truediv_2"
  op: "RealDiv"
  input: "discriminator/dense_sn_1/Reshape"
  input: "discriminator/dense_sn_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\030\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Reshape_1"
  op: "Reshape"
  input: "discriminator/dense_sn_1/truediv_2"
  input: "discriminator/dense_sn_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Assign"
  op: "Assign"
  input: "dense_sn_1/u_sn"
  input: "discriminator/dense_sn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Assign_1"
  op: "Assign"
  input: "dense_sn_1/u_sn"
  input: "discriminator/dense_sn_1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Reshape_2/shape"
  op: "Const"
  input: "^discriminator/dense_sn_1/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\030\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_1/Reshape_2"
  op: "Reshape"
  input: "discriminator/dense_sn_1/Reshape_1"
  input: "discriminator/dense_sn_1/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_1/MatMul_4"
  op: "MatMul"
  input: "discriminator/flatten_2/Reshape"
  input: "discriminator/dense_sn_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_1/BiasAdd"
  op: "BiasAdd"
  input: "discriminator/dense_sn_1/MatMul_4"
  input: "dense_sn_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator/average_pooling3d_2/AvgPool3D"
  op: "AvgPool3D"
  input: "discriminator/lambda_65/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NDHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "discriminator/elu_24/Elu"
  op: "Elu"
  input: "discriminator/dense_sn_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/flatten_1/Shape"
  op: "Shape"
  input: "discriminator/average_pooling3d_2/AvgPool3D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/flatten_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/flatten_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/flatten_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/flatten_1/strided_slice"
  op: "StridedSlice"
  input: "discriminator/flatten_1/Shape"
  input: "discriminator/flatten_1/strided_slice/stack"
  input: "discriminator/flatten_1/strided_slice/stack_1"
  input: "discriminator/flatten_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/flatten_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/flatten_1/Prod"
  op: "Prod"
  input: "discriminator/flatten_1/strided_slice"
  input: "discriminator/flatten_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/flatten_1/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "discriminator/flatten_1/stack"
  op: "Pack"
  input: "discriminator/flatten_1/stack/0"
  input: "discriminator/flatten_1/Prod"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "discriminator/flatten_1/Reshape"
  op: "Reshape"
  input: "discriminator/average_pooling3d_2/AvgPool3D"
  input: "discriminator/flatten_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Reshape"
  op: "Reshape"
  input: "dense_sn_2/kernel/read"
  input: "discriminator/dense_sn_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Variable/Assign"
  op: "Assign"
  input: "discriminator/dense_sn_2/Variable"
  input: "discriminator/dense_sn_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/dense_sn_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Variable/read"
  op: "Identity"
  input: "discriminator/dense_sn_2/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/dense_sn_2/Variable"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose/Rank"
  op: "Rank"
  input: "discriminator/dense_sn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose/sub"
  op: "Sub"
  input: "discriminator/dense_sn_2/transpose/Rank"
  input: "discriminator/dense_sn_2/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose/Range"
  op: "Range"
  input: "discriminator/dense_sn_2/transpose/Range/start"
  input: "discriminator/dense_sn_2/transpose/Rank"
  input: "discriminator/dense_sn_2/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose/sub_1"
  op: "Sub"
  input: "discriminator/dense_sn_2/transpose/sub"
  input: "discriminator/dense_sn_2/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose"
  op: "Transpose"
  input: "discriminator/dense_sn_2/Reshape"
  input: "discriminator/dense_sn_2/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/MatMul"
  op: "MatMul"
  input: "dense_sn_2/u_sn/read"
  input: "discriminator/dense_sn_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_2/pow/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/pow"
  op: "Pow"
  input: "discriminator/dense_sn_2/MatMul"
  input: "discriminator/dense_sn_2/pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Sum"
  op: "Sum"
  input: "discriminator/dense_sn_2/pow"
  input: "discriminator/dense_sn_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_2/pow_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/pow_1"
  op: "Pow"
  input: "discriminator/dense_sn_2/Sum"
  input: "discriminator/dense_sn_2/pow_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "discriminator/dense_sn_2/pow_1"
  input: "discriminator/dense_sn_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/clip_by_value"
  op: "Maximum"
  input: "discriminator/dense_sn_2/clip_by_value/Minimum"
  input: "discriminator/dense_sn_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/truediv"
  op: "RealDiv"
  input: "discriminator/dense_sn_2/MatMul"
  input: "discriminator/dense_sn_2/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/MatMul_1"
  op: "MatMul"
  input: "discriminator/dense_sn_2/truediv"
  input: "discriminator/dense_sn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_2/pow_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/pow_2"
  op: "Pow"
  input: "discriminator/dense_sn_2/MatMul_1"
  input: "discriminator/dense_sn_2/pow_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Sum_1"
  op: "Sum"
  input: "discriminator/dense_sn_2/pow_2"
  input: "discriminator/dense_sn_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_2/pow_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/pow_3"
  op: "Pow"
  input: "discriminator/dense_sn_2/Sum_1"
  input: "discriminator/dense_sn_2/pow_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "discriminator/dense_sn_2/pow_3"
  input: "discriminator/dense_sn_2/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/clip_by_value_1"
  op: "Maximum"
  input: "discriminator/dense_sn_2/clip_by_value_1/Minimum"
  input: "discriminator/dense_sn_2/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/truediv_1"
  op: "RealDiv"
  input: "discriminator/dense_sn_2/MatMul_1"
  input: "discriminator/dense_sn_2/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/MatMul_2"
  op: "MatMul"
  input: "discriminator/dense_sn_2/truediv"
  input: "discriminator/dense_sn_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose_1/Rank"
  op: "Rank"
  input: "discriminator/dense_sn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose_1/sub"
  op: "Sub"
  input: "discriminator/dense_sn_2/transpose_1/Rank"
  input: "discriminator/dense_sn_2/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose_1/Range"
  op: "Range"
  input: "discriminator/dense_sn_2/transpose_1/Range/start"
  input: "discriminator/dense_sn_2/transpose_1/Rank"
  input: "discriminator/dense_sn_2/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose_1/sub_1"
  op: "Sub"
  input: "discriminator/dense_sn_2/transpose_1/sub"
  input: "discriminator/dense_sn_2/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/transpose_1"
  op: "Transpose"
  input: "discriminator/dense_sn_2/truediv_1"
  input: "discriminator/dense_sn_2/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/MatMul_3"
  op: "MatMul"
  input: "discriminator/dense_sn_2/MatMul_2"
  input: "discriminator/dense_sn_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/strided_slice"
  op: "StridedSlice"
  input: "discriminator/dense_sn_2/MatMul_3"
  input: "discriminator/dense_sn_2/strided_slice/stack"
  input: "discriminator/dense_sn_2/strided_slice/stack_1"
  input: "discriminator/dense_sn_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 3
    }
  }
}
node {
  name: "discriminator/dense_sn_2/truediv_2"
  op: "RealDiv"
  input: "discriminator/dense_sn_2/Reshape"
  input: "discriminator/dense_sn_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Reshape_1"
  op: "Reshape"
  input: "discriminator/dense_sn_2/truediv_2"
  input: "discriminator/dense_sn_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Assign"
  op: "Assign"
  input: "dense_sn_2/u_sn"
  input: "discriminator/dense_sn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Assign_1"
  op: "Assign"
  input: "dense_sn_2/u_sn"
  input: "discriminator/dense_sn_2/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Reshape_2/shape"
  op: "Const"
  input: "^discriminator/dense_sn_2/Assign_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/dense_sn_2/Reshape_2"
  op: "Reshape"
  input: "discriminator/dense_sn_2/Reshape_1"
  input: "discriminator/dense_sn_2/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator/dense_sn_2/MatMul_4"
  op: "MatMul"
  input: "discriminator/elu_24/Elu"
  input: "discriminator/dense_sn_2/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator/dense_sn_2/BiasAdd"
  op: "BiasAdd"
  input: "discriminator/dense_sn_2/MatMul_4"
  input: "dense_sn_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator/concatenate_7/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator/concatenate_7/concat"
  op: "ConcatV2"
  input: "discriminator/flatten_1/Reshape"
  input: "discriminator/dense_sn_2/BiasAdd"
  input: "discriminator/concatenate_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/iterations/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam/iterations"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam/iterations/Assign"
  op: "Assign"
  input: "Adam/iterations"
  input: "Adam/iterations/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/iterations/read"
  op: "Identity"
  input: "Adam/iterations"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
}
node {
  name: "Adam/lr/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.9999999242136255e-05
      }
    }
  }
}
node {
  name: "Adam/lr"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam/lr/Assign"
  op: "Assign"
  input: "Adam/lr"
  input: "Adam/lr/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/lr"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/lr/read"
  op: "Identity"
  input: "Adam/lr"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/lr"
      }
    }
  }
}
node {
  name: "Adam/beta_1/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam/beta_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam/beta_1/Assign"
  op: "Assign"
  input: "Adam/beta_1"
  input: "Adam/beta_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/beta_1/read"
  op: "Identity"
  input: "Adam/beta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
}
node {
  name: "Adam/beta_2/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam/beta_2/Assign"
  op: "Assign"
  input: "Adam/beta_2"
  input: "Adam/beta_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/beta_2/read"
  op: "Identity"
  input: "Adam/beta_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
}
node {
  name: "Adam/decay/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam/decay"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam/decay/Assign"
  op: "Assign"
  input: "Adam/decay"
  input: "Adam/decay/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/decay/read"
  op: "Identity"
  input: "Adam/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "discriminator/conv3dsn_1/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_1/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "discriminator/conv3dsn_2/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_2/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "discriminator/conv3dsn_5/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_5/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "discriminator/conv3dsn_3/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_3/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "discriminator/conv3dsn_6/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_6/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "discriminator/conv3dsn_4/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_4/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "discriminator/dense_sn_1/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/dense_sn_1/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "discriminator/dense_sn_2/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/dense_sn_2/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Adam/iterations"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "Adam/lr"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/lr"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "Adam/beta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Adam/beta_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Adam/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Adam/beta_1/Assign"
  input: "^Adam/beta_2/Assign"
  input: "^Adam/decay/Assign"
  input: "^Adam/iterations/Assign"
  input: "^Adam/lr/Assign"
  input: "^discriminator/conv3dsn_1/Variable/Assign"
  input: "^discriminator/conv3dsn_2/Variable/Assign"
  input: "^discriminator/conv3dsn_3/Variable/Assign"
  input: "^discriminator/conv3dsn_4/Variable/Assign"
  input: "^discriminator/conv3dsn_5/Variable/Assign"
  input: "^discriminator/conv3dsn_6/Variable/Assign"
  input: "^discriminator/dense_sn_1/Variable/Assign"
  input: "^discriminator/dense_sn_2/Variable/Assign"
}
node {
  name: "Adam_1/iterations/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam_1/iterations"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/iterations/Assign"
  op: "Assign"
  input: "Adam_1/iterations"
  input: "Adam_1/iterations/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/iterations/read"
  op: "Identity"
  input: "Adam_1/iterations"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
}
node {
  name: "Adam_1/lr/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.9999999242136255e-05
      }
    }
  }
}
node {
  name: "Adam_1/lr"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/lr/Assign"
  op: "Assign"
  input: "Adam_1/lr"
  input: "Adam_1/lr/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/lr"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/lr/read"
  op: "Identity"
  input: "Adam_1/lr"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/lr"
      }
    }
  }
}
node {
  name: "Adam_1/beta_1/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam_1/beta_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/beta_1/Assign"
  op: "Assign"
  input: "Adam_1/beta_1"
  input: "Adam_1/beta_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/beta_1/read"
  op: "Identity"
  input: "Adam_1/beta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
}
node {
  name: "Adam_1/beta_2/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_1/beta_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/beta_2/Assign"
  op: "Assign"
  input: "Adam_1/beta_2"
  input: "Adam_1/beta_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/beta_2/read"
  op: "Identity"
  input: "Adam_1/beta_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
}
node {
  name: "Adam_1/decay/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam_1/decay"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/decay/Assign"
  op: "Assign"
  input: "Adam_1/decay"
  input: "Adam_1/decay/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/decay/read"
  op: "Identity"
  input: "Adam_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
}
node {
  name: "discriminator_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "vggFeats_128_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "lambda_59_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "discriminator_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "vggFeats_128_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "lambda_59_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "loss/discriminator_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/discriminator_loss/Mean"
  op: "Mean"
  input: "discriminator/concatenate_7/concat"
  input: "loss/discriminator_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/discriminator_loss/Neg"
  op: "Neg"
  input: "loss/discriminator_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/discriminator_loss/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/discriminator_loss/mul"
  op: "Mul"
  input: "loss/discriminator_loss/Neg"
  input: "loss/discriminator_loss/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/discriminator_loss/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/discriminator_loss/Mean_1"
  op: "Mean"
  input: "loss/discriminator_loss/mul"
  input: "loss/discriminator_loss/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/discriminator_loss/mul_1"
  op: "Mul"
  input: "loss/discriminator_loss/Mean_1"
  input: "discriminator_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/discriminator_loss/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/discriminator_loss/NotEqual"
  op: "NotEqual"
  input: "discriminator_sample_weights"
  input: "loss/discriminator_loss/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/discriminator_loss/Cast"
  op: "Cast"
  input: "loss/discriminator_loss/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/discriminator_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/discriminator_loss/Mean_2"
  op: "Mean"
  input: "loss/discriminator_loss/Cast"
  input: "loss/discriminator_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/discriminator_loss/truediv"
  op: "RealDiv"
  input: "loss/discriminator_loss/mul_1"
  input: "loss/discriminator_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/discriminator_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/discriminator_loss/Mean_3"
  op: "Mean"
  input: "loss/discriminator_loss/truediv"
  input: "loss/discriminator_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/discriminator_loss/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/sub"
  op: "Sub"
  input: "vggFeats_128_target"
  input: "vggFeats_128/concatenate_8/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Abs"
  op: "Abs"
  input: "loss/vggFeats_128_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Mean"
  op: "Mean"
  input: "loss/vggFeats_128_loss/Abs"
  input: "loss/vggFeats_128_loss/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/ones_like/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/ones_like"
  op: "Fill"
  input: "loss/vggFeats_128_loss/ones_like/Shape"
  input: "loss/vggFeats_128_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 11
          }
        }
        tensor_content: "\254\305\'7\027\267Q8\027\267\3218o\022\003:o\022\203:\n\327\243;\n\327#<\315\314L=\315\314\314=\000\000\000?\000\000\200?"
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/strided_slice/stack_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/strided_slice/stack_1"
  op: "Pack"
  input: "loss/vggFeats_128_loss/strided_slice/stack_1/values_0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/strided_slice/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/strided_slice"
  op: "StridedSlice"
  input: "loss/vggFeats_128_loss/ones_like"
  input: "loss/vggFeats_128_loss/strided_slice/stack_1"
  input: "loss/vggFeats_128_loss/strided_slice/stack_2"
  input: "loss/vggFeats_128_loss/strided_slice/stack_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/concat"
  op: "ConcatV2"
  input: "loss/vggFeats_128_loss/Const"
  input: "loss/vggFeats_128_loss/strided_slice"
  input: "loss/vggFeats_128_loss/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/mul"
  op: "Mul"
  input: "loss/vggFeats_128_loss/Mean"
  input: "loss/vggFeats_128_loss/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Mean_1"
  op: "Mean"
  input: "loss/vggFeats_128_loss/mul"
  input: "loss/vggFeats_128_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 100.0
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/mul_1"
  op: "Mul"
  input: "loss/vggFeats_128_loss/mul_1/x"
  input: "loss/vggFeats_128_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Mean_2/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Mean_2"
  op: "Mean"
  input: "loss/vggFeats_128_loss/mul_1"
  input: "loss/vggFeats_128_loss/Mean_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/mul_2"
  op: "Mul"
  input: "loss/vggFeats_128_loss/Mean_2"
  input: "vggFeats_128_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/NotEqual"
  op: "NotEqual"
  input: "vggFeats_128_sample_weights"
  input: "loss/vggFeats_128_loss/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Cast"
  op: "Cast"
  input: "loss/vggFeats_128_loss/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Mean_3"
  op: "Mean"
  input: "loss/vggFeats_128_loss/Cast"
  input: "loss/vggFeats_128_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/truediv"
  op: "RealDiv"
  input: "loss/vggFeats_128_loss/mul_2"
  input: "loss/vggFeats_128_loss/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/vggFeats_128_loss/Mean_4"
  op: "Mean"
  input: "loss/vggFeats_128_loss/truediv"
  input: "loss/vggFeats_128_loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul_1"
  op: "Mul"
  input: "loss/mul_1/x"
  input: "loss/vggFeats_128_loss/Mean_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add"
  op: "Add"
  input: "loss/mul"
  input: "loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Reshape"
  op: "Reshape"
  input: "lambda_59_target"
  input: "loss/lambda_59_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Reshape_1"
  op: "Reshape"
  input: "gModel_0/maskedBypass0/lambda_59/add"
  input: "loss/lambda_59_loss/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/Reshape"
  input: "loss/lambda_59_loss/strided_slice/stack"
  input: "loss/lambda_59_loss/strided_slice/stack_1"
  input: "loss/lambda_59_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_1"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/Reshape"
  input: "loss/lambda_59_loss/strided_slice_1/stack"
  input: "loss/lambda_59_loss/strided_slice_1/stack_1"
  input: "loss/lambda_59_loss/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_2"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/strided_slice_1"
  input: "loss/lambda_59_loss/strided_slice_2/stack"
  input: "loss/lambda_59_loss/strided_slice_2/stack_1"
  input: "loss/lambda_59_loss/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_3"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/strided_slice_1"
  input: "loss/lambda_59_loss/strided_slice_3/stack"
  input: "loss/lambda_59_loss/strided_slice_3/stack_1"
  input: "loss/lambda_59_loss/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/lambda_59_loss/stack"
  op: "Pack"
  input: "loss/lambda_59_loss/strided_slice_3"
  input: "loss/lambda_59_loss/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/range"
  op: "Range"
  input: "loss/lambda_59_loss/dense_image_warp/range/start"
  input: "loss/lambda_59_loss/dense_image_warp/range/limit"
  input: "loss/lambda_59_loss/dense_image_warp/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/range_1"
  op: "Range"
  input: "loss/lambda_59_loss/dense_image_warp/range_1/start"
  input: "loss/lambda_59_loss/dense_image_warp/range_1/limit"
  input: "loss/lambda_59_loss/dense_image_warp/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/range"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_1"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/range_1"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_2"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_3"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Size_1"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/Less"
  op: "Less"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/mul"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/packed"
  op: "Pack"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Size_1"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones"
  op: "Fill"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/packed"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_2"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/meshgrid/mul_1"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/Reshape_3"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/stack"
  op: "Pack"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/mul_1"
  input: "loss/lambda_59_loss/dense_image_warp/meshgrid/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/Cast"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp/stack"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/ExpandDims"
  op: "ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp/Cast"
  input: "loss/lambda_59_loss/dense_image_warp/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp/ExpandDims"
  input: "loss/lambda_59_loss/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/sub"
  input: "loss/lambda_59_loss/dense_image_warp/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/unstack"
  op: "Unpack"
  input: "loss/lambda_59_loss/dense_image_warp/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 126
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Cast"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Floor"
  op: "Floor"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Maximum"
  op: "Maximum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Const"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Minimum"
  op: "Minimum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Maximum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Cast_1"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Cast_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/unstack"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Maximum_1"
  op: "Maximum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Const_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Minimum_1"
  op: "Minimum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Maximum_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/ExpandDims"
  op: "ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Minimum_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 126
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Cast"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Floor"
  op: "Floor"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Maximum"
  op: "Maximum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Const"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Minimum"
  op: "Minimum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Maximum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Cast_1"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Cast_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/unstack:1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Maximum_1"
  op: "Maximum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Const_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Minimum_1"
  op: "Minimum"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Maximum_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/ExpandDims"
  op: "ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Minimum_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\010\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/range"
  op: "Range"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/range/start"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/range/limit"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/range"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/mul_1"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape_1"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/mul_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Cast_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/GatherV2"
  op: "GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/add_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/Cast_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/GatherV2"
  op: "GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/add_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/GatherV2"
  op: "GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/add_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/GatherV2"
  op: "GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/add_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_right/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-top_left/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/sub_1"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_right/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/mul_1"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-1/ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/mul_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/gather-bottom_left/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/sub_2"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/add_1"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/mul_2"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/dim-0/ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/add_2"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/mul_2"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp/Reshape_1"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp/interpolate_bilinear/interpolate/add_2"
  input: "loss/lambda_59_loss/dense_image_warp/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_4"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/strided_slice_1"
  input: "loss/lambda_59_loss/strided_slice_4/stack"
  input: "loss/lambda_59_loss/strided_slice_4/stack_1"
  input: "loss/lambda_59_loss/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_5"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/strided_slice_1"
  input: "loss/lambda_59_loss/strided_slice_5/stack"
  input: "loss/lambda_59_loss/strided_slice_5/stack_1"
  input: "loss/lambda_59_loss/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/lambda_59_loss/stack_1"
  op: "Pack"
  input: "loss/lambda_59_loss/strided_slice_5"
  input: "loss/lambda_59_loss/strided_slice_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 3
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/range"
  op: "Range"
  input: "loss/lambda_59_loss/dense_image_warp_1/range/start"
  input: "loss/lambda_59_loss/dense_image_warp_1/range/limit"
  input: "loss/lambda_59_loss/dense_image_warp_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/range_1/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/range_1"
  op: "Range"
  input: "loss/lambda_59_loss/dense_image_warp_1/range_1/start"
  input: "loss/lambda_59_loss/dense_image_warp_1/range_1/limit"
  input: "loss/lambda_59_loss/dense_image_warp_1/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/range"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_1"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/range_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Size_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_2"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_3"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Size_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/Less"
  op: "Less"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/packed"
  op: "Pack"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Size_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Size"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones"
  op: "Fill"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/packed"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_2"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/mul_1"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/Reshape_3"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/ones"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/stack"
  op: "Pack"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/mul_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/meshgrid/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/Cast"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp_1/stack"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/ExpandDims"
  op: "ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp_1/Cast"
  input: "loss/lambda_59_loss/dense_image_warp_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp_1/ExpandDims"
  input: "loss/lambda_59_loss/stack_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/sub"
  input: "loss/lambda_59_loss/dense_image_warp_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/unstack"
  op: "Unpack"
  input: "loss/lambda_59_loss/dense_image_warp_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 126
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Cast"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Floor"
  op: "Floor"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Maximum"
  op: "Maximum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Const"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Minimum"
  op: "Minimum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Maximum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Cast_1"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Cast_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/unstack"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Maximum_1"
  op: "Maximum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Const_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Minimum_1"
  op: "Minimum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Maximum_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/ExpandDims"
  op: "ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Minimum_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 126
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Cast"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Floor"
  op: "Floor"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/unstack:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Maximum"
  op: "Maximum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Const"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Minimum"
  op: "Minimum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Maximum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Cast_1"
  op: "Cast"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Cast_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/unstack:1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Maximum_1"
  op: "Maximum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Const_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Minimum_1"
  op: "Minimum"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Maximum_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/ExpandDims"
  op: "ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Minimum_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\010\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/strided_slice"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/range"
  op: "Range"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/range/start"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/range/limit"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/range"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/mul_1"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape_1"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/mul_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Cast_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/GatherV2"
  op: "GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/add_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/Cast_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/GatherV2"
  op: "GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/add_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/GatherV2"
  op: "GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/add_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/mul"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/GatherV2"
  op: "GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/add_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: " \000\000\000\000@\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/Reshape"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/GatherV2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_right/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/mul"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/add"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-top_left/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/sub_1"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_right/Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/mul_1"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-1/ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/add_1"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/mul_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/gather-bottom_left/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/sub_2"
  op: "Sub"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/add_1"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/mul_2"
  op: "Mul"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/dim-0/ExpandDims"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/add_2"
  op: "Add"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/mul_2"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: " \000\000\000\200\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/dense_image_warp_1/Reshape_1"
  op: "Reshape"
  input: "loss/lambda_59_loss/dense_image_warp_1/interpolate_bilinear/interpolate/add_2"
  input: "loss/lambda_59_loss/dense_image_warp_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_6"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/strided_slice"
  input: "loss/lambda_59_loss/strided_slice_6/stack"
  input: "loss/lambda_59_loss/strided_slice_6/stack_1"
  input: "loss/lambda_59_loss/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_7"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/dense_image_warp_1/Reshape_1"
  input: "loss/lambda_59_loss/strided_slice_7/stack"
  input: "loss/lambda_59_loss/strided_slice_7/stack_1"
  input: "loss/lambda_59_loss/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/lambda_59_loss/sub"
  op: "Sub"
  input: "loss/lambda_59_loss/strided_slice_6"
  input: "loss/lambda_59_loss/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Abs"
  op: "Abs"
  input: "loss/lambda_59_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Sum"
  op: "Sum"
  input: "loss/lambda_59_loss/Abs"
  input: "loss/lambda_59_loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/lambda_59_loss/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Less"
  op: "Less"
  input: "loss/lambda_59_loss/Sum"
  input: "loss/lambda_59_loss/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Squeeze"
  op: "Squeeze"
  input: "loss/lambda_59_loss/Less"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Cast"
  op: "Cast"
  input: "loss/lambda_59_loss/Squeeze"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/lambda_59_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/ExpandDims"
  op: "ExpandDims"
  input: "loss/lambda_59_loss/Cast"
  input: "loss/lambda_59_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_8"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/dense_image_warp/Reshape_1"
  input: "loss/lambda_59_loss/strided_slice_8/stack"
  input: "loss/lambda_59_loss/strided_slice_8/stack_1"
  input: "loss/lambda_59_loss/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/lambda_59_loss/Mul"
  op: "Mul"
  input: "loss/lambda_59_loss/strided_slice_8"
  input: "loss/lambda_59_loss/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/strided_slice_9"
  op: "StridedSlice"
  input: "loss/lambda_59_loss/Reshape_1"
  input: "loss/lambda_59_loss/strided_slice_9/stack"
  input: "loss/lambda_59_loss/strided_slice_9/stack_1"
  input: "loss/lambda_59_loss/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/lambda_59_loss/Mul_1"
  op: "Mul"
  input: "loss/lambda_59_loss/strided_slice_9"
  input: "loss/lambda_59_loss/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/sub_1"
  op: "Sub"
  input: "loss/lambda_59_loss/Mul"
  input: "loss/lambda_59_loss/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Abs_1"
  op: "Abs"
  input: "loss/lambda_59_loss/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Mean"
  op: "Mean"
  input: "loss/lambda_59_loss/Abs_1"
  input: "loss/lambda_59_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/lambda_59_loss/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/mul_2"
  op: "Mul"
  input: "loss/lambda_59_loss/mul_2/x"
  input: "loss/lambda_59_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Mean_1"
  op: "Mean"
  input: "loss/lambda_59_loss/mul_2"
  input: "loss/lambda_59_loss/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/lambda_59_loss/mul_3"
  op: "Mul"
  input: "loss/lambda_59_loss/Mean_1"
  input: "lambda_59_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/NotEqual"
  op: "NotEqual"
  input: "lambda_59_sample_weights"
  input: "loss/lambda_59_loss/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Cast_1"
  op: "Cast"
  input: "loss/lambda_59_loss/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/lambda_59_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Mean_2"
  op: "Mean"
  input: "loss/lambda_59_loss/Cast_1"
  input: "loss/lambda_59_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/lambda_59_loss/truediv"
  op: "RealDiv"
  input: "loss/lambda_59_loss/mul_3"
  input: "loss/lambda_59_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/lambda_59_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/lambda_59_loss/Mean_3"
  op: "Mean"
  input: "loss/lambda_59_loss/truediv"
  input: "loss/lambda_59_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul_2"
  op: "Mul"
  input: "loss/mul_2/x"
  input: "loss/lambda_59_loss/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/add_1"
  op: "Add"
  input: "loss/add"
  input: "loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concatenate_7_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "concatenate_7_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/strided_slice"
  op: "StridedSlice"
  input: "concatenate_7/concat"
  input: "loss_1/concatenate_7_loss/strided_slice/stack"
  input: "loss_1/concatenate_7_loss/strided_slice/stack_1"
  input: "loss_1/concatenate_7_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/strided_slice_1"
  op: "StridedSlice"
  input: "concatenate_7/concat"
  input: "loss_1/concatenate_7_loss/strided_slice_1/stack"
  input: "loss_1/concatenate_7_loss/strided_slice_1/stack_1"
  input: "loss_1/concatenate_7_loss/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Mean"
  op: "Mean"
  input: "loss_1/concatenate_7_loss/strided_slice_1"
  input: "loss_1/concatenate_7_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Mean_1"
  op: "Mean"
  input: "loss_1/concatenate_7_loss/strided_slice"
  input: "loss_1/concatenate_7_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/sub"
  op: "Sub"
  input: "loss_1/concatenate_7_loss/Mean"
  input: "loss_1/concatenate_7_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Mean_2/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Mean_2"
  op: "Mean"
  input: "loss_1/concatenate_7_loss/sub"
  input: "loss_1/concatenate_7_loss/Mean_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/mul"
  op: "Mul"
  input: "loss_1/concatenate_7_loss/Mean_2"
  input: "concatenate_7_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/NotEqual"
  op: "NotEqual"
  input: "concatenate_7_sample_weights"
  input: "loss_1/concatenate_7_loss/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Cast"
  op: "Cast"
  input: "loss_1/concatenate_7_loss/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Mean_3"
  op: "Mean"
  input: "loss_1/concatenate_7_loss/Cast"
  input: "loss_1/concatenate_7_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/truediv"
  op: "RealDiv"
  input: "loss_1/concatenate_7_loss/mul"
  input: "loss_1/concatenate_7_loss/Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/concatenate_7_loss/Mean_4"
  op: "Mean"
  input: "loss_1/concatenate_7_loss/truediv"
  input: "loss_1/concatenate_7_loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_1/mul"
  op: "Mul"
  input: "loss_1/mul/x"
  input: "loss_1/concatenate_7_loss/Mean_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Adam_1/iterations"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Adam_1/lr"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/lr"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Adam_1/beta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "Adam_1/beta_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "Adam_1/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^Adam_1/beta_1/Assign"
  input: "^Adam_1/beta_2/Assign"
  input: "^Adam_1/decay/Assign"
  input: "^Adam_1/iterations/Assign"
  input: "^Adam_1/lr/Assign"
}
node {
  name: "HorovodBroadcast_alpha_0"
  op: "HorovodBroadcast"
  input: "alpha/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "alpha"
  input: "HorovodBroadcast_alpha_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@alpha"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_128to64_conv2d_1_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_128to64/conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "gModel_0/gLEnc_128to64/conv2d_1/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_128to64_conv2d_1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_128to64_conv2d_1_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_128to64/conv2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "gModel_0/gLEnc_128to64/conv2d_1/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_128to64_conv2d_1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_128to64_conv2d_2_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_128to64/conv2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "gModel_0/gLEnc_128to64/conv2d_2/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_128to64_conv2d_2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_128to64_conv2d_2_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_128to64/conv2d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "gModel_0/gLEnc_128to64/conv2d_2/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_128to64_conv2d_2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_128to64/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_64to32_conv2d_3_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_64to32/conv2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "gModel_0/gLEnc_64to32/conv2d_3/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_64to32_conv2d_3_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_64to32_conv2d_3_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_64to32/conv2d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "gModel_0/gLEnc_64to32/conv2d_3/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_64to32_conv2d_3_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_64to32_conv2d_4_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_64to32/conv2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "gModel_0/gLEnc_64to32/conv2d_4/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_64to32_conv2d_4_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_64to32_conv2d_4_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_64to32/conv2d_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "gModel_0/gLEnc_64to32/conv2d_4/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_64to32_conv2d_4_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_64to32/conv2d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_32to16_conv2d_5_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_32to16/conv2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "gModel_0/gLEnc_32to16/conv2d_5/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_32to16_conv2d_5_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_32to16_conv2d_5_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_32to16/conv2d_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "gModel_0/gLEnc_32to16/conv2d_5/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_32to16_conv2d_5_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_32to16_conv2d_6_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_32to16/conv2d_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "gModel_0/gLEnc_32to16/conv2d_6/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_32to16_conv2d_6_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_32to16_conv2d_6_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_32to16/conv2d_6/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "gModel_0/gLEnc_32to16/conv2d_6/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_32to16_conv2d_6_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_32to16/conv2d_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_16to8_conv2d_7_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_16to8/conv2d_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "gModel_0/gLEnc_16to8/conv2d_7/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_16to8_conv2d_7_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_16to8_conv2d_7_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_16to8/conv2d_7/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "gModel_0/gLEnc_16to8/conv2d_7/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_16to8_conv2d_7_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_7/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_16to8_conv2d_8_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_16to8/conv2d_8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "gModel_0/gLEnc_16to8/conv2d_8/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_16to8_conv2d_8_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_16to8_conv2d_8_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_16to8/conv2d_8/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "gModel_0/gLEnc_16to8/conv2d_8/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_16to8_conv2d_8_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_16to8/conv2d_8/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_8to4_conv2d_9_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_8to4/conv2d_9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "gModel_0/gLEnc_8to4/conv2d_9/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_8to4_conv2d_9_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_8to4_conv2d_9_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_8to4/conv2d_9/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "gModel_0/gLEnc_8to4/conv2d_9/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_8to4_conv2d_9_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_9/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_8to4_conv2d_10_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_8to4/conv2d_10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "gModel_0/gLEnc_8to4/conv2d_10/kernel"
  input: "HorovodBroadcast_gModel_0_gLEnc_8to4_conv2d_10_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLEnc_8to4_conv2d_10_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLEnc_8to4/conv2d_10/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "gModel_0/gLEnc_8to4/conv2d_10/bias"
  input: "HorovodBroadcast_gModel_0_gLEnc_8to4_conv2d_10_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLEnc_8to4/conv2d_10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLBott_4_conv2d_11_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLBott_4/conv2d_11/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "gModel_0/gLBott_4/conv2d_11/kernel"
  input: "HorovodBroadcast_gModel_0_gLBott_4_conv2d_11_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLBott_4_conv2d_11_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLBott_4/conv2d_11/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "gModel_0/gLBott_4/conv2d_11/bias"
  input: "HorovodBroadcast_gModel_0_gLBott_4_conv2d_11_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_11/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLBott_4_conv2d_12_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLBott_4/conv2d_12/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "gModel_0/gLBott_4/conv2d_12/kernel"
  input: "HorovodBroadcast_gModel_0_gLBott_4_conv2d_12_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLBott_4_conv2d_12_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLBott_4/conv2d_12/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "gModel_0/gLBott_4/conv2d_12/bias"
  input: "HorovodBroadcast_gModel_0_gLBott_4_conv2d_12_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLBott_4/conv2d_12/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_4to8_conv2d_13_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_4to8/conv2d_13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/conv2d_13/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_4to8_conv2d_13_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_4to8_conv2d_13_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_4to8/conv2d_13/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/conv2d_13/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_4to8_conv2d_13_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/conv2d_13/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_Variable_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
  input: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_group_normalization_1_gamma_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
  input: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_group_normalization_1_gamma_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_group_normalization_1_beta_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
  input: "HorovodBroadcast_gModel_0_gLDec_4to8_simple_conv_rn_n2d_1_group_normalization_1_beta_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_4to8/simple_conv_rn_n2d_1/group_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_8to16_conv2d_14_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_8to16/conv2d_14/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/conv2d_14/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_8to16_conv2d_14_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_8to16_conv2d_14_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_8to16/conv2d_14/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/conv2d_14/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_8to16_conv2d_14_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/conv2d_14/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_Variable_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
  input: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_group_normalization_2_gamma_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
  input: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_group_normalization_2_gamma_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_group_normalization_2_beta_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
  input: "HorovodBroadcast_gModel_0_gLDec_8to16_simple_conv_rn_n2d_2_group_normalization_2_beta_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_8to16/simple_conv_rn_n2d_2/group_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_16to32_conv2d_15_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_16to32/conv2d_15/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/conv2d_15/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_16to32_conv2d_15_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_16to32_conv2d_15_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_16to32/conv2d_15/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/conv2d_15/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_16to32_conv2d_15_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/conv2d_15/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_Variable_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
  input: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_group_normalization_3_gamma_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
  input: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_group_normalization_3_gamma_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_group_normalization_3_beta_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
  input: "HorovodBroadcast_gModel_0_gLDec_16to32_simple_conv_rn_n2d_3_group_normalization_3_beta_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_16to32/simple_conv_rn_n2d_3/group_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_32to64_conv2d_16_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_32to64/conv2d_16/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/conv2d_16/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_32to64_conv2d_16_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_32to64_conv2d_16_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_32to64/conv2d_16/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/conv2d_16/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_32to64_conv2d_16_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/conv2d_16/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_Variable_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
  input: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_group_normalization_4_gamma_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
  input: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_group_normalization_4_gamma_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_group_normalization_4_beta_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
  input: "HorovodBroadcast_gModel_0_gLDec_32to64_simple_conv_rn_n2d_4_group_normalization_4_beta_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_32to64/simple_conv_rn_n2d_4/group_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_toRGB_L_64_conv2d_17_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/toRGB_L_64/conv2d_17/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "gModel_0/toRGB_L_64/conv2d_17/kernel"
  input: "HorovodBroadcast_gModel_0_toRGB_L_64_conv2d_17_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_64/conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_toRGB_L_64_conv2d_17_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/toRGB_L_64/conv2d_17/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "gModel_0/toRGB_L_64/conv2d_17/bias"
  input: "HorovodBroadcast_gModel_0_toRGB_L_64_conv2d_17_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_64/conv2d_17/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_64to128_conv2d_18_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_64to128/conv2d_18/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/conv2d_18/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_64to128_conv2d_18_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_64to128_conv2d_18_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_64to128/conv2d_18/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/conv2d_18/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_64to128_conv2d_18_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/conv2d_18/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
  input: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
  input: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_Variable_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
  input: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_group_normalization_5_gamma_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_60"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
  input: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_group_normalization_5_gamma_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_group_normalization_5_beta_0"
  op: "HorovodBroadcast"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_61"
  op: "Assign"
  input: "gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
  input: "HorovodBroadcast_gModel_0_gLDec_64to128_simple_conv_rn_n2d_5_group_normalization_5_beta_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/gLDec_64to128/simple_conv_rn_n2d_5/group_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_toRGB_L_128_conv2d_19_kernel_0"
  op: "HorovodBroadcast"
  input: "gModel_0/toRGB_L_128/conv2d_19/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_62"
  op: "Assign"
  input: "gModel_0/toRGB_L_128/conv2d_19/kernel"
  input: "HorovodBroadcast_gModel_0_toRGB_L_128_conv2d_19_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_128/conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_gModel_0_toRGB_L_128_conv2d_19_bias_0"
  op: "HorovodBroadcast"
  input: "gModel_0/toRGB_L_128/conv2d_19/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_63"
  op: "Assign"
  input: "gModel_0/toRGB_L_128/conv2d_19/bias"
  input: "HorovodBroadcast_gModel_0_toRGB_L_128_conv2d_19_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gModel_0/toRGB_L_128/conv2d_19/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_conv3dsn_1_kernel_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN/conv3dsn_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_64"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/kernel"
  input: "HorovodBroadcast_Conv3DSN_conv3dsn_1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_conv3dsn_1_bias_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN/conv3dsn_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_65"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/bias"
  input: "HorovodBroadcast_Conv3DSN_conv3dsn_1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_conv3dsn_1_u_sn_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN/conv3dsn_1/u_sn/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_66"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/u_sn"
  input: "HorovodBroadcast_Conv3DSN_conv3dsn_1_u_sn_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_conv3dsn_1_Variable_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN/conv3dsn_1/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_67"
  op: "Assign"
  input: "Conv3DSN/conv3dsn_1/Variable"
  input: "HorovodBroadcast_Conv3DSN_conv3dsn_1_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN/conv3dsn_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_1_conv3dsn_2_kernel_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_1/conv3dsn_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_68"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/kernel"
  input: "HorovodBroadcast_Conv3DSN_1_conv3dsn_2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_1_conv3dsn_2_bias_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_1/conv3dsn_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_69"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/bias"
  input: "HorovodBroadcast_Conv3DSN_1_conv3dsn_2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_1_conv3dsn_2_u_sn_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_1/conv3dsn_2/u_sn/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_70"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/u_sn"
  input: "HorovodBroadcast_Conv3DSN_1_conv3dsn_2_u_sn_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_1_conv3dsn_2_Variable_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_1/conv3dsn_2/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_71"
  op: "Assign"
  input: "Conv3DSN_1/conv3dsn_2/Variable"
  input: "HorovodBroadcast_Conv3DSN_1_conv3dsn_2_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_1/conv3dsn_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_2_conv3dsn_3_kernel_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_2/conv3dsn_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_72"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/kernel"
  input: "HorovodBroadcast_Conv3DSN_2_conv3dsn_3_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_2_conv3dsn_3_bias_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_2/conv3dsn_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_73"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/bias"
  input: "HorovodBroadcast_Conv3DSN_2_conv3dsn_3_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_2_conv3dsn_3_u_sn_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_2/conv3dsn_3/u_sn/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_74"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/u_sn"
  input: "HorovodBroadcast_Conv3DSN_2_conv3dsn_3_u_sn_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_2_conv3dsn_3_Variable_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_2/conv3dsn_3/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_75"
  op: "Assign"
  input: "Conv3DSN_2/conv3dsn_3/Variable"
  input: "HorovodBroadcast_Conv3DSN_2_conv3dsn_3_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_2/conv3dsn_3/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_3_conv3dsn_4_kernel_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_3/conv3dsn_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_76"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/kernel"
  input: "HorovodBroadcast_Conv3DSN_3_conv3dsn_4_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_3_conv3dsn_4_bias_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_3/conv3dsn_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_77"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/bias"
  input: "HorovodBroadcast_Conv3DSN_3_conv3dsn_4_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_3_conv3dsn_4_u_sn_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_3/conv3dsn_4/u_sn/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_78"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/u_sn"
  input: "HorovodBroadcast_Conv3DSN_3_conv3dsn_4_u_sn_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_3_conv3dsn_4_Variable_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_3/conv3dsn_4/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_79"
  op: "Assign"
  input: "Conv3DSN_3/conv3dsn_4/Variable"
  input: "HorovodBroadcast_Conv3DSN_3_conv3dsn_4_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_3/conv3dsn_4/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_4_conv3dsn_5_kernel_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_4/conv3dsn_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_80"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/kernel"
  input: "HorovodBroadcast_Conv3DSN_4_conv3dsn_5_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_4_conv3dsn_5_bias_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_4/conv3dsn_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_81"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/bias"
  input: "HorovodBroadcast_Conv3DSN_4_conv3dsn_5_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_4_conv3dsn_5_u_sn_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_4/conv3dsn_5/u_sn/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_82"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/u_sn"
  input: "HorovodBroadcast_Conv3DSN_4_conv3dsn_5_u_sn_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_4_conv3dsn_5_Variable_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_4/conv3dsn_5/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_83"
  op: "Assign"
  input: "Conv3DSN_4/conv3dsn_5/Variable"
  input: "HorovodBroadcast_Conv3DSN_4_conv3dsn_5_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_4/conv3dsn_5/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_5_conv3dsn_6_kernel_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_5/conv3dsn_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_84"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/kernel"
  input: "HorovodBroadcast_Conv3DSN_5_conv3dsn_6_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_5_conv3dsn_6_bias_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_5/conv3dsn_6/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_85"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/bias"
  input: "HorovodBroadcast_Conv3DSN_5_conv3dsn_6_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_5_conv3dsn_6_u_sn_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_5/conv3dsn_6/u_sn/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_86"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/u_sn"
  input: "HorovodBroadcast_Conv3DSN_5_conv3dsn_6_u_sn_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Conv3DSN_5_conv3dsn_6_Variable_0"
  op: "HorovodBroadcast"
  input: "Conv3DSN_5/conv3dsn_6/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_87"
  op: "Assign"
  input: "Conv3DSN_5/conv3dsn_6/Variable"
  input: "HorovodBroadcast_Conv3DSN_5_conv3dsn_6_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3DSN_5/conv3dsn_6/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_dense_sn_1_kernel_0"
  op: "HorovodBroadcast"
  input: "dense_sn_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_88"
  op: "Assign"
  input: "dense_sn_1/kernel"
  input: "HorovodBroadcast_dense_sn_1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_dense_sn_1_bias_0"
  op: "HorovodBroadcast"
  input: "dense_sn_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_89"
  op: "Assign"
  input: "dense_sn_1/bias"
  input: "HorovodBroadcast_dense_sn_1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_dense_sn_1_u_sn_0"
  op: "HorovodBroadcast"
  input: "dense_sn_1/u_sn/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_90"
  op: "Assign"
  input: "dense_sn_1/u_sn"
  input: "HorovodBroadcast_dense_sn_1_u_sn_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_dense_sn_1_Variable_0"
  op: "HorovodBroadcast"
  input: "dense_sn_1/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_91"
  op: "Assign"
  input: "dense_sn_1/Variable"
  input: "HorovodBroadcast_dense_sn_1_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_dense_sn_2_kernel_0"
  op: "HorovodBroadcast"
  input: "dense_sn_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_92"
  op: "Assign"
  input: "dense_sn_2/kernel"
  input: "HorovodBroadcast_dense_sn_2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_dense_sn_2_bias_0"
  op: "HorovodBroadcast"
  input: "dense_sn_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_93"
  op: "Assign"
  input: "dense_sn_2/bias"
  input: "HorovodBroadcast_dense_sn_2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_dense_sn_2_u_sn_0"
  op: "HorovodBroadcast"
  input: "dense_sn_2/u_sn/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_94"
  op: "Assign"
  input: "dense_sn_2/u_sn"
  input: "HorovodBroadcast_dense_sn_2_u_sn_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/u_sn"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_dense_sn_2_Variable_0"
  op: "HorovodBroadcast"
  input: "dense_sn_2/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_95"
  op: "Assign"
  input: "dense_sn_2/Variable"
  input: "HorovodBroadcast_dense_sn_2_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_sn_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block1_conv1_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block1_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_96"
  op: "Assign"
  input: "VGG_128/block1_conv1/kernel"
  input: "HorovodBroadcast_VGG_128_block1_conv1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block1_conv1_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block1_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_97"
  op: "Assign"
  input: "VGG_128/block1_conv1/bias"
  input: "HorovodBroadcast_VGG_128_block1_conv1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block1_conv2_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block1_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_98"
  op: "Assign"
  input: "VGG_128/block1_conv2/kernel"
  input: "HorovodBroadcast_VGG_128_block1_conv2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block1_conv2_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block1_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_99"
  op: "Assign"
  input: "VGG_128/block1_conv2/bias"
  input: "HorovodBroadcast_VGG_128_block1_conv2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block1_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block2_conv1_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block2_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_100"
  op: "Assign"
  input: "VGG_128/block2_conv1/kernel"
  input: "HorovodBroadcast_VGG_128_block2_conv1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block2_conv1_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block2_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_101"
  op: "Assign"
  input: "VGG_128/block2_conv1/bias"
  input: "HorovodBroadcast_VGG_128_block2_conv1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block2_conv2_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block2_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_102"
  op: "Assign"
  input: "VGG_128/block2_conv2/kernel"
  input: "HorovodBroadcast_VGG_128_block2_conv2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block2_conv2_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block2_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_103"
  op: "Assign"
  input: "VGG_128/block2_conv2/bias"
  input: "HorovodBroadcast_VGG_128_block2_conv2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block2_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block3_conv1_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block3_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_104"
  op: "Assign"
  input: "VGG_128/block3_conv1/kernel"
  input: "HorovodBroadcast_VGG_128_block3_conv1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block3_conv1_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block3_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_105"
  op: "Assign"
  input: "VGG_128/block3_conv1/bias"
  input: "HorovodBroadcast_VGG_128_block3_conv1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block3_conv2_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block3_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_106"
  op: "Assign"
  input: "VGG_128/block3_conv2/kernel"
  input: "HorovodBroadcast_VGG_128_block3_conv2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block3_conv2_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block3_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_107"
  op: "Assign"
  input: "VGG_128/block3_conv2/bias"
  input: "HorovodBroadcast_VGG_128_block3_conv2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block3_conv3_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block3_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_108"
  op: "Assign"
  input: "VGG_128/block3_conv3/kernel"
  input: "HorovodBroadcast_VGG_128_block3_conv3_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block3_conv3_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block3_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_109"
  op: "Assign"
  input: "VGG_128/block3_conv3/bias"
  input: "HorovodBroadcast_VGG_128_block3_conv3_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block3_conv4_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block3_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_110"
  op: "Assign"
  input: "VGG_128/block3_conv4/kernel"
  input: "HorovodBroadcast_VGG_128_block3_conv4_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block3_conv4_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block3_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_111"
  op: "Assign"
  input: "VGG_128/block3_conv4/bias"
  input: "HorovodBroadcast_VGG_128_block3_conv4_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block3_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block4_conv1_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block4_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_112"
  op: "Assign"
  input: "VGG_128/block4_conv1/kernel"
  input: "HorovodBroadcast_VGG_128_block4_conv1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block4_conv1_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block4_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_113"
  op: "Assign"
  input: "VGG_128/block4_conv1/bias"
  input: "HorovodBroadcast_VGG_128_block4_conv1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block4_conv2_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block4_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_114"
  op: "Assign"
  input: "VGG_128/block4_conv2/kernel"
  input: "HorovodBroadcast_VGG_128_block4_conv2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block4_conv2_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block4_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_115"
  op: "Assign"
  input: "VGG_128/block4_conv2/bias"
  input: "HorovodBroadcast_VGG_128_block4_conv2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block4_conv3_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block4_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_116"
  op: "Assign"
  input: "VGG_128/block4_conv3/kernel"
  input: "HorovodBroadcast_VGG_128_block4_conv3_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block4_conv3_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block4_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_117"
  op: "Assign"
  input: "VGG_128/block4_conv3/bias"
  input: "HorovodBroadcast_VGG_128_block4_conv3_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block4_conv4_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block4_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_118"
  op: "Assign"
  input: "VGG_128/block4_conv4/kernel"
  input: "HorovodBroadcast_VGG_128_block4_conv4_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block4_conv4_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block4_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_119"
  op: "Assign"
  input: "VGG_128/block4_conv4/bias"
  input: "HorovodBroadcast_VGG_128_block4_conv4_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block4_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block5_conv1_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block5_conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_120"
  op: "Assign"
  input: "VGG_128/block5_conv1/kernel"
  input: "HorovodBroadcast_VGG_128_block5_conv1_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block5_conv1_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block5_conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_121"
  op: "Assign"
  input: "VGG_128/block5_conv1/bias"
  input: "HorovodBroadcast_VGG_128_block5_conv1_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block5_conv2_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block5_conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_122"
  op: "Assign"
  input: "VGG_128/block5_conv2/kernel"
  input: "HorovodBroadcast_VGG_128_block5_conv2_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block5_conv2_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block5_conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_123"
  op: "Assign"
  input: "VGG_128/block5_conv2/bias"
  input: "HorovodBroadcast_VGG_128_block5_conv2_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block5_conv3_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block5_conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_124"
  op: "Assign"
  input: "VGG_128/block5_conv3/kernel"
  input: "HorovodBroadcast_VGG_128_block5_conv3_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block5_conv3_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block5_conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_125"
  op: "Assign"
  input: "VGG_128/block5_conv3/bias"
  input: "HorovodBroadcast_VGG_128_block5_conv3_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block5_conv4_kernel_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block5_conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_126"
  op: "Assign"
  input: "VGG_128/block5_conv4/kernel"
  input: "HorovodBroadcast_VGG_128_block5_conv4_kernel_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_VGG_128_block5_conv4_bias_0"
  op: "HorovodBroadcast"
  input: "VGG_128/block5_conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_127"
  op: "Assign"
  input: "VGG_128/block5_conv4/bias"
  input: "HorovodBroadcast_VGG_128_block5_conv4_bias_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@VGG_128/block5_conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_discriminator_conv3dsn_1_Variable_0"
  op: "HorovodBroadcast"
  input: "discriminator/conv3dsn_1/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_128"
  op: "Assign"
  input: "discriminator/conv3dsn_1/Variable"
  input: "HorovodBroadcast_discriminator_conv3dsn_1_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_discriminator_conv3dsn_2_Variable_0"
  op: "HorovodBroadcast"
  input: "discriminator/conv3dsn_2/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_129"
  op: "Assign"
  input: "discriminator/conv3dsn_2/Variable"
  input: "HorovodBroadcast_discriminator_conv3dsn_2_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_discriminator_conv3dsn_5_Variable_0"
  op: "HorovodBroadcast"
  input: "discriminator/conv3dsn_5/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_130"
  op: "Assign"
  input: "discriminator/conv3dsn_5/Variable"
  input: "HorovodBroadcast_discriminator_conv3dsn_5_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_5/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_discriminator_conv3dsn_3_Variable_0"
  op: "HorovodBroadcast"
  input: "discriminator/conv3dsn_3/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_131"
  op: "Assign"
  input: "discriminator/conv3dsn_3/Variable"
  input: "HorovodBroadcast_discriminator_conv3dsn_3_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_3/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_discriminator_conv3dsn_6_Variable_0"
  op: "HorovodBroadcast"
  input: "discriminator/conv3dsn_6/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_132"
  op: "Assign"
  input: "discriminator/conv3dsn_6/Variable"
  input: "HorovodBroadcast_discriminator_conv3dsn_6_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_6/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_discriminator_conv3dsn_4_Variable_0"
  op: "HorovodBroadcast"
  input: "discriminator/conv3dsn_4/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_133"
  op: "Assign"
  input: "discriminator/conv3dsn_4/Variable"
  input: "HorovodBroadcast_discriminator_conv3dsn_4_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/conv3dsn_4/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_discriminator_dense_sn_1_Variable_0"
  op: "HorovodBroadcast"
  input: "discriminator/dense_sn_1/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_134"
  op: "Assign"
  input: "discriminator/dense_sn_1/Variable"
  input: "HorovodBroadcast_discriminator_dense_sn_1_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/dense_sn_1/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_discriminator_dense_sn_2_Variable_0"
  op: "HorovodBroadcast"
  input: "discriminator/dense_sn_2/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_135"
  op: "Assign"
  input: "discriminator/dense_sn_2/Variable"
  input: "HorovodBroadcast_discriminator_dense_sn_2_Variable_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/dense_sn_2/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_iterations_0"
  op: "HorovodBroadcast"
  input: "Adam/iterations/read"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_136"
  op: "Assign"
  input: "Adam/iterations"
  input: "HorovodBroadcast_Adam_iterations_0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_lr_0"
  op: "HorovodBroadcast"
  input: "Adam/lr/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_137"
  op: "Assign"
  input: "Adam/lr"
  input: "HorovodBroadcast_Adam_lr_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/lr"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_beta_1_0"
  op: "HorovodBroadcast"
  input: "Adam/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_138"
  op: "Assign"
  input: "Adam/beta_1"
  input: "HorovodBroadcast_Adam_beta_1_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_beta_2_0"
  op: "HorovodBroadcast"
  input: "Adam/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_139"
  op: "Assign"
  input: "Adam/beta_2"
  input: "HorovodBroadcast_Adam_beta_2_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_decay_0"
  op: "HorovodBroadcast"
  input: "Adam/decay/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_140"
  op: "Assign"
  input: "Adam/decay"
  input: "HorovodBroadcast_Adam_decay_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_1_iterations_0"
  op: "HorovodBroadcast"
  input: "Adam_1/iterations/read"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_141"
  op: "Assign"
  input: "Adam_1/iterations"
  input: "HorovodBroadcast_Adam_1_iterations_0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_1_lr_0"
  op: "HorovodBroadcast"
  input: "Adam_1/lr/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_142"
  op: "Assign"
  input: "Adam_1/lr"
  input: "HorovodBroadcast_Adam_1_lr_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/lr"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_1_beta_1_0"
  op: "HorovodBroadcast"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_143"
  op: "Assign"
  input: "Adam_1/beta_1"
  input: "HorovodBroadcast_Adam_1_beta_1_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_1_beta_2_0"
  op: "HorovodBroadcast"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_144"
  op: "Assign"
  input: "Adam_1/beta_2"
  input: "HorovodBroadcast_Adam_1_beta_2_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "HorovodBroadcast_Adam_1_decay_0"
  op: "HorovodBroadcast"
  input: "Adam_1/decay/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "root_rank"
    value {
      i: 0
    }
  }
}
node {
  name: "Assign_145"
  op: "Assign"
  input: "Adam_1/decay"
  input: "HorovodBroadcast_Adam_1_decay_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Assign"
  input: "^Assign_1"
  input: "^Assign_10"
  input: "^Assign_100"
  input: "^Assign_101"
  input: "^Assign_102"
  input: "^Assign_103"
  input: "^Assign_104"
  input: "^Assign_105"
  input: "^Assign_106"
  input: "^Assign_107"
  input: "^Assign_108"
  input: "^Assign_109"
  input: "^Assign_11"
  input: "^Assign_110"
  input: "^Assign_111"
  input: "^Assign_112"
  input: "^Assign_113"
  input: "^Assign_114"
  input: "^Assign_115"
  input: "^Assign_116"
  input: "^Assign_117"
  input: "^Assign_118"
  input: "^Assign_119"
  input: "^Assign_12"
  input: "^Assign_120"
  input: "^Assign_121"
  input: "^Assign_122"
  input: "^Assign_123"
  input: "^Assign_124"
  input: "^Assign_125"
  input: "^Assign_126"
  input: "^Assign_127"
  input: "^Assign_128"
  input: "^Assign_129"
  input: "^Assign_13"
  input: "^Assign_130"
  input: "^Assign_131"
  input: "^Assign_132"
  input: "^Assign_133"
  input: "^Assign_134"
  input: "^Assign_135"
  input: "^Assign_136"
  input: "^Assign_137"
  input: "^Assign_138"
  input: "^Assign_139"
  input: "^Assign_14"
  input: "^Assign_140"
  input: "^Assign_141"
  input: "^Assign_142"
  input: "^Assign_143"
  input: "^Assign_144"
  input: "^Assign_145"
  input: "^Assign_15"
  input: "^Assign_16"
  input: "^Assign_17"
  input: "^Assign_18"
  input: "^Assign_19"
  input: "^Assign_2"
  input: "^Assign_20"
  input: "^Assign_21"
  input: "^Assign_22"
  input: "^Assign_23"
  input: "^Assign_24"
  input: "^Assign_25"
  input: "^Assign_26"
  input: "^Assign_27"
  input: "^Assign_28"
  input: "^Assign_29"
  input: "^Assign_3"
  input: "^Assign_30"
  input: "^Assign_31"
  input: "^Assign_32"
  input: "^Assign_33"
  input: "^Assign_34"
  input: "^Assign_35"
  input: "^Assign_36"
  input: "^Assign_37"
  input: "^Assign_38"
  input: "^Assign_39"
  input: "^Assign_4"
  input: "^Assign_40"
  input: "^Assign_41"
  input: "^Assign_42"
  input: "^Assign_43"
  input: "^Assign_44"
  input: "^Assign_45"
  input: "^Assign_46"
  input: "^Assign_47"
  input: "^Assign_48"
  input: "^Assign_49"
  input: "^Assign_5"
  input: "^Assign_50"
  input: "^Assign_51"
  input: "^Assign_52"
  input: "^Assign_53"
  input: "^Assign_54"
  input: "^Assign_55"
  input: "^Assign_56"
  input: "^Assign_57"
  input: "^Assign_58"
  input: "^Assign_59"
  input: "^Assign_6"
  input: "^Assign_60"
  input: "^Assign_61"
  input: "^Assign_62"
  input: "^Assign_63"
  input: "^Assign_64"
  input: "^Assign_65"
  input: "^Assign_66"
  input: "^Assign_67"
  input: "^Assign_68"
  input: "^Assign_69"
  input: "^Assign_7"
  input: "^Assign_70"
  input: "^Assign_71"
  input: "^Assign_72"
  input: "^Assign_73"
  input: "^Assign_74"
  input: "^Assign_75"
  input: "^Assign_76"
  input: "^Assign_77"
  input: "^Assign_78"
  input: "^Assign_79"
  input: "^Assign_8"
  input: "^Assign_80"
  input: "^Assign_81"
  input: "^Assign_82"
  input: "^Assign_83"
  input: "^Assign_84"
  input: "^Assign_85"
  input: "^Assign_86"
  input: "^Assign_87"
  input: "^Assign_88"
  input: "^Assign_89"
  input: "^Assign_9"
  input: "^Assign_90"
  input: "^Assign_91"
  input: "^Assign_92"
  input: "^Assign_93"
  input: "^Assign_94"
  input: "^Assign_95"
  input: "^Assign_96"
  input: "^Assign_97"
  input: "^Assign_98"
  input: "^Assign_99"
}
versions {
  producer: 26
}
